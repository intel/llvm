// Copyright (C) Codeplay Software Limited
//
// Licensed under the Apache License, Version 2.0 (the "License") with LLVM
// Exceptions; you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/codeplaysoftware/oneapi-construction-kit/blob/main/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.
//
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// This is a simplified version of LLVMs llvm/lib/Passes/PassRegistry.def. It
// outlines all vecz-specific passes (FIXME: not analyses).
#ifndef MODULE_PASS
#define MODULE_PASS(NAME, CREATE_PASS)
#endif
MODULE_PASS("builtin-inlining", BuiltinInliningPass())
MODULE_PASS("define-builtins", DefineInternalBuiltinsPass())
#undef MODULE_PASS

#ifndef FUNCTION_PASS
#define FUNCTION_PASS(NAME, CREATE_PASS)
#endif
FUNCTION_PASS("vecz-mem2reg", BasicMem2RegPass())
FUNCTION_PASS("pre-linearize", PreLinearizePass())
FUNCTION_PASS("remove-int-ptr", RemoveIntPtrPass())
FUNCTION_PASS("squash-small-vecs", SquashSmallVectorsPass())
FUNCTION_PASS("uniform-reassoc", UniformReassociationPass())
FUNCTION_PASS("ternary-transform", TernaryTransformPass())
FUNCTION_PASS("cfg-convert", ControlFlowConversionPass())
FUNCTION_PASS("cleanup-divergence", DivergenceCleanupPass())
FUNCTION_PASS("gep-elim", CommonGEPEliminationPass())
FUNCTION_PASS("scalarize", ScalarizationPass())
FUNCTION_PASS("mask-memops", SimplifyMaskedMemOpsPass())
FUNCTION_PASS("packetizer", PacketizationPass())
FUNCTION_PASS("inline-post-vecz", InlinePostVectorizationPass())
FUNCTION_PASS("interleave-combine-loads", InterleavedGroupCombinePass(eInterleavedLoad))
FUNCTION_PASS("interleave-combine-stores", InterleavedGroupCombinePass(eInterleavedStore))

FUNCTION_PASS("print<strides>", StrideAnalysisPrinterPass(llvm::dbgs()))
#undef FUNCTION_PASS

#ifndef LOOP_PASS
#define LOOP_PASS(NAME, CREATE_PASS)
#endif
LOOP_PASS("simplify-infinite-loops", SimplifyInfiniteLoopPass())
LOOP_PASS("vecz-loop-rotate", VeczLoopRotatePass())
#undef LOOP_PASS
