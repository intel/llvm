; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature
; RUN: opt < %s -deadargelim -S | FileCheck %s --check-prefixes=CHECK
; RUN: opt < %s -deadargelim-sycl -S | FileCheck %s --check-prefixes=CHECK-SYCL

; This test checks eliminating dead arguments
; from SPIR kernel functions in SYCL environment.

target triple = "spir64-unknown-unknown-sycldevice"

define weak_odr spir_kernel void @SpirKernel1(float %arg1, float %arg2) {
; CHECK-LABEL: define {{[^@]+}}@SpirKernel1
; CHECK-SAME: (float [[ARG1:%.*]], float [[ARG2:%.*]])
; CHECK-NEXT:    call void @foo(float [[ARG1]])
; CHECK-NEXT:    ret void
;
; CHECK-SYCL-LABEL: define {{[^@]+}}@SpirKernel1
; CHECK-SYCL-SAME: (float [[ARG1:%.*]]) !spir_kernel_omit_args ![[KERN_ARGS1:[0-9]]]
; CHECK-SYCL-NEXT:    call void @foo(float [[ARG1]])
; CHECK-SYCL-NEXT:    ret void

  call void @foo(float %arg1)
  ret void
}

define weak_odr spir_kernel void @SpirKernel2(float %arg1, float %arg2) {
; CHECK-LABEL: define {{[^@]+}}@SpirKernel2
; CHECK-SAME: (float [[ARG1:%.*]], float [[ARG2:%.*]])
; CHECK-NEXT:    call void @foo(float [[ARG2]])
; CHECK-NEXT:    ret void
;
; CHECK-SYCL-LABEL: define {{[^@]+}}@SpirKernel2
; CHECK-SYCL-SAME: (float [[ARG2:%.*]]) !spir_kernel_omit_args ![[KERN_ARGS2:[0-9]]]
; CHECK-SYCL-NEXT:    call void @foo(float [[ARG2]])
; CHECK-SYCL-NEXT:    ret void

  call void @foo(float %arg2)
  ret void
}

; CHECK-SYCL: ![[KERN_ARGS1]] = !{i1 false, i1 true}
; CHECK-SYCL: ![[KERN_ARGS2]] = !{i1 true, i1 false}

declare void @foo(float %arg)
