; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes="memcpyopt" -S %s | FileCheck %s

; memcpyopt lifetime skipping, is moving the lifetime.start before the def
; of %tm3.

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.foo = type { ptr, ptr, i64, i64 }

declare dso_local i32 @pluto(...)

define dso_local void @wombat(ptr %meow) local_unnamed_addr {
; CHECK-LABEL: @wombat(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TM:%.*]] = alloca [[STRUCT_FOO:%.*]], align 8
; CHECK-NEXT:    [[TM1:%.*]] = alloca [[STRUCT_FOO]], align 8
; CHECK-NEXT:    [[TM2:%.*]] = bitcast ptr [[TM1]] to ptr
; CHECK-NEXT:    call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) [[TM2]], ptr noundef nonnull align 8 dereferenceable(32) [[MEOW:%.*]], i64 32, i1 false)
; CHECK-NEXT:    [[TM3:%.*]] = bitcast ptr [[TM]] to ptr
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 32, ptr nonnull [[TM3]])
; CHECK-NEXT:    call void @llvm.memcpy.p0.p0.i64(ptr align 8 [[TM3]], ptr align 8 [[MEOW]], i64 32, i1 false)
; CHECK-NEXT:    ret void
;
bb:
  %tm = alloca %struct.foo, align 8
  %tm1 = alloca %struct.foo, align 8
  %tm2 = bitcast ptr %tm1 to ptr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %tm2, ptr noundef nonnull align 8 dereferenceable(32) %meow, i64 32, i1 false)
  %tm3 = bitcast ptr %tm to ptr
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %tm3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %tm3, ptr noundef nonnull align 8 dereferenceable(32) %tm2, i64 32, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
