; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=sycl-optimize-barriers -S < %s | FileCheck %s

; ModuleID = 'test-sycl-spir64-unknown-unknown.bc'
source_filename = "test.cpp"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64-G1"
target triple = "spir64-unknown-unknown"

$_ZTSZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_EUlNS0_7nd_itemILi1EEEE_ = comdat any

@__spirv_BuiltInWorkgroupId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInLocalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32
@__spirv_BuiltInGlobalSize = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent mustprogress norecurse nounwind
define weak_odr dso_local spir_kernel void @_ZTSZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_EUlNS0_7nd_itemILi1EEEE_(ptr addrspace(3) noundef align 4 %_arg_local, ptr addrspace(1) noundef align 4 %_arg_input, ptr addrspace(1) noundef align 4 %_arg_output) local_unnamed_addr #0 comdat !kernel_arg_buffer_location !6 !kernel_arg_runtime_aligned !7 !kernel_arg_exclusive_ptr !7 !sycl_fixed_targets !8 !sycl_kernel_omit_args !9 {
; CHECK-LABEL: define weak_odr dso_local spir_kernel void @_ZTSZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_EUlNS0_7nd_itemILi1EEEE_(
; CHECK-SAME: ptr addrspace(3) noundef align 4 [[_ARG_LOCAL:%.*]], ptr addrspace(1) noundef align 4 [[_ARG_INPUT:%.*]], ptr addrspace(1) noundef align 4 [[_ARG_OUTPUT:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] comdat !kernel_arg_buffer_location [[META6:![0-9]+]] !kernel_arg_runtime_aligned [[META7:![0-9]+]] !kernel_arg_exclusive_ptr [[META7]] !sycl_fixed_targets [[META8:![0-9]+]] !sycl_kernel_omit_args [[META9:![0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    [[TMP0:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32, !noalias [[META10:![0-9]+]]
; CHECK-NEXT:    [[TMP1:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32
; CHECK-NEXT:    [[ARRAYIDX_I16:%.*]] = getelementptr inbounds nuw float, ptr addrspace(3) [[_ARG_LOCAL]], i64 [[TMP1]]
; CHECK-NEXT:    [[TMP2:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalSize, align 32
; CHECK-NEXT:    br label %[[FOR_COND_I:.*]]
; CHECK:       [[FOR_COND_I]]:
; CHECK-NEXT:    [[I_0_IN_I:%.*]] = phi i64 [ [[TMP0]], %[[ENTRY]] ], [ [[ADD_I:%.*]], %[[FOR_BODY_I:.*]] ]
; CHECK-NEXT:    [[I_0_I:%.*]] = trunc i64 [[I_0_IN_I]] to i32
; CHECK-NEXT:    [[CMP_I:%.*]] = icmp slt i32 [[I_0_I]], 262144
; CHECK-NEXT:    br i1 [[CMP_I]], label %[[FOR_BODY_I]], label %[[FOR_COND_CLEANUP_I:.*]]
; CHECK:       [[FOR_COND_CLEANUP_I]]:
; CHECK-NEXT:    tail call spir_func void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 912) #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    [[TMP3:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !noalias [[META17:![0-9]+]]
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr float, ptr addrspace(3) [[_ARG_LOCAL]], i64 [[TMP3]]
; CHECK-NEXT:    br label %[[FOR_COND9_I:.*]]
; CHECK:       [[FOR_BODY_I]]:
; CHECK-NEXT:    [[SEXT_I:%.*]] = shl i64 [[I_0_IN_I]], 32
; CHECK-NEXT:    [[IDXPROM_I:%.*]] = ashr exact i64 [[SEXT_I]], 32
; CHECK-NEXT:    [[ARRAYIDX_I:%.*]] = getelementptr inbounds float, ptr addrspace(1) [[_ARG_INPUT]], i64 [[IDXPROM_I]]
; CHECK-NEXT:    [[TMP5:%.*]] = load float, ptr addrspace(1) [[ARRAYIDX_I]], align 4, !tbaa [[TBAA24:![0-9]+]]
; CHECK-NEXT:    store float [[TMP5]], ptr addrspace(3) [[ARRAYIDX_I16]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    [[ADD_I]] = add i64 [[IDXPROM_I]], [[TMP2]]
; CHECK-NEXT:    br label %[[FOR_COND_I]], !llvm.loop [[LOOP28:![0-9]+]]
; CHECK:       [[FOR_COND9_I]]:
; CHECK-NEXT:    [[OFFSET_0_I:%.*]] = phi i32 [ 1, %[[FOR_COND_CLEANUP_I]] ], [ [[MUL_I:%.*]], %[[FOR_BODY13_I:.*]] ]
; CHECK-NEXT:    [[CMP10_I:%.*]] = icmp samesign ult i32 [[OFFSET_0_I]], 256
; CHECK-NEXT:    br i1 [[CMP10_I]], label %[[FOR_BODY13_I]], label %[[FOR_COND_CLEANUP11_I:.*]]
; CHECK:       [[FOR_COND_CLEANUP11_I]]:
; CHECK-NEXT:    [[TMP6:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !noalias [[META30:![0-9]+]]
; CHECK-NEXT:    [[CMP_I18:%.*]] = icmp eq i64 [[TMP6]], 0
; CHECK-NEXT:    br i1 [[CMP_I18]], label %[[IF_THEN_I:.*]], label %[[_ZZZ4MAINENKULRN4SYCL3_V17HANDLEREE_CLES2_ENKULNS0_7ND_ITEMILI1EEEE_CLES5__EXIT:.*]]
; CHECK:       [[FOR_BODY13_I]]:
; CHECK-NEXT:    [[CONV17_I:%.*]] = zext nneg i32 [[OFFSET_0_I]] to i64
; CHECK-NEXT:    [[ARRAYIDX_I21:%.*]] = getelementptr float, ptr addrspace(3) [[TMP4]], i64 [[CONV17_I]]
; CHECK-NEXT:    [[TMP7:%.*]] = load float, ptr addrspace(3) [[ARRAYIDX_I21]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    [[TMP8:%.*]] = load float, ptr addrspace(3) [[TMP4]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    [[ADD24_I:%.*]] = fadd float [[TMP8]], [[TMP7]]
; CHECK-NEXT:    store float [[ADD24_I]], ptr addrspace(3) [[TMP4]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    tail call spir_func void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 400) #[[ATTR2]]
; CHECK-NEXT:    [[MUL_I]] = shl nuw nsw i32 [[OFFSET_0_I]], 1
; CHECK-NEXT:    br label %[[FOR_COND9_I]], !llvm.loop [[LOOP37:![0-9]+]]
; CHECK:       [[IF_THEN_I]]:
; CHECK-NEXT:    [[TMP9:%.*]] = load float, ptr addrspace(3) [[_ARG_LOCAL]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    [[TMP10:%.*]] = load i64, ptr addrspace(1) @__spirv_BuiltInWorkgroupId, align 32, !noalias [[META38:![0-9]+]]
; CHECK-NEXT:    [[ARRAYIDX34_I:%.*]] = getelementptr inbounds float, ptr addrspace(1) [[_ARG_OUTPUT]], i64 [[TMP10]]
; CHECK-NEXT:    store float [[TMP9]], ptr addrspace(1) [[ARRAYIDX34_I]], align 4, !tbaa [[TBAA24]]
; CHECK-NEXT:    br label %[[_ZZZ4MAINENKULRN4SYCL3_V17HANDLEREE_CLES2_ENKULNS0_7ND_ITEMILI1EEEE_CLES5__EXIT]]
; CHECK:       [[_ZZZ4MAINENKULRN4SYCL3_V17HANDLEREE_CLES2_ENKULNS0_7ND_ITEMILI1EEEE_CLES5__EXIT]]:
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalInvocationId, align 32, !noalias !10
  %1 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32
  %arrayidx.i16 = getelementptr inbounds nuw float, ptr addrspace(3) %_arg_local, i64 %1
  %2 = load i64, ptr addrspace(1) @__spirv_BuiltInGlobalSize, align 32
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %entry
  %i.0.in.i = phi i64 [ %0, %entry ], [ %add.i, %for.body.i ]
  %i.0.i = trunc i64 %i.0.in.i to i32
  %cmp.i = icmp slt i32 %i.0.i, 262144
  br i1 %cmp.i, label %for.body.i, label %for.cond.cleanup.i

for.cond.cleanup.i:                               ; preds = %for.cond.i
  tail call spir_func void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 912) #2
  %3 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !noalias !17
  %4 = getelementptr float, ptr addrspace(3) %_arg_local, i64 %3
  br label %for.cond9.i

for.body.i:                                       ; preds = %for.cond.i
  %sext.i = shl i64 %i.0.in.i, 32
  %idxprom.i = ashr exact i64 %sext.i, 32
  %arrayidx.i = getelementptr inbounds float, ptr addrspace(1) %_arg_input, i64 %idxprom.i
  %5 = load float, ptr addrspace(1) %arrayidx.i, align 4, !tbaa !24
  store float %5, ptr addrspace(3) %arrayidx.i16, align 4, !tbaa !24
  %add.i = add i64 %idxprom.i, %2
  br label %for.cond.i, !llvm.loop !28

for.cond9.i:                                      ; preds = %for.body13.i, %for.cond.cleanup.i
  %offset.0.i = phi i32 [ 1, %for.cond.cleanup.i ], [ %mul.i, %for.body13.i ]
  %cmp10.i = icmp samesign ult i32 %offset.0.i, 256
  br i1 %cmp10.i, label %for.body13.i, label %for.cond.cleanup11.i

for.cond.cleanup11.i:                             ; preds = %for.cond9.i
  %6 = load i64, ptr addrspace(1) @__spirv_BuiltInLocalInvocationId, align 32, !noalias !30
  %cmp.i18 = icmp eq i64 %6, 0
  br i1 %cmp.i18, label %if.then.i, label %_ZZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_ENKUlNS0_7nd_itemILi1EEEE_clES5_.exit

for.body13.i:                                     ; preds = %for.cond9.i
  %conv17.i = zext nneg i32 %offset.0.i to i64
  %arrayidx.i21 = getelementptr float, ptr addrspace(3) %4, i64 %conv17.i
  %7 = load float, ptr addrspace(3) %arrayidx.i21, align 4, !tbaa !24
  %8 = load float, ptr addrspace(3) %4, align 4, !tbaa !24
  %add24.i = fadd float %8, %7
  store float %add24.i, ptr addrspace(3) %4, align 4, !tbaa !24
  tail call spir_func void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 912) #2
  %mul.i = shl nuw nsw i32 %offset.0.i, 1
  br label %for.cond9.i, !llvm.loop !37

if.then.i:                                        ; preds = %for.cond.cleanup11.i
  %9 = load float, ptr addrspace(3) %_arg_local, align 4, !tbaa !24
  %10 = load i64, ptr addrspace(1) @__spirv_BuiltInWorkgroupId, align 32, !noalias !38
  %arrayidx34.i = getelementptr inbounds float, ptr addrspace(1) %_arg_output, i64 %10
  store float %9, ptr addrspace(1) %arrayidx34.i, align 4, !tbaa !24
  br label %_ZZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_ENKUlNS0_7nd_itemILi1EEEE_clES5_.exit

_ZZZ4mainENKUlRN4sycl3_V17handlerEE_clES2_ENKUlNS0_7nd_itemILi1EEEE_clES5_.exit: ; preds = %for.cond.cleanup11.i, %if.then.i
  ret void
}

; Function Attrs: convergent nounwind
declare dso_local spir_func void @_Z22__spirv_ControlBarrieriii(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

declare dso_local spir_func i32 @_Z18__spirv_ocl_printfPU3AS2Kcz(ptr addrspace(2), ...)

attributes #0 = { convergent mustprogress norecurse nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="test.cpp" "sycl-optlevel"="2" "uniform-work-group-size"="true" }
attributes #1 = { convergent nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #2 = { convergent nounwind }

!llvm.module.flags = !{!0, !1, !2}
!opencl.spir.version = !{!3}
!spirv.Source = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"sycl-device", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{i32 1, i32 2}
!4 = !{i32 4, i32 100000}
!5 = !{!"clang version 21.0.0git (https://github.com/intel/llvm.git 02aa83943d3480d7d55159309cdb0638d166c5b5)"}
!6 = !{i32 -1, i32 -1, i32 -1}
!7 = !{i1 true, i1 false, i1 false}
!8 = !{}
!9 = !{i1 false, i1 true, i1 true, i1 true, i1 false, i1 false}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
!12 = distinct !{!12, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
!13 = distinct !{!13, !14, !"_ZN7__spirv22initGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
!14 = distinct !{!14, !"_ZN7__spirv22initGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
!15 = distinct !{!15, !16, !"_ZNK4sycl3_V17nd_itemILi1EE13get_global_idEv: %agg.result"}
!16 = distinct !{!16, !"_ZNK4sycl3_V17nd_itemILi1EE13get_global_idEv"}
!17 = !{!18, !20, !22}
!18 = distinct !{!18, !19, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
!19 = distinct !{!19, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
!20 = distinct !{!20, !21, !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
!21 = distinct !{!21, !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
!22 = distinct !{!22, !23, !"_ZNK4sycl3_V17nd_itemILi1EE12get_local_idEv: %agg.result"}
!23 = distinct !{!23, !"_ZNK4sycl3_V17nd_itemILi1EE12get_local_idEv"}
!24 = !{!25, !25, i64 0}
!25 = !{!"float", !26, i64 0}
!26 = !{!"omnipotent char", !27, i64 0}
!27 = !{!"Simple C++ TBAA"}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.mustprogress"}
!30 = !{!31, !33, !35}
!31 = distinct !{!31, !32, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
!32 = distinct !{!32, !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
!33 = distinct !{!33, !34, !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
!34 = distinct !{!34, !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
!35 = distinct !{!35, !36, !"_ZNK4sycl3_V15groupILi1EE12get_local_idEv: %agg.result"}
!36 = distinct !{!36, !"_ZNK4sycl3_V15groupILi1EE12get_local_idEv"}
!37 = distinct !{!37, !29}
!38 = !{!39, !41, !43, !45}
!39 = distinct !{!39, !40, !"_ZN7__spirv22InitSizesSTWorkgroupIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
!40 = distinct !{!40, !"_ZN7__spirv22InitSizesSTWorkgroupIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
!41 = distinct !{!41, !42, !"_ZN7__spirv15initWorkgroupIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
!42 = distinct !{!42, !"_ZN7__spirv15initWorkgroupIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
!43 = distinct !{!43, !44, !"_ZNK4sycl3_V17nd_itemILi1EE12get_group_idEv: %agg.result"}
!44 = distinct !{!44, !"_ZNK4sycl3_V17nd_itemILi1EE12get_group_idEv"}
!45 = distinct !{!45, !46, !"_ZNK4sycl3_V17nd_itemILi1EE9get_groupEv: %agg.result"}
!46 = distinct !{!46, !"_ZNK4sycl3_V17nd_itemILi1EE9get_groupEv"}
;.
; CHECK: [[META6]] = !{i32 -1, i32 -1, i32 -1}
; CHECK: [[META7]] = !{i1 true, i1 false, i1 false}
; CHECK: [[META8]] = !{}
; CHECK: [[META9]] = !{i1 false, i1 true, i1 true, i1 true, i1 false, i1 false}
; CHECK: [[META10]] = !{[[META11:![0-9]+]], [[META13:![0-9]+]], [[META15:![0-9]+]]}
; CHECK: [[META11]] = distinct !{[[META11]], [[META12:![0-9]+]], !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
; CHECK: [[META12]] = distinct !{[[META12]], !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
; CHECK: [[META13]] = distinct !{[[META13]], [[META14:![0-9]+]], !"_ZN7__spirv22initGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
; CHECK: [[META14]] = distinct !{[[META14]], !"_ZN7__spirv22initGlobalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
; CHECK: [[META15]] = distinct !{[[META15]], [[META16:![0-9]+]], !"_ZNK4sycl3_V17nd_itemILi1EE13get_global_idEv: %agg.result"}
; CHECK: [[META16]] = distinct !{[[META16]], !"_ZNK4sycl3_V17nd_itemILi1EE13get_global_idEv"}
; CHECK: [[META17]] = !{[[META18:![0-9]+]], [[META20:![0-9]+]], [[META22:![0-9]+]]}
; CHECK: [[META18]] = distinct !{[[META18]], [[META19:![0-9]+]], !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
; CHECK: [[META19]] = distinct !{[[META19]], !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
; CHECK: [[META20]] = distinct !{[[META20]], [[META21:![0-9]+]], !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
; CHECK: [[META21]] = distinct !{[[META21]], !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
; CHECK: [[META22]] = distinct !{[[META22]], [[META23:![0-9]+]], !"_ZNK4sycl3_V17nd_itemILi1EE12get_local_idEv: %agg.result"}
; CHECK: [[META23]] = distinct !{[[META23]], !"_ZNK4sycl3_V17nd_itemILi1EE12get_local_idEv"}
; CHECK: [[TBAA24]] = !{[[META25:![0-9]+]], [[META25]], i64 0}
; CHECK: [[META25]] = !{!"float", [[META26:![0-9]+]], i64 0}
; CHECK: [[META26]] = !{!"omnipotent char", [[META27:![0-9]+]], i64 0}
; CHECK: [[META27]] = !{!"Simple C++ TBAA"}
; CHECK: [[LOOP28]] = distinct !{[[LOOP28]], [[META29:![0-9]+]]}
; CHECK: [[META29]] = !{!"llvm.loop.mustprogress"}
; CHECK: [[META30]] = !{[[META31:![0-9]+]], [[META33:![0-9]+]], [[META35:![0-9]+]]}
; CHECK: [[META31]] = distinct !{[[META31]], [[META32:![0-9]+]], !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
; CHECK: [[META32]] = distinct !{[[META32]], !"_ZN7__spirv28InitSizesSTLocalInvocationIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
; CHECK: [[META33]] = distinct !{[[META33]], [[META34:![0-9]+]], !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
; CHECK: [[META34]] = distinct !{[[META34]], !"_ZN7__spirv21initLocalInvocationIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
; CHECK: [[META35]] = distinct !{[[META35]], [[META36:![0-9]+]], !"_ZNK4sycl3_V15groupILi1EE12get_local_idEv: %agg.result"}
; CHECK: [[META36]] = distinct !{[[META36]], !"_ZNK4sycl3_V15groupILi1EE12get_local_idEv"}
; CHECK: [[LOOP37]] = distinct !{[[LOOP37]], [[META29]]}
; CHECK: [[META38]] = !{[[META39:![0-9]+]], [[META41:![0-9]+]], [[META43:![0-9]+]], [[META45:![0-9]+]]}
; CHECK: [[META39]] = distinct !{[[META39]], [[META40:![0-9]+]], !"_ZN7__spirv22InitSizesSTWorkgroupIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv: %agg.result"}
; CHECK: [[META40]] = distinct !{[[META40]], !"_ZN7__spirv22InitSizesSTWorkgroupIdILi1EN4sycl3_V12idILi1EEEE8initSizeEv"}
; CHECK: [[META41]] = distinct !{[[META41]], [[META42:![0-9]+]], !"_ZN7__spirv15initWorkgroupIdILi1EN4sycl3_V12idILi1EEEEET0_v: %agg.result"}
; CHECK: [[META42]] = distinct !{[[META42]], !"_ZN7__spirv15initWorkgroupIdILi1EN4sycl3_V12idILi1EEEEET0_v"}
; CHECK: [[META43]] = distinct !{[[META43]], [[META44:![0-9]+]], !"_ZNK4sycl3_V17nd_itemILi1EE12get_group_idEv: %agg.result"}
; CHECK: [[META44]] = distinct !{[[META44]], !"_ZNK4sycl3_V17nd_itemILi1EE12get_group_idEv"}
; CHECK: [[META45]] = distinct !{[[META45]], [[META46:![0-9]+]], !"_ZNK4sycl3_V17nd_itemILi1EE9get_groupEv: %agg.result"}
; CHECK: [[META46]] = distinct !{[[META46]], !"_ZNK4sycl3_V17nd_itemILi1EE9get_groupEv"}
;.
