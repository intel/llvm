; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=sycl-optimize-barriers -S < %s | FileCheck %s

; Test merging of adjacent barriers with different semantics.

declare spir_func void @foo()

define spir_kernel void @merge_mem() {
; CHECK-LABEL: define spir_kernel void @merge_mem() {
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 768)
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    ret void
;
  call void @foo()
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 256)
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 512)
  call void @foo()
  ret void
}

define spir_kernel void @combine_acq_rel() {
; CHECK-LABEL: define spir_kernel void @combine_acq_rel() {
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 8)
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    ret void
;
  call void @foo()
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 2)
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 4)
  call void @foo()
  ret void
}

define spir_kernel void @drop_no_fence() {
; CHECK-LABEL: define spir_kernel void @drop_no_fence() {
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 256)
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    ret void
;
  call void @foo()
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 0)
  call void @_Z22__spirv_ControlBarrieriii(i32 noundef 2, i32 noundef 2, i32 noundef 256)
  call void @foo()
  ret void
}

  declare void @_Z22__spirv_ControlBarrieriii(i32 noundef, i32 noundef, i32 noundef)
