; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=LowerWGScope,verify -S | FileCheck %s

target triple = "nvptx64-nvidia-cuda"

%struct.baz = type { i8 }
%struct.spam = type { %struct.wobble, %struct.wobble, %struct.wobble, %struct.wombat.0 }
%struct.wobble = type { %struct.wombat }
%struct.wombat = type { [1 x i64] }
%struct.wombat.0 = type { %struct.wombat }
%struct.quux = type { i8 }

; CHECK: @[[SHADOW:[a-zA-Z0-9]+]] = internal unnamed_addr addrspace(3) global %struct.spam undef

define internal void @wobble(ptr %arg, ptr byval(%struct.spam) %arg1) !work_group_scope !0 {
; CHECK:    call void @llvm.memcpy.p3.p0.i64(ptr addrspace(3) align 16 @[[SHADOW]], ptr [[ARG1:%.*]], i64 32, i1 false)
; CHECK:    call void @_Z22__spirv_ControlBarrierjjj(i32 2, i32 2, i32 272) #0
; CHECK:    call void @llvm.memcpy.p0.p3.i64(ptr [[TMP11:%.*]], ptr addrspace(3) align 16 @[[SHADOW]]
; CHECK:    call void @widget(ptr %arg1, ptr byval(%struct.quux) [[TMP2:%.*]])
;
bb:
  %tmp = alloca ptr
  %tmp2 = alloca %struct.quux
  store ptr %arg, ptr %tmp
  %tmp3 = load ptr, ptr %tmp
  call void @widget(ptr %arg1, ptr byval(%struct.quux) %tmp2)
  ret void
}

define internal void @widget(ptr %arg, ptr byval(%struct.quux) %arg1) !work_item_scope !0 !parallel_for_work_item !0 {
bb:
  ret void
}

!0 = !{}
