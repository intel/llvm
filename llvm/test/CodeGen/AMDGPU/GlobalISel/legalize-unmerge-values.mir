# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn-- -O0 -run-pass=legalizer -global-isel-abort=0 -o - %s | FileCheck %s

---
name: test_unmerge_s32_s64
body: |
  bb.0:
    ; CHECK-LABEL: name: test_unmerge_s32_s64
    ; CHECK: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[C]](s64)
    ; CHECK: $vgpr0 = COPY [[UV]](s32)
    ; CHECK: $vgpr1 = COPY [[UV1]](s32)
    %0:_(s64) = G_CONSTANT i64 0
    %1:_(s32), %2:_(s32) = G_UNMERGE_VALUES %0:_(s64)
    $vgpr0 = COPY %1(s32)
    $vgpr1 = COPY %2(s32)
...

---
name: test_unmerge_s32_v2s32
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s32_v2s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x s32>) = COPY $vgpr0_vgpr1
    ; CHECK: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[COPY]](<2 x s32>)
    ; CHECK: $vgpr0 = COPY [[UV]](s32)
    ; CHECK: $vgpr21 = COPY [[UV1]](s32)
    %0:_(<2 x s32>) = COPY $vgpr0_vgpr1
    %1:_(s32), %2:_(s32) = G_UNMERGE_VALUES %0
    $vgpr0 = COPY %1
    $vgpr21= COPY %2
...

---
name: test_unmerge_s16_v2s16
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s16_v2s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<2 x s16>) = COPY $vgpr0
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[COPY]](<2 x s16>)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    %0:_(<2 x s16>) = COPY $vgpr0
    %1:_(s16), %2:_(s16) = G_UNMERGE_VALUES %0
    %3:_(s32) = G_ANYEXT %1
    %4:_(s32) = G_ANYEXT %2
    $vgpr0 = COPY %3
    $vgpr1 = COPY %4
...

---
name: test_unmerge_s16_v3s16
body: |
  bb.0:
    ; CHECK-LABEL: name: test_unmerge_s16_v3s16
    ; CHECK: [[DEF:%[0-9]+]]:_(<3 x s16>) = G_IMPLICIT_DEF
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16), [[UV2:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[DEF]](<3 x s16>)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[UV2]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    ; CHECK: $vgpr2 = COPY [[ANYEXT2]](s32)
    %0:_(<3 x s16>) = G_IMPLICIT_DEF
    %1:_(s16), %2:_(s16),  %3:_(s16) = G_UNMERGE_VALUES %0
    %4:_(s32) = G_ANYEXT %1
    %5:_(s32) = G_ANYEXT %2
    %6:_(s32) = G_ANYEXT %3
    $vgpr0 = COPY %4
    $vgpr1 = COPY %5
    $vgpr2 = COPY %6
...

---
name: test_unmerge_s8_s16
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s8_s16
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; CHECK: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK: [[COPY1:%[0-9]+]]:_(s32) = COPY [[COPY]](s32)
    ; CHECK: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY1]], [[C]]
    ; CHECK: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 8
    ; CHECK: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[AND]], [[C1]](s32)
    ; CHECK: [[OR:%[0-9]+]]:_(s32) = G_OR [[AND]], [[SHL]]
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[OR]](s32)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s16) = G_TRUNC %0
    %2:_(s8), %3:_(s8) = G_UNMERGE_VALUES %1
    %4:_(s32) = G_ANYEXT %2
    %5:_(s32) = G_ANYEXT %3
    $vgpr0 = COPY %4
    $vgpr1 = COPY %5
...

---
name: test_unmerge_s8_s32
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s8_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s64) = G_ZEXT [[COPY]](s32)
    ; CHECK: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 8
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[C]](s64)
    ; CHECK: [[SHL:%[0-9]+]]:_(s64) = G_SHL [[ZEXT]], [[TRUNC]](s32)
    ; CHECK: [[OR:%[0-9]+]]:_(s64) = G_OR [[ZEXT]], [[SHL]]
    ; CHECK: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 16
    ; CHECK: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[C1]](s64)
    ; CHECK: [[SHL1:%[0-9]+]]:_(s64) = G_SHL [[OR]], [[TRUNC1]](s32)
    ; CHECK: [[OR1:%[0-9]+]]:_(s64) = G_OR [[OR]], [[SHL1]]
    ; CHECK: [[C2:%[0-9]+]]:_(s64) = G_CONSTANT i64 24
    ; CHECK: [[TRUNC2:%[0-9]+]]:_(s32) = G_TRUNC [[C2]](s64)
    ; CHECK: [[SHL2:%[0-9]+]]:_(s64) = G_SHL [[OR1]], [[TRUNC2]](s32)
    ; CHECK: [[OR2:%[0-9]+]]:_(s64) = G_OR [[OR1]], [[SHL2]]
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16), [[UV2:%[0-9]+]]:_(s16), [[UV3:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[OR2]](s64)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[UV2]](s16)
    ; CHECK: [[ANYEXT3:%[0-9]+]]:_(s32) = G_ANYEXT [[UV3]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    ; CHECK: $vgpr2 = COPY [[ANYEXT2]](s32)
    ; CHECK: $vgpr3 = COPY [[ANYEXT3]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s8), %2:_(s8), %3:_(s8), %4:_(s8) = G_UNMERGE_VALUES %0
    %5:_(s32) = G_ANYEXT %1
    %6:_(s32) = G_ANYEXT %2
    %7:_(s32) = G_ANYEXT %3
    %8:_(s32) = G_ANYEXT %4
    $vgpr0 = COPY %5
    $vgpr1 = COPY %6
    $vgpr2 = COPY %7
    $vgpr3 = COPY %8
...

---
name: test_unmerge_s16_s32
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s16_s32
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[COPY]](s32)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s16), %2:_(s16) = G_UNMERGE_VALUES %0
    %3:_(s32) = G_ANYEXT %1
    %4:_(s32) = G_ANYEXT %2
    $vgpr0 = COPY %3
    $vgpr1 = COPY %4
...

---
name: test_unmerge_s16_s64
body: |
  bb.0:
    liveins: $vgpr0_vgpr1
    ; CHECK-LABEL: name: test_unmerge_s16_s64
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $vgpr0_vgpr1
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16), [[UV2:%[0-9]+]]:_(s16), [[UV3:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[COPY]](s64)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[UV]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[UV1]](s16)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[UV2]](s16)
    ; CHECK: [[ANYEXT3:%[0-9]+]]:_(s32) = G_ANYEXT [[UV3]](s16)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    ; CHECK: $vgpr2 = COPY [[ANYEXT2]](s32)
    ; CHECK: $vgpr3 = COPY [[ANYEXT3]](s32)
    %0:_(s64) = COPY $vgpr0_vgpr1
    %1:_(s16), %2:_(s16), %3:_(s16), %4:_(s16) = G_UNMERGE_VALUES %0
    %5:_(s32) = G_ANYEXT %1
    %6:_(s32) = G_ANYEXT %2
    %7:_(s32) = G_ANYEXT %3
    %8:_(s32) = G_ANYEXT %4
    $vgpr0 = COPY %5
    $vgpr1 = COPY %6
    $vgpr2 = COPY %7
    $vgpr3 = COPY %8
...

---
name: test_unmerge_s1_s3
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s1_s3
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s3) = G_TRUNC [[COPY]](s32)
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s48) = G_ZEXT [[TRUNC]](s3)
    ; CHECK: [[C:%[0-9]+]]:_(s48) = G_CONSTANT i48 15
    ; CHECK: [[SHL:%[0-9]+]]:_(s48) = G_SHL [[ZEXT]], [[C]](s48)
    ; CHECK: [[OR:%[0-9]+]]:_(s48) = G_OR [[ZEXT]], [[SHL]]
    ; CHECK: [[C1:%[0-9]+]]:_(s48) = G_CONSTANT i48 30
    ; CHECK: [[SHL1:%[0-9]+]]:_(s48) = G_SHL [[OR]], [[C1]](s48)
    ; CHECK: [[OR1:%[0-9]+]]:_(s48) = G_OR [[OR]], [[SHL1]]
    ; CHECK: [[UV:%[0-9]+]]:_(s16), [[UV1:%[0-9]+]]:_(s16), [[UV2:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[OR1]](s48)
    ; CHECK: [[TRUNC1:%[0-9]+]]:_(s1) = G_TRUNC [[UV]](s16)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC1]](s1)
    ; CHECK: [[TRUNC2:%[0-9]+]]:_(s1) = G_TRUNC [[UV1]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC2]](s1)
    ; CHECK: [[TRUNC3:%[0-9]+]]:_(s1) = G_TRUNC [[UV2]](s16)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC3]](s1)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    ; CHECK: $vgpr2 = COPY [[ANYEXT2]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s3) = G_TRUNC %0
    %2:_(s1), %3:_(s1), %4:_(s1) = G_UNMERGE_VALUES %1
    %5:_(s32) = G_ANYEXT %2
    %6:_(s32) = G_ANYEXT %3
    %7:_(s32) = G_ANYEXT %4
    $vgpr0 = COPY %5
    $vgpr1 = COPY %6
    $vgpr2 = COPY %7
...

---
name: test_unmerge_s1_s8
body: |
  bb.0:
    liveins: $vgpr0
    ; CHECK-LABEL: name: test_unmerge_s1_s8
    ; CHECK: [[COPY:%[0-9]+]]:_(s32) = COPY $vgpr0
    ; CHECK: [[TRUNC:%[0-9]+]]:_(s8) = G_TRUNC [[COPY]](s32)
    ; CHECK: [[ZEXT:%[0-9]+]]:_(s128) = G_ZEXT [[TRUNC]](s8)
    ; CHECK: [[C:%[0-9]+]]:_(s128) = G_CONSTANT i128 15
    ; CHECK: [[SHL:%[0-9]+]]:_(s128) = G_SHL [[ZEXT]], [[C]](s128)
    ; CHECK: [[OR:%[0-9]+]]:_(s128) = G_OR [[ZEXT]], [[SHL]]
    ; CHECK: [[C1:%[0-9]+]]:_(s128) = G_CONSTANT i128 30
    ; CHECK: [[SHL1:%[0-9]+]]:_(s128) = G_SHL [[OR]], [[C1]](s128)
    ; CHECK: [[OR1:%[0-9]+]]:_(s128) = G_OR [[OR]], [[SHL1]]
    ; CHECK: [[C2:%[0-9]+]]:_(s128) = G_CONSTANT i128 45
    ; CHECK: [[SHL2:%[0-9]+]]:_(s128) = G_SHL [[OR1]], [[C2]](s128)
    ; CHECK: [[OR2:%[0-9]+]]:_(s128) = G_OR [[OR1]], [[SHL2]]
    ; CHECK: [[C3:%[0-9]+]]:_(s128) = G_CONSTANT i128 60
    ; CHECK: [[SHL3:%[0-9]+]]:_(s128) = G_SHL [[OR2]], [[C3]](s128)
    ; CHECK: [[OR3:%[0-9]+]]:_(s128) = G_OR [[OR2]], [[SHL3]]
    ; CHECK: [[C4:%[0-9]+]]:_(s128) = G_CONSTANT i128 75
    ; CHECK: [[SHL4:%[0-9]+]]:_(s128) = G_SHL [[OR3]], [[C4]](s128)
    ; CHECK: [[OR4:%[0-9]+]]:_(s128) = G_OR [[OR3]], [[SHL4]]
    ; CHECK: [[C5:%[0-9]+]]:_(s128) = G_CONSTANT i128 90
    ; CHECK: [[SHL5:%[0-9]+]]:_(s128) = G_SHL [[OR4]], [[C5]](s128)
    ; CHECK: [[OR5:%[0-9]+]]:_(s128) = G_OR [[OR4]], [[SHL5]]
    ; CHECK: [[C6:%[0-9]+]]:_(s128) = G_CONSTANT i128 105
    ; CHECK: [[SHL6:%[0-9]+]]:_(s128) = G_SHL [[OR5]], [[C6]](s128)
    ; CHECK: [[UV:%[0-9]+]]:_(s64), [[UV1:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[OR5]](s128)
    ; CHECK: [[UV2:%[0-9]+]]:_(s64), [[UV3:%[0-9]+]]:_(s64) = G_UNMERGE_VALUES [[SHL6]](s128)
    ; CHECK: [[OR6:%[0-9]+]]:_(s64) = G_OR [[UV]], [[UV2]]
    ; CHECK: [[OR7:%[0-9]+]]:_(s64) = G_OR [[UV1]], [[UV3]]
    ; CHECK: [[MV:%[0-9]+]]:_(s128) = G_MERGE_VALUES [[OR6]](s64), [[OR7]](s64)
    ; CHECK: [[UV4:%[0-9]+]]:_(s16), [[UV5:%[0-9]+]]:_(s16), [[UV6:%[0-9]+]]:_(s16), [[UV7:%[0-9]+]]:_(s16), [[UV8:%[0-9]+]]:_(s16), [[UV9:%[0-9]+]]:_(s16), [[UV10:%[0-9]+]]:_(s16), [[UV11:%[0-9]+]]:_(s16) = G_UNMERGE_VALUES [[MV]](s128)
    ; CHECK: [[TRUNC1:%[0-9]+]]:_(s1) = G_TRUNC [[UV4]](s16)
    ; CHECK: [[ANYEXT:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC1]](s1)
    ; CHECK: [[TRUNC2:%[0-9]+]]:_(s1) = G_TRUNC [[UV5]](s16)
    ; CHECK: [[ANYEXT1:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC2]](s1)
    ; CHECK: [[TRUNC3:%[0-9]+]]:_(s1) = G_TRUNC [[UV6]](s16)
    ; CHECK: [[ANYEXT2:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC3]](s1)
    ; CHECK: [[TRUNC4:%[0-9]+]]:_(s1) = G_TRUNC [[UV7]](s16)
    ; CHECK: [[ANYEXT3:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC4]](s1)
    ; CHECK: [[TRUNC5:%[0-9]+]]:_(s1) = G_TRUNC [[UV8]](s16)
    ; CHECK: [[ANYEXT4:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC5]](s1)
    ; CHECK: [[TRUNC6:%[0-9]+]]:_(s1) = G_TRUNC [[UV9]](s16)
    ; CHECK: [[ANYEXT5:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC6]](s1)
    ; CHECK: [[TRUNC7:%[0-9]+]]:_(s1) = G_TRUNC [[UV10]](s16)
    ; CHECK: [[ANYEXT6:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC7]](s1)
    ; CHECK: [[TRUNC8:%[0-9]+]]:_(s1) = G_TRUNC [[UV11]](s16)
    ; CHECK: [[ANYEXT7:%[0-9]+]]:_(s32) = G_ANYEXT [[TRUNC8]](s1)
    ; CHECK: $vgpr0 = COPY [[ANYEXT]](s32)
    ; CHECK: $vgpr1 = COPY [[ANYEXT1]](s32)
    ; CHECK: $vgpr2 = COPY [[ANYEXT2]](s32)
    ; CHECK: $vgpr3 = COPY [[ANYEXT3]](s32)
    ; CHECK: $vgpr4 = COPY [[ANYEXT4]](s32)
    ; CHECK: $vgpr5 = COPY [[ANYEXT5]](s32)
    ; CHECK: $vgpr6 = COPY [[ANYEXT6]](s32)
    ; CHECK: $vgpr7 = COPY [[ANYEXT7]](s32)
    %0:_(s32) = COPY $vgpr0
    %1:_(s8) = G_TRUNC %0
    %2:_(s1), %3:_(s1), %4:_(s1), %5:_(s1), %6:_(s1), %7:_(s1), %8:_(s1), %9:_(s1) = G_UNMERGE_VALUES %1
    %10:_(s32) = G_ANYEXT %2
    %11:_(s32) = G_ANYEXT %3
    %12:_(s32) = G_ANYEXT %4
    %13:_(s32) = G_ANYEXT %5
    %14:_(s32) = G_ANYEXT %6
    %15:_(s32) = G_ANYEXT %7
    %16:_(s32) = G_ANYEXT %8
    %17:_(s32) = G_ANYEXT %9
    $vgpr0 = COPY %10
    $vgpr1 = COPY %11
    $vgpr2 = COPY %12
    $vgpr3 = COPY %13
    $vgpr4 = COPY %14
    $vgpr5 = COPY %15
    $vgpr6 = COPY %16
    $vgpr7 = COPY %17
...
