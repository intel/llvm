; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals all --include-generated-funcs --version 5
; RUN: opt -mtriple=amdgcn-amd-amdhsa -bugpoint-enable-legacy-pm -globaloffset -enable-global-offset=false %s -S -o - | FileCheck %s

; This test checks that the implicit offset intrinsic is correctly removed

declare ptr addrspace(5) @llvm.amdgcn.implicit.offset()

define i64 @_ZTS14example_kernel() {
entry:
  %0 = tail call ptr addrspace(5) @llvm.amdgcn.implicit.offset()
  %1 = getelementptr inbounds i32, ptr addrspace(5) %0, i64 1
  %2 = load i32, ptr addrspace(5) %1, align 4
  %3 = zext i32 %2 to i64
  ret i64 %3
}

!llvm.module.flags = !{!0}

!0 = !{i32 1, !"sycl-device", i32 1}
; CHECK-LABEL: define i64 @_ZTS14example_kernel() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = zext i32 0 to i64
; CHECK-NEXT:    ret i64 [[TMP0]]
;
;.
; CHECK: [[META0:![0-9]+]] = !{i32 1, !"sycl-device", i32 1}
;.
