; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals all --version 5
; RUN: opt -bugpoint-enable-legacy-pm -localaccessortosharedmemory %s -S -o - | FileCheck %s

target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

; This test checks that the transformation is applied in the basic case.


; CHECK: @_ZTS14example_kernel_shared_mem = external addrspace(3) global [0 x i8], align 4
;.
define amdgpu_kernel void @_ZTS14example_kernel(ptr addrspace(3) %a, ptr addrspace(1) %b, i32 %c) {
; CHECK-LABEL: define amdgpu_kernel void @_ZTS14example_kernel(
; CHECK-SAME: i32 [[TMP0:%.*]], ptr addrspace(1) [[B:%.*]], i32 [[C:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr inbounds [0 x i8], ptr addrspace(3) @_ZTS14example_kernel_shared_mem, i32 0, i32 [[TMP0]]
; CHECK-NEXT:    [[A:%.*]] = bitcast ptr addrspace(3) [[TMP1]] to ptr addrspace(3)
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(3) [[A]], align 4
; CHECK-NEXT:    [[TMP3:%.*]] = load i32, ptr addrspace(1) [[B]], align 4
; CHECK-NEXT:    [[TMP4:%.*]] = add i32 [[C]], [[C]]
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i32, ptr addrspace(3) %a
  %1 = load i32, ptr addrspace(1) %b
  %2 = add i32 %c, %c
  ret void
}

!llvm.module.flags = !{!0}

!0 = !{i32 1, !"sycl-device", i32 1}
;.
; CHECK: [[META0:![0-9]+]] = !{i32 1, !"sycl-device", i32 1}
;.
