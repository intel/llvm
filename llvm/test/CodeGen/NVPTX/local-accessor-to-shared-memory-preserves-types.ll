; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals all --version 5
; RUN: opt -bugpoint-enable-legacy-pm -localaccessortosharedmemory %s -S -o - | FileCheck %s

target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

; This test checks that the transformation always bitcasts to the correct type.


;.
; CHECK: @_ZTS14example_kernel_shared_mem = external addrspace(3) global [0 x i8], align 4
;.
define void @_ZTS14example_kernel(ptr addrspace(3) %a, ptr addrspace(3) %b, ptr addrspace(3) %c, ptr addrspace(3) %d) {
; CHECK-LABEL: define void @_ZTS14example_kernel(
; CHECK-SAME: i32 [[TMP0:%.*]], i32 [[TMP1:%.*]], i32 [[TMP2:%.*]], i32 [[TMP3:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [0 x i8], ptr addrspace(3) @_ZTS14example_kernel_shared_mem, i32 0, i32 [[TMP3]]
; CHECK-NEXT:    [[D:%.*]] = bitcast ptr addrspace(3) [[TMP4]] to ptr addrspace(3)
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [0 x i8], ptr addrspace(3) @_ZTS14example_kernel_shared_mem, i32 0, i32 [[TMP2]]
; CHECK-NEXT:    [[C:%.*]] = bitcast ptr addrspace(3) [[TMP5]] to ptr addrspace(3)
; CHECK-NEXT:    [[TMP6:%.*]] = getelementptr inbounds [0 x i8], ptr addrspace(3) @_ZTS14example_kernel_shared_mem, i32 0, i32 [[TMP1]]
; CHECK-NEXT:    [[B:%.*]] = bitcast ptr addrspace(3) [[TMP6]] to ptr addrspace(3)
; CHECK-NEXT:    [[TMP7:%.*]] = getelementptr inbounds [0 x i8], ptr addrspace(3) @_ZTS14example_kernel_shared_mem, i32 0, i32 [[TMP0]]
; CHECK-NEXT:    [[A:%.*]] = bitcast ptr addrspace(3) [[TMP7]] to ptr addrspace(3)
; CHECK-NEXT:    [[TMP8:%.*]] = load i32, ptr addrspace(3) [[A]], align 4
; CHECK-NEXT:    [[TMP9:%.*]] = load i64, ptr addrspace(3) [[B]], align 8
; CHECK-NEXT:    [[TMP10:%.*]] = load i16, ptr addrspace(3) [[C]], align 2
; CHECK-NEXT:    [[TMP11:%.*]] = load i8, ptr addrspace(3) [[D]], align 1
; CHECK-NEXT:    ret void
;
entry:
  %0 = load i32, ptr addrspace(3) %a
  %1 = load i64, ptr addrspace(3) %b
  %2 = load i16, ptr addrspace(3) %c
  %3 = load i8, ptr addrspace(3) %d
  ret void
}

!llvm.module.flags = !{!6}
!nvvm.annotations = !{!0, !1, !2, !1, !3, !3, !3, !3, !4, !4, !3}
!nvvmir.version = !{!5}

!0 = distinct !{ptr @_ZTS14example_kernel, !"kernel", i32 1}
!1 = !{null, !"align", i32 8}
!2 = !{null, !"align", i32 8, !"align", i32 65544, !"align", i32 131080}
!3 = !{null, !"align", i32 16}
!4 = !{null, !"align", i32 16, !"align", i32 65552, !"align", i32 131088}
!5 = !{i32 1, i32 4}
!6 = !{i32 1, !"sycl-device", i32 1}
;.
; CHECK: [[META0:![0-9]+]] = !{i32 1, !"sycl-device", i32 1}
; CHECK: [[META1:![0-9]+]] = distinct !{ptr @_ZTS14example_kernel, !"kernel", i32 1}
; CHECK: [[META2:![0-9]+]] = !{null, !"align", i32 8}
; CHECK: [[META3:![0-9]+]] = !{null, !"align", i32 8, !"align", i32 65544, !"align", i32 131080}
; CHECK: [[META4:![0-9]+]] = !{null, !"align", i32 16}
; CHECK: [[META5:![0-9]+]] = !{null, !"align", i32 16, !"align", i32 65552, !"align", i32 131088}
; CHECK: [[META6:![0-9]+]] = !{i32 1, i32 4}
;.
