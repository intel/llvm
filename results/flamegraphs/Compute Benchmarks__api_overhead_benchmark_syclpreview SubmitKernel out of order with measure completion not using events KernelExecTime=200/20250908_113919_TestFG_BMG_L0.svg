<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1000" height="1046" onload="init(evt)" viewBox="0 0 1000 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1000.0" height="1046.0" fill="url(#background)"  />
<text id="title" x="500.00" y="24" >TestFG_BMG_L0 - api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion not using events KernelExecTime=200</text>
<text id="details" x="10.00" y="1029" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="890.00" y="24" >Search</text>
<text id="ignorecase" x="974.00" y="24" >ic</text>
<text id="matched" x="890.00" y="1029" > </text>
<g id="frames">
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="725" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="735.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (709,135 samples, 0.75%)</title><rect x="233.1" y="405" width="7.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="236.11" y="415.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,419,338 samples, 1.51%)</title><rect x="841.6" y="805" width="14.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="844.65" y="815.5" ></text>
</g>
<g >
<title>sycl::_V1::queue::queue&lt;int  (34,047,400 samples, 36.16%)</title><rect x="246.4" y="805" width="354.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="249.44" y="815.5" >sycl::_V1::queue::queue&lt;int </text>
</g>
<g >
<title>__GI___mmap64 (99,999 samples, 0.11%)</title><rect x="986.9" y="613" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="989.88" y="623.5" ></text>
</g>
<g >
<title>__pthread_once_slow (31,920,533 samples, 33.90%)</title><rect x="246.4" y="629" width="332.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="249.44" y="639.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::ostream::sentry::sentry (704,077 samples, 0.75%)</title><rect x="672.8" y="757" width="7.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="675.78" y="767.5" ></text>
</g>
<g >
<title>BenchmarkMain::executeSingleTest (34,047,400 samples, 36.16%)</title><rect x="246.4" y="885" width="354.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="249.44" y="895.5" >BenchmarkMain::executeSingleTest</text>
</g>
<g >
<title>ur_validation_layer::context_t::context_t (709,908 samples, 0.75%)</title><rect x="593.4" y="629" width="7.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="596.44" y="639.5" ></text>
</g>
<g >
<title>[unknown] (17,015,570 samples, 18.07%)</title><rect x="320.2" y="293" width="177.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="323.15" y="303.5" >[unknown]</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (709,897 samples, 0.75%)</title><rect x="760.4" y="789" width="7.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="763.42" y="799.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (709,664 samples, 0.75%)</title><rect x="17.4" y="949" width="7.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="20.38" y="959.5" ></text>
</g>
<g >
<title>__strlen_avx2 (393,735 samples, 0.42%)</title><rect x="982.8" y="821" width="4.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="985.78" y="831.5" ></text>
</g>
<g >
<title>operator delete (709,317 samples, 0.75%)</title><rect x="893.4" y="805" width="7.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="896.35" y="815.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="693" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="703.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="933" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="943.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (709,425 samples, 0.75%)</title><rect x="886.0" y="805" width="7.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="888.97" y="815.5" ></text>
</g>
<g >
<title>_dl_open (1,416,959 samples, 1.50%)</title><rect x="578.7" y="485" width="14.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="581.70" y="495.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="901" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="911.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="709" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="719.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="389" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="399.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="677" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="687.5" ></text>
</g>
<g >
<title>urLoaderInit (709,135 samples, 0.75%)</title><rect x="233.1" y="773" width="7.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="236.11" y="783.5" ></text>
</g>
<g >
<title>operator new (4,985,092 samples, 5.29%)</title><rect x="497.3" y="309" width="51.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="500.27" y="319.5" >opera..</text>
</g>
<g >
<title>run (709,135 samples, 0.75%)</title><rect x="233.1" y="901" width="7.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="236.11" y="911.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="709" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="719.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="741" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="751.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="373" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="383.5" ></text>
</g>
<g >
<title>call_init (29,794,288 samples, 31.65%)</title><rect x="261.2" y="373" width="310.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="264.19" y="383.5" >call_init</text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="725" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="735.5" ></text>
</g>
<g >
<title>resolve_map (708,516 samples, 0.75%)</title><rect x="578.7" y="341" width="7.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="581.70" y="351.5" ></text>
</g>
<g >
<title>ze_lib::context_t::Init (31,920,533 samples, 33.90%)</title><rect x="246.4" y="597" width="332.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="249.44" y="607.5" >ze_lib::context_t::Init</text>
</g>
<g >
<title>[unknown] (708,710 samples, 0.75%)</title><rect x="541.8" y="85" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="544.78" y="95.5" ></text>
</g>
<g >
<title>_dl_catch_error (31,212,003 samples, 33.15%)</title><rect x="246.4" y="517" width="324.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="249.44" y="527.5" >_dl_catch_error</text>
</g>
<g >
<title>__printf_buffer_init (1,417,527 samples, 1.51%)</title><rect x="643.3" y="741" width="14.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="646.32" y="751.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (4,488,195 samples, 4.77%)</title><rect x="930.8" y="917" width="46.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="933.79" y="927.5" >_dl_..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="885" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="895.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (371,319 samples, 0.39%)</title><rect x="240.5" y="933" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="243.49" y="943.5" ></text>
</g>
<g >
<title>tcache_init (199,998 samples, 0.21%)</title><rect x="986.9" y="709" width="2.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="989.88" y="719.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="725" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,212,003 samples, 33.15%)</title><rect x="246.4" y="453" width="324.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="249.44" y="463.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="773" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="783.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, unsigned long, bool, bool, unsigned long, bool, unsigned long, unsigned long&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul&gt; &gt;::Advance (709,210 samples, 0.75%)</title><rect x="775.2" y="837" width="7.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="778.19" y="847.5" ></text>
</g>
<g >
<title>[unknown] (624,460 samples, 0.66%)</title><rect x="25.8" y="933" width="6.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.78" y="943.5" ></text>
</g>
<g >
<title>__GI___sbrk (1,424,212 samples, 1.51%)</title><rect x="534.3" y="229" width="14.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="537.33" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="837" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="847.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (707,524 samples, 0.75%)</title><rect x="658.1" y="789" width="7.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="661.07" y="799.5" ></text>
</g>
<g >
<title>__pthread_once_slow (709,135 samples, 0.75%)</title><rect x="233.1" y="741" width="7.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="236.11" y="751.5" ></text>
</g>
<g >
<title>[[stack]] (709,664 samples, 0.75%)</title><rect x="17.4" y="965" width="7.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="20.38" y="975.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;LifecycleCommandListTest&gt;* testing::internal::ParameterizedTestSuiteRegistry::GetTestSuitePatternHolder&lt;LifecycleCommandListTest&gt; (655,371 samples, 0.70%)</title><rect x="915.5" y="885" width="6.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="918.52" y="895.5" ></text>
</g>
<g >
<title>_int_new_arena (199,998 samples, 0.21%)</title><rect x="986.9" y="661" width="2.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="989.88" y="671.5" ></text>
</g>
<g >
<title>__dynamic_cast (709,739 samples, 0.75%)</title><rect x="900.7" y="789" width="7.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="903.74" y="799.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="805" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="815.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="789" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="799.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,416,959 samples, 1.50%)</title><rect x="578.7" y="389" width="14.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="581.70" y="399.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="693" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (674,867 samples, 0.72%)</title><rect x="614.7" y="821" width="7.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="617.70" y="831.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,382,635 samples, 1.47%)</title><rect x="738.7" y="789" width="14.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="741.73" y="799.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTo&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, AllocationMeasureMode&gt; (1,418,532 samples, 1.51%)</title><rect x="812.1" y="821" width="14.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="815.11" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, unsigned long, TmpMemoryStrategy, unsigned long&gt; &gt; (709,290 samples, 0.75%)</title><rect x="790.0" y="837" width="7.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="792.96" y="847.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (709,135 samples, 0.75%)</title><rect x="233.1" y="469" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="236.11" y="479.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="853" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="863.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="581" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="591.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="821" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="831.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (1,382,635 samples, 1.47%)</title><rect x="738.7" y="773" width="14.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="741.73" y="783.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="709" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="197" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="207.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="677" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="687.5" ></text>
</g>
<g >
<title>[unknown] (16,306,505 samples, 17.32%)</title><rect x="327.5" y="245" width="169.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="330.53" y="255.5" >[unknown]</text>
</g>
<g >
<title>std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (655,371 samples, 0.70%)</title><rect x="915.5" y="869" width="6.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="918.52" y="879.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="741" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="751.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (592,537 samples, 0.63%)</title><rect x="962.4" y="821" width="6.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="965.44" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2,145,497 samples, 2.28%)</title><rect x="497.3" y="261" width="22.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="500.27" y="271.5" >[..</text>
</g>
<g >
<title>__GI_mprotect (99,999 samples, 0.11%)</title><rect x="987.9" y="613" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="990.92" y="623.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="773" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="783.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="597" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="607.5" ></text>
</g>
<g >
<title>resolve_map (1,140,591 samples, 1.21%)</title><rect x="956.7" y="837" width="11.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="959.74" y="847.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::select_device (34,047,400 samples, 36.16%)</title><rect x="246.4" y="789" width="354.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="249.44" y="799.5" >sycl::_V1::detail::select_device</text>
</g>
<g >
<title>sycl.descriptor_reg (645,165 samples, 0.69%)</title><rect x="922.3" y="917" width="6.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="925.34" y="927.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (709,058 samples, 0.75%)</title><rect x="253.8" y="341" width="7.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="256.81" y="351.5" ></text>
</g>
<g >
<title>[unknown] (12,072,811 samples, 12.82%)</title><rect x="371.6" y="117" width="125.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="374.60" y="127.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="757" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="767.5" ></text>
</g>
<g >
<title>__printf_buffer (692,742 samples, 0.74%)</title><rect x="738.7" y="725" width="7.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="741.73" y="735.5" ></text>
</g>
<g >
<title>resolve_map (708,657 samples, 0.75%)</title><rect x="246.4" y="325" width="7.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="249.44" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="101" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="111.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="885" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="895.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (708,516 samples, 0.75%)</title><rect x="578.7" y="325" width="7.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="581.70" y="335.5" ></text>
</g>
<g >
<title>__libc_start_call_main (64,279,457 samples, 68.27%)</title><rect x="246.4" y="933" width="669.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="249.44" y="943.5" >__libc_start_call_main</text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="581" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="591.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="661" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="671.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::ProgramManager::addImage (645,165 samples, 0.69%)</title><rect x="922.3" y="885" width="6.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="925.34" y="895.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="661" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="671.5" ></text>
</g>
<g >
<title>ur_lib::context_t::Init (1,416,959 samples, 1.50%)</title><rect x="578.7" y="629" width="14.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="581.70" y="639.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="853" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="863.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="693" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="703.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (708,657 samples, 0.75%)</title><rect x="246.4" y="309" width="7.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="249.44" y="319.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="453" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="463.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (1,417,527 samples, 1.51%)</title><rect x="643.3" y="805" width="14.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="646.32" y="815.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="645" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="655.5" ></text>
</g>
<g >
<title>ur_loader::LibLoader::loadAdapterLibrary (1,416,959 samples, 1.50%)</title><rect x="578.7" y="597" width="14.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="581.70" y="607.5" ></text>
</g>
<g >
<title>ur_lib::urLoaderInit (709,135 samples, 0.75%)</title><rect x="233.1" y="757" width="7.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="236.11" y="767.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (199,998 samples, 0.21%)</title><rect x="986.9" y="805" width="2.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="989.88" y="815.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteCommandListImmediateCopyQueueTest&gt;::RegisterTests (7,779,872 samples, 8.26%)</title><rect x="636.0" y="853" width="80.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="638.95" y="863.5" >testing::..</text>
</g>
<g >
<title>___dlopen (31,212,003 samples, 33.15%)</title><rect x="246.4" y="565" width="324.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="249.44" y="575.5" >___dlopen</text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="629" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="639.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="917" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="927.5" ></text>
</g>
<g >
<title>[anon] (721,679 samples, 0.77%)</title><rect x="24.8" y="965" width="7.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="27.77" y="975.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="725" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="735.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (705,020 samples, 0.75%)</title><rect x="665.4" y="773" width="7.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="668.44" y="783.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (709,135 samples, 0.75%)</title><rect x="233.1" y="485" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="236.11" y="495.5" ></text>
</g>
<g >
<title>elf_machine_rela (708,516 samples, 0.75%)</title><rect x="578.7" y="357" width="7.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="581.70" y="367.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (410,009 samples, 0.44%)</title><rect x="977.5" y="789" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="799.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="661" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="181" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="191.5" ></text>
</g>
<g >
<title>_dlerror_run (709,135 samples, 0.75%)</title><rect x="233.1" y="629" width="7.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="236.11" y="639.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="773" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="783.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="277" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="287.5" ></text>
</g>
<g >
<title>new_heap (199,998 samples, 0.21%)</title><rect x="986.9" y="645" width="2.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="989.88" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;bool, bool, bool, bool, bool, bool&gt; &gt; (709,897 samples, 0.75%)</title><rect x="760.4" y="837" width="7.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="763.42" y="847.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="581" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1,424,212 samples, 1.51%)</title><rect x="534.3" y="133" width="14.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.33" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="165" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="175.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="645" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="655.5" ></text>
</g>
<g >
<title>dlopen_implementation (709,135 samples, 0.75%)</title><rect x="233.1" y="645" width="7.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="236.11" y="655.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="629" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="149" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="159.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="757" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="767.5" ></text>
</g>
<g >
<title>urAdapterGet (31,920,533 samples, 33.90%)</title><rect x="246.4" y="693" width="332.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="249.44" y="703.5" >urAdapterGet</text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::AtEnd (709,739 samples, 0.75%)</title><rect x="900.7" y="821" width="7.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="903.74" y="831.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (2,235,857 samples, 2.37%)</title><rect x="951.3" y="869" width="23.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="954.29" y="879.5" >e..</text>
</g>
<g >
<title>dlopen_doit (709,135 samples, 0.75%)</title><rect x="233.1" y="581" width="7.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="236.11" y="591.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,417,527 samples, 1.51%)</title><rect x="643.3" y="773" width="14.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="646.32" y="783.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="821" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="831.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;unsigned long, unsigned long, bool, bool, bool&gt;, 5ul&gt; (679,671 samples, 0.72%)</title><rect x="621.7" y="821" width="7.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="624.73" y="831.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="277" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="287.5" ></text>
</g>
<g >
<title>testing::TestInfo::TestInfo (700,509 samples, 0.74%)</title><rect x="753.1" y="821" width="7.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="756.12" y="831.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="933" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="943.5" ></text>
</g>
<g >
<title>_dl_protect_relro (610,245 samples, 0.65%)</title><rect x="944.9" y="869" width="6.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="947.94" y="879.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="869" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;sycl::_V1::detail::RTDeviceBinaryImage const*, std::pair&lt;sycl::_V1::detail::RTDeviceBinaryImage const* const, std::unordered_map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sycl::_V1::detail::RTDeviceBinaryImage const* const, std::unordered_map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;sycl::_V1::detail::RTDeviceBinaryImage const*&gt;, std::hash&lt;sycl::_V1::detail::RTDeviceBinaryImage const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (645,165 samples, 0.69%)</title><rect x="922.3" y="869" width="6.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="925.34" y="879.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="789" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="799.5" ></text>
</g>
<g >
<title>[unknown] (14,194,003 samples, 15.08%)</title><rect x="349.5" y="213" width="147.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="352.52" y="223.5" >[unknown]</text>
</g>
<g >
<title>run (34,047,400 samples, 36.16%)</title><rect x="246.4" y="821" width="354.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="249.44" y="831.5" >run</text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="805" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="815.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;ur_lib::urLoaderInit (1,416,959 samples, 1.50%)</title><rect x="578.7" y="645" width="14.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="581.70" y="655.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (707,524 samples, 0.75%)</title><rect x="658.1" y="805" width="7.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="661.07" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_free (709,317 samples, 0.75%)</title><rect x="797.3" y="821" width="7.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="800.34" y="831.5" ></text>
</g>
<g >
<title>[unknown] (16,306,505 samples, 17.32%)</title><rect x="327.5" y="229" width="169.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="330.53" y="239.5" >[unknown]</text>
</g>
<g >
<title>operator new (199,998 samples, 0.21%)</title><rect x="986.9" y="757" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="989.88" y="767.5" ></text>
</g>
<g >
<title>ur_loader::context_t::init (709,135 samples, 0.75%)</title><rect x="233.1" y="693" width="7.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="236.11" y="703.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="693" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="703.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (1,416,959 samples, 1.50%)</title><rect x="578.7" y="373" width="14.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="581.70" y="383.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="693" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="703.5" ></text>
</g>
<g >
<title>[unknown] (9,931,942 samples, 10.55%)</title><rect x="393.9" y="85" width="103.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="396.89" y="95.5" >[unknown]</text>
</g>
<g >
<title>dlopen_implementation (1,416,959 samples, 1.50%)</title><rect x="578.7" y="565" width="14.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="581.70" y="575.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::select_device (709,135 samples, 0.75%)</title><rect x="233.1" y="869" width="7.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="236.11" y="879.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (702,985 samples, 0.75%)</title><rect x="709.6" y="789" width="7.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="712.61" y="799.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="709" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, AllocationMeasureMode&gt; &gt; (2,127,960 samples, 2.26%)</title><rect x="804.7" y="837" width="22.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="807.72" y="847.5" >s..</text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="709" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="719.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;MultiArgumentKernelTest&gt;::RegisterTests (1,419,056 samples, 1.51%)</title><rect x="767.8" y="853" width="14.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="770.80" y="863.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="869" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="879.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="949" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="959.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runImpl (709,135 samples, 0.75%)</title><rect x="233.1" y="917" width="7.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="236.11" y="927.5" ></text>
</g>
<g >
<title>__strlen_avx2 (715,590 samples, 0.76%)</title><rect x="556.5" y="325" width="7.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="559.52" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (709,428 samples, 0.75%)</title><rect x="804.7" y="821" width="7.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="807.72" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="101" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="111.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::run (34,047,400 samples, 36.16%)</title><rect x="246.4" y="853" width="354.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="249.44" y="863.5" >TestCase&lt;SubmitKernelArguments&gt;::run</text>
</g>
<g >
<title>__GI__dl_catch_exception (1,416,959 samples, 1.50%)</title><rect x="578.7" y="437" width="14.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="581.70" y="447.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt;, 5ul&gt; (1,382,635 samples, 1.47%)</title><rect x="738.7" y="805" width="14.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="741.73" y="815.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (692,742 samples, 0.74%)</title><rect x="738.7" y="741" width="7.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="741.73" y="751.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="885" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="895.5" ></text>
</g>
<g >
<title>[unknown] (16,306,505 samples, 17.32%)</title><rect x="327.5" y="277" width="169.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="330.53" y="287.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="629" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="639.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="645" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="655.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="773" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="783.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="213" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="223.5" ></text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (679,671 samples, 0.72%)</title><rect x="621.7" y="789" width="7.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="624.73" y="799.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (704,077 samples, 0.75%)</title><rect x="672.8" y="773" width="7.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="675.78" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;unsigned long, unsigned long, bool, bool, bool&gt; &gt; (679,671 samples, 0.72%)</title><rect x="621.7" y="837" width="7.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="624.73" y="847.5" ></text>
</g>
<g >
<title>_int_malloc (709,566 samples, 0.75%)</title><rect x="856.4" y="773" width="7.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="859.42" y="783.5" ></text>
</g>
<g >
<title>__GI___snprintf (1,417,527 samples, 1.51%)</title><rect x="643.3" y="789" width="14.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="646.32" y="799.5" ></text>
</g>
<g >
<title>_dl_open (31,212,003 samples, 33.15%)</title><rect x="246.4" y="469" width="324.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="249.44" y="479.5" >_dl_open</text>
</g>
<g >
<title>__ieee754_acos_ifunc (523,236 samples, 0.56%)</title><rect x="951.3" y="837" width="5.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="954.29" y="847.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="229" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="239.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="661" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="671.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="565" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (708,530 samples, 0.75%)</title><rect x="571.3" y="549" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="574.32" y="559.5" ></text>
</g>
<g >
<title>__GI___snprintf (692,742 samples, 0.74%)</title><rect x="738.7" y="757" width="7.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="741.73" y="767.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="245" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (710,054 samples, 0.75%)</title><rect x="908.1" y="805" width="7.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="911.13" y="815.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="549" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="559.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (706,241 samples, 0.75%)</title><rect x="564.0" y="325" width="7.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="566.97" y="335.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="757" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="767.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (708,443 samples, 0.75%)</title><rect x="586.1" y="357" width="7.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="589.07" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (686,651 samples, 0.73%)</title><rect x="628.8" y="725" width="7.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="631.80" y="735.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;, 6ul&gt; (709,425 samples, 0.75%)</title><rect x="886.0" y="821" width="7.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="888.97" y="831.5" ></text>
</g>
<g >
<title>dl_open_worker (1,416,959 samples, 1.50%)</title><rect x="578.7" y="453" width="14.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="581.70" y="463.5" ></text>
</g>
<g >
<title>arena_get2 (199,998 samples, 0.21%)</title><rect x="986.9" y="693" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="989.88" y="703.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="581" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="741" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="149" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="159.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="917" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="927.5" ></text>
</g>
<g >
<title>__readlink (663,268 samples, 0.70%)</title><rect x="600.8" y="837" width="6.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="603.83" y="847.5" ></text>
</g>
<g >
<title>dl_open_worker (31,212,003 samples, 33.15%)</title><rect x="246.4" y="437" width="324.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="249.44" y="447.5" >dl_open_worker</text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (700,509 samples, 0.74%)</title><rect x="753.1" y="837" width="7.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="756.12" y="847.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="869" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="165" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="175.5" ></text>
</g>
<g >
<title>std::ostream::put (709,216 samples, 0.75%)</title><rect x="782.6" y="773" width="7.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="785.58" y="783.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, unsigned long, unsigned long, TmpMemoryStrategy, unsigned long&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul&gt; &gt;::Advance (709,317 samples, 0.75%)</title><rect x="797.3" y="837" width="7.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="800.34" y="847.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (709,425 samples, 0.75%)</title><rect x="886.0" y="757" width="7.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="888.97" y="767.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="757" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (700,509 samples, 0.74%)</title><rect x="753.1" y="789" width="7.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="756.12" y="799.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;TmpBufferFixedSizeTest&gt;::RegisterTests (709,290 samples, 0.75%)</title><rect x="790.0" y="853" width="7.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="792.96" y="863.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (709,216 samples, 0.75%)</title><rect x="782.6" y="805" width="7.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="785.58" y="815.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="837" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="847.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="725" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2,124,356 samples, 2.26%)</title><rect x="475.2" y="69" width="22.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="478.15" y="79.5" >[..</text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="181" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="191.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="725" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="735.5" ></text>
</g>
<g >
<title>__brk (1,424,212 samples, 1.51%)</title><rect x="534.3" y="213" width="14.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="537.33" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2,124,356 samples, 2.26%)</title><rect x="475.2" y="53" width="22.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="478.15" y="63.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="709" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="719.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="245" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="255.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,419,338 samples, 1.51%)</title><rect x="841.6" y="821" width="14.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="844.65" y="831.5" ></text>
</g>
<g >
<title>dl_main (4,488,195 samples, 4.77%)</title><rect x="930.8" y="901" width="46.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="933.79" y="911.5" >dl_m..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="805" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="815.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (852,618 samples, 0.91%)</title><rect x="930.8" y="821" width="8.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="933.79" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="789" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="799.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1,417,715 samples, 1.51%)</title><rect x="246.4" y="421" width="14.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="249.44" y="431.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (21,970,596 samples, 23.34%)</title><rect x="268.6" y="309" width="228.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="271.58" y="319.5" >__memcpy_avx_unaligned_erms</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="661" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="671.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::run (709,135 samples, 0.75%)</title><rect x="233.1" y="933" width="7.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="236.11" y="943.5" ></text>
</g>
<g >
<title>main (64,279,457 samples, 68.27%)</title><rect x="246.4" y="917" width="669.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="249.44" y="927.5" >main</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (702,985 samples, 0.75%)</title><rect x="709.6" y="757" width="7.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="712.61" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (709,978 samples, 0.75%)</title><rect x="863.8" y="837" width="7.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="866.81" y="847.5" ></text>
</g>
<g >
<title>_int_malloc (700,509 samples, 0.74%)</title><rect x="753.1" y="773" width="7.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="756.12" y="783.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="645" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="655.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (709,135 samples, 0.75%)</title><rect x="233.1" y="501" width="7.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="236.11" y="511.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::PostFlagParsingInit (29,568,789 samples, 31.41%)</title><rect x="607.7" y="869" width="307.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="610.74" y="879.5" >testing::internal::UnitTestImpl::PostFlag..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (96,747 samples, 0.10%)</title><rect x="981.8" y="805" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="984.77" y="815.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (97,219 samples, 0.10%)</title><rect x="24.8" y="949" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="27.77" y="959.5" ></text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="773" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="783.5" ></text>
</g>
<g >
<title>_dl_init (29,794,288 samples, 31.65%)</title><rect x="261.2" y="389" width="310.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="264.19" y="399.5" >_dl_init</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="629" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="639.5" ></text>
</g>
<g >
<title>[unknown] (12,781,902 samples, 13.58%)</title><rect x="364.2" y="133" width="133.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="367.22" y="143.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="677" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="687.5" ></text>
</g>
<g >
<title>ur::level_zero::urAdapterGet (31,920,533 samples, 33.90%)</title><rect x="246.4" y="677" width="332.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="249.44" y="687.5" >ur::level_zero::urAdapterGet</text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,409,097 samples, 1.50%)</title><rect x="665.4" y="805" width="14.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="668.44" y="815.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="821" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="831.5" ></text>
</g>
<g >
<title>_dl_start_final (4,488,195 samples, 4.77%)</title><rect x="930.8" y="933" width="46.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="933.79" y="943.5" >_dl_..</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmMemoryAllocationTest&gt;::RegisterTests (3,548,132 samples, 3.77%)</title><rect x="826.9" y="853" width="36.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="829.87" y="863.5" >tes..</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="757" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="767.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="917" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="927.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="613" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="623.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;SubmitBarrierTest&gt;::RegisterTests (709,216 samples, 0.75%)</title><rect x="782.6" y="853" width="7.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="785.58" y="863.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="901" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="911.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runImpl (34,047,400 samples, 36.16%)</title><rect x="246.4" y="837" width="354.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="249.44" y="847.5" >TestCase&lt;SubmitKernelArguments&gt;::runImpl</text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="741" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="751.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="789" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="799.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="741" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="751.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="805" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (709,133 samples, 0.75%)</title><rect x="834.3" y="821" width="7.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="837.26" y="831.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;, 5ul&gt; (3,537,785 samples, 3.76%)</title><rect x="680.1" y="805" width="36.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="683.11" y="815.5" >voi..</text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="677" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="197" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="207.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,417,715 samples, 1.51%)</title><rect x="246.4" y="373" width="14.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="249.44" y="383.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="677" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (199,998 samples, 0.21%)</title><rect x="986.9" y="789" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="989.88" y="799.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::ComputeCurrentValue (709,739 samples, 0.75%)</title><rect x="900.7" y="837" width="7.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="903.74" y="847.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;, 9ul&gt; (5,654,406 samples, 6.01%)</title><rect x="658.1" y="821" width="58.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="661.07" y="831.5" >void t..</text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="789" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="799.5" ></text>
</g>
<g >
<title>strcmp (592,537 samples, 0.63%)</title><rect x="962.4" y="773" width="6.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="965.44" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (199,998 samples, 0.21%)</title><rect x="986.9" y="773" width="2.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="989.88" y="783.5" ></text>
</g>
<g >
<title>BenchmarkMain::setupEnvironment (663,268 samples, 0.70%)</title><rect x="600.8" y="885" width="6.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="603.83" y="895.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="741" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="751.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;TmpBufferMixedSizeTest&gt;::RegisterTests (709,317 samples, 0.75%)</title><rect x="797.3" y="853" width="7.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="800.34" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2,124,356 samples, 2.26%)</title><rect x="475.2" y="37" width="22.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="478.15" y="47.5" >[..</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;EventTimeTest&gt;::RegisterTests (686,651 samples, 0.73%)</title><rect x="628.8" y="853" width="7.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="631.80" y="863.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (2,834,800 samples, 3.01%)</title><rect x="680.1" y="789" width="29.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="683.11" y="799.5" >st..</text>
</g>
<g >
<title>elf_setup_debug_entry (282,244 samples, 0.30%)</title><rect x="974.6" y="885" width="2.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="977.57" y="895.5" ></text>
</g>
<g >
<title>std::ostream::put (689,893 samples, 0.73%)</title><rect x="745.9" y="757" width="7.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="748.94" y="767.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::platform_impl::get_platforms (34,047,400 samples, 36.16%)</title><rect x="246.4" y="741" width="354.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="249.44" y="751.5" >sycl::_V1::detail::platform_impl::get_platforms</text>
</g>
<g >
<title>LifecycleCommandListTest_Test_Test::AddToRegistry (655,371 samples, 0.70%)</title><rect x="915.5" y="901" width="6.8" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="918.52" y="911.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="293" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="303.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1,416,959 samples, 1.50%)</title><rect x="578.7" y="469" width="14.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="581.70" y="479.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::ur::initializeUr (34,047,400 samples, 36.16%)</title><rect x="246.4" y="709" width="354.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="249.44" y="719.5" >sycl::_V1::detail::ur::initializeUr</text>
</g>
<g >
<title>alloc_new_heap (199,998 samples, 0.21%)</title><rect x="986.9" y="629" width="2.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="989.88" y="639.5" ></text>
</g>
<g >
<title>_int_malloc (4,985,092 samples, 5.29%)</title><rect x="497.3" y="277" width="51.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="500.27" y="287.5" >_int_..</text>
</g>
<g >
<title>start_thread (1,200,488 samples, 1.28%)</title><rect x="977.5" y="949" width="12.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="959.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (679,671 samples, 0.72%)</title><rect x="621.7" y="773" width="7.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="624.73" y="783.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (709,224 samples, 0.75%)</title><rect x="878.6" y="789" width="7.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="881.59" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="821" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="831.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="773" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="783.5" ></text>
</g>
<g >
<title>_dl_open_relocate_one_object (1,417,715 samples, 1.51%)</title><rect x="246.4" y="389" width="14.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="249.44" y="399.5" ></text>
</g>
<g >
<title>[unknown] (708,710 samples, 0.75%)</title><rect x="541.8" y="117" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="544.78" y="127.5" ></text>
</g>
<g >
<title>__printf_buffer_init_end (1,417,527 samples, 1.51%)</title><rect x="643.3" y="725" width="14.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="646.32" y="735.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (689,893 samples, 0.73%)</title><rect x="745.9" y="741" width="7.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="748.94" y="751.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="293" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="303.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="837" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="847.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="757" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="767.5" ></text>
</g>
<g >
<title>___dlopen (709,135 samples, 0.75%)</title><rect x="233.1" y="661" width="7.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="236.11" y="671.5" ></text>
</g>
<g >
<title>dlopen_doit (1,416,959 samples, 1.50%)</title><rect x="578.7" y="501" width="14.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="581.70" y="511.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runFromCommandLine (34,047,400 samples, 36.16%)</title><rect x="246.4" y="869" width="354.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="249.44" y="879.5" >TestCase&lt;SubmitKernelArguments&gt;::runFromCommandL..</text>
</g>
<g >
<title>__glibc_morecore (1,424,212 samples, 1.51%)</title><rect x="534.3" y="245" width="14.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="537.33" y="255.5" ></text>
</g>
<g >
<title>_int_free (709,317 samples, 0.75%)</title><rect x="797.3" y="805" width="7.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="800.34" y="815.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (679,671 samples, 0.72%)</title><rect x="621.7" y="805" width="7.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="624.73" y="815.5" ></text>
</g>
<g >
<title>[unknown] (16,306,505 samples, 17.32%)</title><rect x="327.5" y="261" width="169.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="330.53" y="271.5" >[unknown]</text>
</g>
<g >
<title>open_verify (507,231 samples, 0.54%)</title><rect x="939.7" y="821" width="5.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="942.66" y="831.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="773" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="783.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="485" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="495.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="725" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="735.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="469" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (710,054 samples, 0.75%)</title><rect x="908.1" y="789" width="7.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="911.13" y="799.5" ></text>
</g>
<g >
<title>loader::context_t::init (31,920,533 samples, 33.90%)</title><rect x="246.4" y="581" width="332.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="249.44" y="591.5" >loader::context_t::init</text>
</g>
<g >
<title>zeInit (31,920,533 samples, 33.90%)</title><rect x="246.4" y="645" width="332.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="249.44" y="655.5" >zeInit</text>
</g>
<g >
<title>[unknown] (2,145,497 samples, 2.28%)</title><rect x="497.3" y="245" width="22.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="500.27" y="255.5" >[..</text>
</g>
<g >
<title>open_verify (709,135 samples, 0.75%)</title><rect x="233.1" y="421" width="7.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="236.11" y="431.5" ></text>
</g>
<g >
<title>[unknown] (709,058 samples, 0.75%)</title><rect x="253.8" y="325" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="256.81" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, AllocationMeasureMode&gt; &gt; (2,128,471 samples, 2.26%)</title><rect x="834.3" y="837" width="22.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="837.26" y="847.5" >s..</text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="853" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="863.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="501" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="511.5" ></text>
</g>
<g >
<title>_dl_open_relocate_one_object (1,416,959 samples, 1.50%)</title><rect x="578.7" y="405" width="14.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="581.70" y="415.5" ></text>
</g>
<g >
<title>[unknown] (709,058 samples, 0.75%)</title><rect x="253.8" y="309" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="256.81" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt; &gt; (7,071,933 samples, 7.51%)</title><rect x="643.3" y="837" width="73.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="646.32" y="847.5" >std::__c..</text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="85" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="95.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="181" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="191.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (710,168 samples, 0.75%)</title><rect x="871.2" y="837" width="7.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="874.20" y="847.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="549" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="559.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="821" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="831.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="533" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="543.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="565" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="575.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="165" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="175.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (709,195 samples, 0.75%)</title><rect x="819.5" y="789" width="7.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="822.49" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="117" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="127.5" ></text>
</g>
<g >
<title>__GI___mmap64 (99,999 samples, 0.11%)</title><rect x="986.9" y="597" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="989.88" y="607.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="725" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="735.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="805" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="815.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="837" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="847.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="789" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="799.5" ></text>
</g>
<g >
<title>__mmap64 (461,928 samples, 0.49%)</title><rect x="934.9" y="773" width="4.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="937.85" y="783.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (1,417,715 samples, 1.51%)</title><rect x="246.4" y="357" width="14.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="249.44" y="367.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="741" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt; &gt; (1,382,635 samples, 1.47%)</title><rect x="738.7" y="837" width="14.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="741.73" y="847.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmRandomMemoryAllocationTest&gt;::RegisterTests (4,257,851 samples, 4.52%)</title><rect x="863.8" y="853" width="44.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="866.81" y="863.5" >test..</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="901" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="911.5" ></text>
</g>
<g >
<title>void testing::internal::InitGoogleTestImpl&lt;char&gt; (29,568,789 samples, 31.41%)</title><rect x="607.7" y="885" width="307.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="610.74" y="895.5" >void testing::internal::InitGoogleTestImp..</text>
</g>
<g >
<title>ur_lib::context_t::Init (709,135 samples, 0.75%)</title><rect x="233.1" y="709" width="7.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="236.11" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="53" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="63.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTo&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt; (1,382,635 samples, 1.47%)</title><rect x="738.7" y="821" width="14.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="741.73" y="831.5" ></text>
</g>
<g >
<title>_dl_map_segment (461,928 samples, 0.49%)</title><rect x="934.9" y="789" width="4.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="937.85" y="799.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2,846,102 samples, 3.02%)</title><rect x="944.9" y="885" width="29.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="947.94" y="895.5" >_d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (710,054 samples, 0.75%)</title><rect x="908.1" y="837" width="7.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="911.13" y="847.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="549" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="559.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="533" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="543.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="565" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="575.5" ></text>
</g>
<g >
<title>ur_adapter_handle_t_::ur_adapter_handle_t_ (31,920,533 samples, 33.90%)</title><rect x="246.4" y="661" width="332.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="249.44" y="671.5" >ur_adapter_handle_t_::ur_adapter_handle_t_</text>
</g>
<g >
<title>operator new (709,566 samples, 0.75%)</title><rect x="856.4" y="805" width="7.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="859.42" y="815.5" ></text>
</g>
<g >
<title>gtest_MultiArgumentKernelTestMultiArgumentKernelTest_EvalGenerateName_[abi:cxx11] (709,846 samples, 0.75%)</title><rect x="767.8" y="837" width="7.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="770.80" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="69" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt; &gt; (1,418,649 samples, 1.51%)</title><rect x="878.6" y="837" width="14.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="881.59" y="847.5" ></text>
</g>
<g >
<title>dlopen_doit (31,212,003 samples, 33.15%)</title><rect x="246.4" y="485" width="324.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="249.44" y="495.5" >dlopen_doit</text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="213" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="223.5" ></text>
</g>
<g >
<title>BenchmarkMain::main (64,279,457 samples, 68.27%)</title><rect x="246.4" y="901" width="669.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="249.44" y="911.5" >BenchmarkMain::main</text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runFromCommandLine (709,135 samples, 0.75%)</title><rect x="233.1" y="949" width="7.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="236.11" y="959.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (709,135 samples, 0.75%)</title><rect x="233.1" y="549" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="236.11" y="559.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="501" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="511.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::platform_impl::get_platforms (709,135 samples, 0.75%)</title><rect x="233.1" y="821" width="7.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="236.11" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="229" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="239.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (371,319 samples, 0.39%)</title><rect x="240.5" y="949" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="243.49" y="959.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="853" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="863.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (29,794,288 samples, 31.65%)</title><rect x="261.2" y="341" width="310.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="264.19" y="351.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (709,290 samples, 0.75%)</title><rect x="790.0" y="821" width="7.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="792.96" y="831.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="709" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (709,133 samples, 0.75%)</title><rect x="834.3" y="805" width="7.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="837.26" y="815.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="853" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="863.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, bool, bool&gt;, 5ul&gt; (709,216 samples, 0.75%)</title><rect x="782.6" y="821" width="7.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="785.58" y="831.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::ur::initializeUr (709,135 samples, 0.75%)</title><rect x="233.1" y="805" width="7.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="236.11" y="815.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="485" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;sycl::_V1::detail::RTDeviceBinaryImage const*, std::pair&lt;sycl::_V1::detail::RTDeviceBinaryImage const* const, std::unordered_map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;sycl::_V1::detail::RTDeviceBinaryImage const* const, std::unordered_map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;sycl::_V1::detail::RTDeviceBinaryImage const*&gt;, std::hash&lt;sycl::_V1::detail::RTDeviceBinaryImage const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (645,165 samples, 0.69%)</title><rect x="922.3" y="853" width="6.8" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="925.34" y="863.5" ></text>
</g>
<g >
<title>_dl_catch_error (1,416,959 samples, 1.50%)</title><rect x="578.7" y="533" width="14.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="581.70" y="543.5" ></text>
</g>
<g >
<title>operator new (674,867 samples, 0.72%)</title><rect x="614.7" y="789" width="7.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="617.70" y="799.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="597" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="607.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="245.4" y="693" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.40" y="703.5" ></text>
</g>
<g >
<title>clone3 (1,200,488 samples, 1.28%)</title><rect x="977.5" y="965" width="12.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="980.50" y="975.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="741" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="751.5" ></text>
</g>
<g >
<title>_dl_open (709,135 samples, 0.75%)</title><rect x="233.1" y="565" width="7.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="236.11" y="575.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="757" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="767.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="549" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="559.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (705,020 samples, 0.75%)</title><rect x="665.4" y="789" width="7.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="668.44" y="799.5" ></text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="933" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="943.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="533" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="543.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="677" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (65,579,993 samples, 69.65%)</title><rect x="246.4" y="949" width="682.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="249.44" y="959.5" >__libc_start_main_impl</text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="917" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="927.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="901" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="911.5" ></text>
</g>
<g >
<title>_dl_map_segments (852,618 samples, 0.91%)</title><rect x="930.8" y="805" width="8.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="933.79" y="815.5" ></text>
</g>
<g >
<title>_itoa_word (709,425 samples, 0.75%)</title><rect x="886.0" y="725" width="7.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="888.97" y="735.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4,985,092 samples, 5.29%)</title><rect x="497.3" y="293" width="51.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="500.27" y="303.5" >__GI_..</text>
</g>
<g >
<title>__GI___libc_free (709,210 samples, 0.75%)</title><rect x="775.2" y="805" width="7.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="778.19" y="815.5" ></text>
</g>
<g >
<title>api_overhead_be (94,150,137 samples, 100.00%)</title><rect x="10.0" y="981" width="980.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >api_overhead_be</text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="773" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="783.5" ></text>
</g>
<g >
<title>__mmap64 (390,690 samples, 0.41%)</title><rect x="930.8" y="789" width="4.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="933.79" y="799.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="357" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="367.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="757" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="767.5" ></text>
</g>
<g >
<title>urLoaderInit (2,126,867 samples, 2.26%)</title><rect x="578.7" y="693" width="22.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="581.70" y="703.5" >u..</text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (709,224 samples, 0.75%)</title><rect x="878.6" y="821" width="7.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="881.59" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1,424,212 samples, 1.51%)</title><rect x="534.3" y="181" width="14.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.33" y="191.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, AllocationMeasureMode&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul&gt; &gt;::Advance (709,566 samples, 0.75%)</title><rect x="856.4" y="837" width="7.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="859.42" y="847.5" ></text>
</g>
<g >
<title>_int_malloc (674,867 samples, 0.72%)</title><rect x="614.7" y="757" width="7.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="617.70" y="767.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (704,077 samples, 0.75%)</title><rect x="672.8" y="789" width="7.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="675.78" y="799.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::ur::initializeUr (709,135 samples, 0.75%)</title><rect x="233.1" y="789" width="7.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="236.11" y="799.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="821" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="831.5" ></text>
</g>
<g >
<title>_int_free (709,428 samples, 0.75%)</title><rect x="804.7" y="805" width="7.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="807.72" y="815.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (572,030 samples, 0.61%)</title><rect x="968.6" y="853" width="6.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="971.61" y="863.5" ></text>
</g>
<g >
<title>do_lookup_x (592,537 samples, 0.63%)</title><rect x="962.4" y="805" width="6.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="965.44" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::internal::DefaultParamName&lt;std::tuple&lt;Api, unsigned long, bool, bool, unsigned long, bool, unsigned long, unsigned long&gt; &gt; (709,846 samples, 0.75%)</title><rect x="767.8" y="821" width="7.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="770.80" y="831.5" ></text>
</g>
<g >
<title>_dl_map_object (1,359,849 samples, 1.44%)</title><rect x="930.8" y="837" width="14.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="933.79" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1,424,212 samples, 1.51%)</title><rect x="534.3" y="149" width="14.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.33" y="159.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;EnqueueNdrTimeTest&gt;::RegisterTests (679,671 samples, 0.72%)</title><rect x="621.7" y="853" width="7.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="624.73" y="863.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (709,337 samples, 0.75%)</title><rect x="812.1" y="789" width="7.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="815.11" y="799.5" ></text>
</g>
<g >
<title>logger::create_logger (709,908 samples, 0.75%)</title><rect x="593.4" y="613" width="7.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="596.44" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1,424,212 samples, 1.51%)</title><rect x="534.3" y="165" width="14.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.33" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="133" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="143.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="725" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="735.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="789" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="799.5" ></text>
</g>
<g >
<title>dl_open_worker (709,135 samples, 0.75%)</title><rect x="233.1" y="533" width="7.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="236.11" y="543.5" ></text>
</g>
<g >
<title>ur_loader::LibLoader::loadAdapterLibrary (709,135 samples, 0.75%)</title><rect x="233.1" y="677" width="7.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="236.11" y="687.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,417,527 samples, 1.51%)</title><rect x="643.3" y="821" width="14.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="646.32" y="831.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="805" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="815.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="741" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="751.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="709" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="719.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="501" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="511.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="693" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="703.5" ></text>
</g>
<g >
<title>[unknown] (708,710 samples, 0.75%)</title><rect x="541.8" y="101" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="544.78" y="111.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="869" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="879.5" ></text>
</g>
<g >
<title>_dlerror_run (31,212,003 samples, 33.15%)</title><rect x="246.4" y="533" width="324.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="249.44" y="543.5" >_dlerror_run</text>
</g>
<g >
<title>sycl::_V1::platform::get_platforms (34,047,400 samples, 36.16%)</title><rect x="246.4" y="757" width="354.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="249.44" y="767.5" >sycl::_V1::platform::get_platforms</text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="741" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="751.5" ></text>
</g>
<g >
<title>sycl::_V1::device::get_devices (34,047,400 samples, 36.16%)</title><rect x="246.4" y="773" width="354.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="249.44" y="783.5" >sycl::_V1::device::get_devices</text>
</g>
<g >
<title>elf_machine_rela (1,663,827 samples, 1.77%)</title><rect x="951.3" y="853" width="17.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="954.29" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (709,566 samples, 0.75%)</title><rect x="856.4" y="789" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="859.42" y="799.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (410,009 samples, 0.44%)</title><rect x="977.5" y="805" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="815.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1,359,849 samples, 1.44%)</title><rect x="930.8" y="885" width="14.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="933.79" y="895.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="613" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="623.5" ></text>
</g>
<g >
<title>std::locale::locale (709,290 samples, 0.75%)</title><rect x="790.0" y="805" width="7.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="792.96" y="815.5" ></text>
</g>
<g >
<title>sysmalloc (2,839,595 samples, 3.02%)</title><rect x="519.6" y="261" width="29.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="522.60" y="271.5" >sy..</text>
</g>
<g >
<title>void testing::internal::CartesianProductGenerator&lt;Api, unsigned long, bool, bool, unsigned long, bool, unsigned long, unsigned long&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul&gt; &gt;::AdvanceIfEnd&lt;6ul&gt; (709,210 samples, 0.75%)</title><rect x="775.2" y="821" width="7.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="778.19" y="831.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (506,756 samples, 0.54%)</title><rect x="977.5" y="821" width="5.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="831.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="485" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="495.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmBatchMemoryAllocationTest&gt;::RegisterTests (2,127,960 samples, 2.26%)</title><rect x="804.7" y="853" width="22.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="807.72" y="863.5" >t..</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="469" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="479.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteRegularCommandListWithImmediateTest&gt;::RegisterTests (709,897 samples, 0.75%)</title><rect x="760.4" y="853" width="7.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="763.42" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (674,867 samples, 0.72%)</title><rect x="614.7" y="773" width="7.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="617.70" y="783.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="677" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="687.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="645" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="655.5" ></text>
</g>
<g >
<title>call_init (29,794,288 samples, 31.65%)</title><rect x="261.2" y="357" width="310.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="264.19" y="367.5" >call_init</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="773" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="37" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="47.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="757" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="767.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,212,003 samples, 33.15%)</title><rect x="246.4" y="501" width="324.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="249.44" y="511.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="837" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="847.5" ></text>
</g>
<g >
<title>[unknown] (14,194,003 samples, 15.08%)</title><rect x="349.5" y="197" width="147.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="352.52" y="207.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="821" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="831.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="517" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="527.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="661" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="671.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="805" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="815.5" ></text>
</g>
<g >
<title>__sycl_register_lib (645,165 samples, 0.69%)</title><rect x="922.3" y="901" width="6.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="925.34" y="911.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="565" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="575.5" ></text>
</g>
<g >
<title>__printf_buffer (709,195 samples, 0.75%)</title><rect x="819.5" y="741" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="822.49" y="751.5" ></text>
</g>
<g >
<title>__GI_getenv (624,460 samples, 0.66%)</title><rect x="25.8" y="949" width="6.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="28.78" y="959.5" ></text>
</g>
<g >
<title>ur_validation_layer::getContext (709,908 samples, 0.75%)</title><rect x="593.4" y="645" width="7.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="596.44" y="655.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="789" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="799.5" ></text>
</g>
<g >
<title>_dl_start (4,654,740 samples, 4.94%)</title><rect x="929.1" y="949" width="48.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="932.05" y="959.5" >_dl_..</text>
</g>
<g >
<title>[unknown] (166,545 samples, 0.18%)</title><rect x="929.1" y="917" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="932.05" y="927.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (199,998 samples, 0.21%)</title><rect x="986.9" y="821" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="989.88" y="831.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="869" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="879.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (309,252 samples, 0.33%)</title><rect x="978.6" y="741" width="3.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="981.55" y="751.5" ></text>
</g>
<g >
<title>_start (70,234,733 samples, 74.60%)</title><rect x="246.4" y="965" width="731.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="249.44" y="975.5" >_start</text>
</g>
<g >
<title>__vsnprintf_internal (709,195 samples, 0.75%)</title><rect x="819.5" y="757" width="7.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="822.49" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="133" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="143.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (709,897 samples, 0.75%)</title><rect x="760.4" y="805" width="7.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="763.42" y="815.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1,416,959 samples, 1.50%)</title><rect x="578.7" y="517" width="14.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="581.70" y="527.5" ></text>
</g>
<g >
<title>__GI_mprotect (610,245 samples, 0.65%)</title><rect x="944.9" y="853" width="6.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="947.94" y="863.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="757" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="767.5" ></text>
</g>
<g >
<title>WorkingDirectoryHelper::changeDirectoryToExeDirectory (663,268 samples, 0.70%)</title><rect x="600.8" y="869" width="6.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="603.83" y="879.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="517" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="527.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (709,135 samples, 0.75%)</title><rect x="233.1" y="517" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="236.11" y="527.5" ></text>
</g>
<g >
<title>[[heap]] (709,309 samples, 0.75%)</title><rect x="10.0" y="965" width="7.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>openaux (1,359,849 samples, 1.44%)</title><rect x="930.8" y="853" width="14.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="933.79" y="863.5" ></text>
</g>
<g >
<title>__printf_buffer (709,425 samples, 0.75%)</title><rect x="886.0" y="741" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="888.97" y="751.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;bool, bool, bool, bool, bool, bool&gt;, 5ul&gt; (709,897 samples, 0.75%)</title><rect x="760.4" y="821" width="7.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="763.42" y="831.5" ></text>
</g>
<g >
<title>operator new (709,133 samples, 0.75%)</title><rect x="834.3" y="789" width="7.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="837.26" y="799.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="805" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="815.5" ></text>
</g>
<g >
<title>[unknown] (282,244 samples, 0.30%)</title><rect x="974.6" y="837" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="977.57" y="847.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;zeInit::{lambda (31,920,533 samples, 33.90%)</title><rect x="246.4" y="613" width="332.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="249.44" y="623.5" >std::once_flag::_Prepare_execution::_Prepare..</text>
</g>
<g >
<title>sycl::_V1::platform::get_platforms (709,135 samples, 0.75%)</title><rect x="233.1" y="837" width="7.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="236.11" y="847.5" ></text>
</g>
<g >
<title>_dl_map_object (709,135 samples, 0.75%)</title><rect x="233.1" y="437" width="7.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="236.11" y="447.5" ></text>
</g>
<g >
<title>__printf_buffer_pad (709,195 samples, 0.75%)</title><rect x="819.5" y="725" width="7.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="822.49" y="735.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="789" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="799.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;AllocationMeasureMode&gt;::Iterator::Clone (709,566 samples, 0.75%)</title><rect x="856.4" y="821" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="831.5" ></text>
</g>
<g >
<title>ur_lib::urLoaderInit (2,126,867 samples, 2.26%)</title><rect x="578.7" y="677" width="22.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="581.70" y="687.5" >u..</text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="197" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="207.5" ></text>
</g>
<g >
<title>ur_lib::context_t::context_t (709,908 samples, 0.75%)</title><rect x="593.4" y="661" width="7.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="596.44" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (199,998 samples, 0.21%)</title><rect x="986.9" y="741" width="2.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="989.88" y="751.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="725" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="735.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="933" width="11.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="980.50" y="943.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="821" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="831.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="709" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="719.5" ></text>
</g>
<g >
<title>_dl_catch_error (709,135 samples, 0.75%)</title><rect x="233.1" y="613" width="7.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="236.11" y="623.5" ></text>
</g>
<g >
<title>operator new (708,530 samples, 0.75%)</title><rect x="571.3" y="565" width="7.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="574.32" y="575.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="725" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="735.5" ></text>
</g>
<g >
<title>sycl::_V1::detail::ur::initializeUr (34,047,400 samples, 36.16%)</title><rect x="246.4" y="725" width="354.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="249.44" y="735.5" >sycl::_V1::detail::ur::initializeUr</text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="693" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="703.5" ></text>
</g>
<g >
<title>dl_open_worker (29,794,288 samples, 31.65%)</title><rect x="261.2" y="421" width="310.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="264.19" y="431.5" >dl_open_worker</text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="613" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="623.5" ></text>
</g>
<g >
<title>elf_machine_rela (708,657 samples, 0.75%)</title><rect x="246.4" y="341" width="7.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="249.44" y="351.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="693" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="703.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="885" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="895.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="709" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="719.5" ></text>
</g>
<g >
<title>void testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::AdvanceIfEnd&lt;4ul&gt; (709,317 samples, 0.75%)</title><rect x="893.4" y="821" width="7.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="896.35" y="831.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="725" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="735.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="709" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="719.5" ></text>
</g>
<g >
<title>ur_loader::context_t::init (1,416,959 samples, 1.50%)</title><rect x="578.7" y="613" width="14.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="581.70" y="623.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="693" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="703.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="517" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="527.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="837" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="847.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;ur_lib::urLoaderInit (709,135 samples, 0.75%)</title><rect x="233.1" y="725" width="7.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="236.11" y="735.5" ></text>
</g>
<g >
<title>_int_free (686,651 samples, 0.73%)</title><rect x="628.8" y="709" width="7.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="631.80" y="719.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (29,794,288 samples, 31.65%)</title><rect x="261.2" y="405" width="310.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="264.19" y="415.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmMemoryAllocationTest&gt;::RegisterTests (709,309 samples, 0.75%)</title><rect x="10.0" y="949" width="7.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>_dlerror_run (1,416,959 samples, 1.50%)</title><rect x="578.7" y="549" width="14.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="581.70" y="559.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (709,425 samples, 0.75%)</title><rect x="886.0" y="789" width="7.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="888.97" y="799.5" ></text>
</g>
<g >
<title>operator new (700,509 samples, 0.74%)</title><rect x="753.1" y="805" width="7.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="756.12" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, bool, bool, bool&gt; &gt; (709,216 samples, 0.75%)</title><rect x="782.6" y="837" width="7.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="785.58" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (686,651 samples, 0.73%)</title><rect x="628.8" y="757" width="7.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="631.80" y="767.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (1,417,715 samples, 1.51%)</title><rect x="246.4" y="405" width="14.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="249.44" y="415.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (1,416,959 samples, 1.50%)</title><rect x="578.7" y="421" width="14.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="581.70" y="431.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="885" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="895.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="309" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="319.5" ></text>
</g>
<g >
<title>[unknown] (709,908 samples, 0.75%)</title><rect x="593.4" y="597" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="596.44" y="607.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteCommandListImmediateTest&gt;::RegisterTests (4,177,672 samples, 4.44%)</title><rect x="716.9" y="853" width="43.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="719.93" y="863.5" >test..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,100,489 samples, 1.17%)</title><rect x="977.5" y="901" width="11.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="980.50" y="911.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="325" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="335.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="661" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="117" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="127.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="789" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="799.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,416,959 samples, 1.50%)</title><rect x="578.7" y="661" width="14.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="581.70" y="671.5" ></text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="741" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="751.5" ></text>
</g>
<g >
<title>[unknown] (9,931,942 samples, 10.55%)</title><rect x="393.9" y="101" width="103.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="396.89" y="111.5" >[unknown]</text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;unsigned long&gt;::Iterator::Equals (709,739 samples, 0.75%)</title><rect x="900.7" y="805" width="7.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="903.74" y="815.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="341" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="351.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (702,985 samples, 0.75%)</title><rect x="709.6" y="773" width="7.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="712.61" y="783.5" ></text>
</g>
<g >
<title>[unknown] (217,152 samples, 0.23%)</title><rect x="242.1" y="853" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="245.10" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="85" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="95.5" ></text>
</g>
<g >
<title>sycl::_V1::device::get_devices (709,135 samples, 0.75%)</title><rect x="233.1" y="853" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="236.11" y="863.5" ></text>
</g>
<g >
<title>[unknown] (507,231 samples, 0.54%)</title><rect x="939.7" y="773" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.66" y="783.5" ></text>
</g>
<g >
<title>___dlopen (1,416,959 samples, 1.50%)</title><rect x="578.7" y="581" width="14.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="581.70" y="591.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::Advance (709,317 samples, 0.75%)</title><rect x="893.4" y="837" width="7.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="896.35" y="847.5" ></text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="757" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="767.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1,359,849 samples, 1.44%)</title><rect x="930.8" y="869" width="14.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="933.79" y="879.5" ></text>
</g>
<g >
<title>all (94,150,137 samples, 100%)</title><rect x="10.0" y="997" width="980.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="533" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="543.5" ></text>
</g>
<g >
<title>__GI___snprintf (709,195 samples, 0.75%)</title><rect x="819.5" y="773" width="7.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="822.49" y="783.5" ></text>
</g>
<g >
<title>[unknown] (610,245 samples, 0.65%)</title><rect x="944.9" y="837" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="947.94" y="847.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="549" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="245" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="255.5" ></text>
</g>
<g >
<title>_int_free (709,210 samples, 0.75%)</title><rect x="775.2" y="789" width="7.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="778.19" y="799.5" ></text>
</g>
<g >
<title>__mmap64 (390,690 samples, 0.41%)</title><rect x="930.8" y="773" width="4.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="933.79" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1,424,212 samples, 1.51%)</title><rect x="534.3" y="197" width="14.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="537.33" y="207.5" ></text>
</g>
<g >
<title>__mmap64 (461,928 samples, 0.49%)</title><rect x="934.9" y="757" width="4.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="937.85" y="767.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (507,231 samples, 0.54%)</title><rect x="939.7" y="805" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="942.66" y="815.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="325" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="335.5" ></text>
</g>
<g >
<title>__printf_buffer_pad_1 (709,195 samples, 0.75%)</title><rect x="819.5" y="709" width="7.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="822.49" y="719.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="581" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="591.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="309" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="319.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="629" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="639.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="986.9" y="517" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.88" y="527.5" ></text>
</g>
<g >
<title>[unknown] (707,509 samples, 0.75%)</title><rect x="549.2" y="261" width="7.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="552.16" y="271.5" ></text>
</g>
<g >
<title>arena_get2 (199,998 samples, 0.21%)</title><rect x="986.9" y="677" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="989.88" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, unsigned long, bool, bool, bool, bool&gt; &gt; (674,867 samples, 0.72%)</title><rect x="614.7" y="837" width="7.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="617.70" y="847.5" ></text>
</g>
<g >
<title>openaux (709,135 samples, 0.75%)</title><rect x="233.1" y="453" width="7.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="236.11" y="463.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="645" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="655.5" ></text>
</g>
<g >
<title>[unknown] (20,574,264 samples, 21.85%)</title><rect x="32.3" y="965" width="214.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="35.28" y="975.5" >[unknown]</text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (709,224 samples, 0.75%)</title><rect x="878.6" y="805" width="7.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="881.59" y="815.5" ></text>
</g>
<g >
<title>do_lookup_x (708,657 samples, 0.75%)</title><rect x="246.4" y="293" width="7.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="249.44" y="303.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (26,955,688 samples, 28.63%)</title><rect x="268.6" y="325" width="280.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="271.58" y="335.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>[unknown] (199,998 samples, 0.21%)</title><rect x="244.4" y="869" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="247.36" y="879.5" ></text>
</g>
<g >
<title>tcache_init (199,998 samples, 0.21%)</title><rect x="986.9" y="725" width="2.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="989.88" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="229" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="239.5" ></text>
</g>
<g >
<title>__printf_buffer_snprintf_init (1,417,527 samples, 1.51%)</title><rect x="643.3" y="757" width="14.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="646.32" y="767.5" ></text>
</g>
<g >
<title>[unknown] (461,928 samples, 0.49%)</title><rect x="934.9" y="661" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="937.85" y="671.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="565" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="575.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (709,823 samples, 0.75%)</title><rect x="849.0" y="789" width="7.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="852.03" y="799.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;CreateBufferTest&gt;::RegisterTests (1,344,150 samples, 1.43%)</title><rect x="607.7" y="853" width="14.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="610.74" y="863.5" ></text>
</g>
<g >
<title>[unknown] (663,268 samples, 0.70%)</title><rect x="600.8" y="773" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.83" y="783.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (709,216 samples, 0.75%)</title><rect x="782.6" y="789" width="7.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="785.58" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1,415,383 samples, 1.50%)</title><rect x="519.6" y="213" width="14.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="522.60" y="223.5" ></text>
</g>
<g >
<title>__GI___snprintf (709,425 samples, 0.75%)</title><rect x="886.0" y="773" width="7.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="888.97" y="783.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_lifecycle_command_list.cpp (655,371 samples, 0.70%)</title><rect x="915.5" y="917" width="6.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="918.52" y="927.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (645,165 samples, 0.69%)</title><rect x="922.3" y="837" width="6.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="925.34" y="847.5" ></text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="989.0" y="837" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.96" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="69" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="79.5" ></text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="821" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="831.5" ></text>
</g>
<g >
<title>[unknown] (14,194,003 samples, 15.08%)</title><rect x="349.5" y="181" width="147.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="352.52" y="191.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (674,867 samples, 0.72%)</title><rect x="614.7" y="805" width="7.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="617.70" y="815.5" ></text>
</g>
<g >
<title>[unknown] (709,566 samples, 0.75%)</title><rect x="856.4" y="501" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="859.42" y="511.5" ></text>
</g>
<g >
<title>sycl::_V1::queue::queue&lt;int  (709,135 samples, 0.75%)</title><rect x="233.1" y="885" width="7.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="236.11" y="895.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,418,532 samples, 1.51%)</title><rect x="812.1" y="805" width="14.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="815.11" y="815.5" ></text>
</g>
<g >
<title>[unknown] (390,690 samples, 0.41%)</title><rect x="930.8" y="597" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="933.79" y="607.5" ></text>
</g>
<g >
<title>dlopen_implementation (31,212,003 samples, 33.15%)</title><rect x="246.4" y="549" width="324.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="249.44" y="559.5" >dlopen_implementation</text>
</g>
<g >
<title>[unknown] (1,417,931 samples, 1.51%)</title><rect x="504.8" y="53" width="14.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="507.84" y="63.5" ></text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="805" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="815.5" ></text>
</g>
<g >
<title>[unknown] (13,486,601 samples, 14.32%)</title><rect x="356.9" y="165" width="140.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="359.89" y="175.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (99,999 samples, 0.11%)</title><rect x="987.9" y="597" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.92" y="607.5" ></text>
</g>
<g >
<title>WorkingDirectoryHelper::getExeLocation[abi:cxx11] (663,268 samples, 0.70%)</title><rect x="600.8" y="853" width="6.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="603.83" y="863.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;VirtualMemSetAccessAttribTest&gt;::RegisterTests (710,054 samples, 0.75%)</title><rect x="908.1" y="853" width="7.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="911.13" y="863.5" ></text>
</g>
<g >
<title>[unknown] (96,747 samples, 0.10%)</title><rect x="981.8" y="741" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="984.77" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,094,528 samples, 2.22%)</title><rect x="716.9" y="837" width="21.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="719.93" y="847.5" >s..</text>
</g>
<g >
<title>[unknown] (572,030 samples, 0.61%)</title><rect x="968.6" y="789" width="6.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="971.61" y="799.5" ></text>
</g>
<g >
<title>[unknown] (13,486,601 samples, 14.32%)</title><rect x="356.9" y="149" width="140.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="359.89" y="159.5" >[unknown]</text>
</g>
<g >
<title>call_init (1,300,536 samples, 1.38%)</title><rect x="915.5" y="933" width="13.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="918.52" y="943.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (709,135 samples, 0.75%)</title><rect x="233.1" y="597" width="7.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="236.11" y="607.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="741" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="751.5" ></text>
</g>
<g >
<title>check_match (592,537 samples, 0.63%)</title><rect x="962.4" y="789" width="6.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="965.44" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (710,054 samples, 0.75%)</title><rect x="908.1" y="821" width="7.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="911.13" y="831.5" ></text>
</g>
<g >
<title>[unknown] (674,867 samples, 0.72%)</title><rect x="614.7" y="677" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.70" y="687.5" ></text>
</g>
<g >
<title>[unknown] (709,135 samples, 0.75%)</title><rect x="233.1" y="261" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="236.11" y="271.5" ></text>
</g>
</g>
</svg>
