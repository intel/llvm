<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1000" height="854" onload="init(evt)" viewBox="0 0 1000 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1000.0" height="854.0" fill="url(#background)"  />
<text id="title" x="500.00" y="24" >testFG_BMG_L0 - graph_api_benchmark_ur SinKernelGraph graphs:1, numKernels:100</text>
<text id="details" x="10.00" y="837" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="890.00" y="24" >Search</text>
<text id="ignorecase" x="974.00" y="24" >ic</text>
<text id="matched" x="890.00" y="837" > </text>
<g id="frames">
<g >
<title>SinKernelGraphBase::run (6,083,203 samples, 21.10%)</title><rect x="107.7" y="741" width="206.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="110.71" y="751.5" >SinKernelGraphBase::run</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="341" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="351.5" ></text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="277" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="287.5" >[..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="405" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="415.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="645" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="655.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="629" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="639.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="469" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="479.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="261" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="271.5" >[..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="453" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="463.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="325" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="335.5" >[..</text>
</g>
<g >
<title>SinKernelGraphUR::init (627,461 samples, 2.18%)</title><rect x="62.8" y="709" width="21.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="65.77" y="719.5" >S..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="565" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="575.5" ></text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="293" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="303.5" >[..</text>
</g>
<g >
<title>usm::makeDisjointPool (1,802,806 samples, 6.25%)</title><rect x="171.7" y="645" width="61.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="174.73" y="655.5" >usm::m..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="229" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="239.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="485" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="495.5" >[..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="437" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="447.5" >[..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="549" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="559.5" >[..</text>
</g>
<g >
<title>__readlink (166,666 samples, 0.58%)</title><rect x="97.0" y="613" width="5.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="99.95" y="623.5" ></text>
</g>
<g >
<title>urAdapterGet (454,066 samples, 1.58%)</title><rect x="135.0" y="693" width="15.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="138.00" y="703.5" ></text>
</g>
<g >
<title>__GI___mmap64 (802,848 samples, 2.79%)</title><rect x="107.7" y="421" width="27.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="110.71" y="431.5" >_..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="501" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="511.5" ></text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="293" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="303.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="373" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="383.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="613" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="623.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="501" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="511.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (627,461 samples, 2.18%)</title><rect x="62.8" y="629" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.77" y="639.5" >[..</text>
</g>
<g >
<title>run (18,747,093 samples, 65.03%)</title><rect x="314.5" y="629" width="637.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="317.51" y="639.5" >run</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="405" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="415.5" >[..</text>
</g>
<g >
<title>_start (18,896,776 samples, 65.55%)</title><rect x="314.5" y="773" width="642.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="317.51" y="783.5" >_start</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="581" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="591.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="645" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="655.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="565" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="575.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="405" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="415.5" ></text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::run (18,747,093 samples, 65.03%)</title><rect x="314.5" y="661" width="637.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="317.51" y="671.5" >TestCase&lt;SinKernelGraphArguments&gt;::run</text>
</g>
<g >
<title>getZesDeviceHandle (287,400 samples, 1.00%)</title><rect x="140.7" y="629" width="9.7" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="143.66" y="639.5" ></text>
</g>
<g >
<title>[unknown] (8,957,230 samples, 31.07%)</title><rect x="10.0" y="773" width="304.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >[unknown]</text>
</g>
<g >
<title>[libigc.so.2.16.0+1753355367] (802,947 samples, 2.79%)</title><rect x="262.4" y="533" width="27.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="265.44" y="543.5" >[..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="341" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="351.5" >[..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="277" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="287.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="37" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="47.5" >[..</text>
</g>
<g >
<title>USMFreeImpl (631,091 samples, 2.19%)</title><rect x="171.7" y="533" width="21.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="174.73" y="543.5" >U..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="485" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="495.5" >[..</text>
</g>
<g >
<title>reduce_fast (1,926,905 samples, 6.68%)</title><rect x="607.5" y="565" width="65.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="610.52" y="575.5" >reduce_..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="501" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="511.5" >[..</text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (646,366 samples, 2.24%)</title><rect x="40.8" y="661" width="22.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="43.79" y="671.5" >_..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="597" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="607.5" ></text>
</g>
<g >
<title>[libigc.so.2.16.0+1753355367] (1,531,624 samples, 5.31%)</title><rect x="262.4" y="565" width="52.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="265.44" y="575.5" >[libi..</text>
</g>
<g >
<title>trackingAlloc (802,848 samples, 2.79%)</title><rect x="107.7" y="597" width="27.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="110.71" y="607.5" >t..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.58%)</title><rect x="135.0" y="613" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.00" y="623.5" ></text>
</g>
<g >
<title>ur::level_zero::urProgramBuildExp (2,396,993 samples, 8.32%)</title><rect x="233.0" y="693" width="81.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="236.02" y="703.5" >ur::level..</text>
</g>
<g >
<title>SinKernelGraphBase::run (18,747,093 samples, 65.03%)</title><rect x="314.5" y="613" width="637.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="317.51" y="623.5" >SinKernelGraphBase::run</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (267,580 samples, 0.93%)</title><rect x="956.9" y="581" width="9.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="591.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="517" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="527.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="469" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="479.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="709" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="719.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="469" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="479.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="197" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="207.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="709" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="719.5" ></text>
</g>
<g >
<title>_dl_start (149,683 samples, 0.52%)</title><rect x="951.8" y="757" width="5.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="954.83" y="767.5" ></text>
</g>
<g >
<title>bucket_get_free_chunk (802,848 samples, 2.79%)</title><rect x="107.7" y="629" width="27.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="110.71" y="639.5" >b..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="165" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="175.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="101" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="111.5" >[..</text>
</g>
<g >
<title>umfPoolAlignedMalloc (802,848 samples, 2.79%)</title><rect x="107.7" y="661" width="27.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="110.71" y="671.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="373" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="383.5" >[..</text>
</g>
<g >
<title>SinKernelGraphUR::init (646,366 samples, 2.24%)</title><rect x="40.8" y="677" width="22.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="43.79" y="687.5" >S..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="501" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="511.5" >[..</text>
</g>
<g >
<title>__GI___realpath (166,666 samples, 0.58%)</title><rect x="97.0" y="645" width="5.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="99.95" y="655.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="581" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="591.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="629" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="639.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="469" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="479.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="453" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="463.5" >[..</text>
</g>
<g >
<title>umfMemoryProviderAlloc (802,848 samples, 2.79%)</title><rect x="107.7" y="613" width="27.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="110.71" y="623.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (544,737 samples, 1.89%)</title><rect x="84.1" y="693" width="18.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.10" y="703.5" ></text>
</g>
<g >
<title>disjoint_pool_initialize (1,802,806 samples, 6.25%)</title><rect x="171.7" y="613" width="61.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="174.73" y="623.5" >disjoi..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="629" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="639.5" ></text>
</g>
<g >
<title>graph_api_bench (28,826,986 samples, 100.00%)</title><rect x="10.0" y="789" width="980.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >graph_api_bench</text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::runImpl (18,747,093 samples, 65.03%)</title><rect x="314.5" y="645" width="637.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="317.51" y="655.5" >TestCase&lt;SinKernelGraphArguments&gt;::runImpl</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="709" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="719.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="85" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="95.5" >[..</text>
</g>
<g >
<title>L0HostMemoryProvider::allocateImpl (802,848 samples, 2.79%)</title><rect x="107.7" y="549" width="27.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="110.71" y="559.5" >L..</text>
</g>
<g >
<title>sinf@plt (1,062,446 samples, 3.69%)</title><rect x="915.7" y="581" width="36.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="918.72" y="591.5" >sin..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="741" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="751.5" ></text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="357" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="367.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (538,734 samples, 1.87%)</title><rect x="966.0" y="581" width="18.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="969.02" y="591.5" ></text>
</g>
<g >
<title>USMFreeImpl (678,164 samples, 2.35%)</title><rect x="210.0" y="533" width="23.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="212.97" y="543.5" >U..</text>
</g>
<g >
<title>__GI___mmap64 (493,551 samples, 1.71%)</title><rect x="193.2" y="405" width="16.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="196.19" y="415.5" ></text>
</g>
<g >
<title>sinf_poly (7,138,718 samples, 24.76%)</title><rect x="673.0" y="565" width="242.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="676.03" y="575.5" >sinf_poly</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="677" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="687.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="309" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="319.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="517" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="527.5" ></text>
</g>
<g >
<title>[unknown] (745,840 samples, 2.59%)</title><rect x="343.0" y="565" width="25.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="346.01" y="575.5" >[..</text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="453" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="463.5" ></text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="437" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="447.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (544,737 samples, 1.89%)</title><rect x="84.1" y="757" width="18.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.10" y="767.5" ></text>
</g>
<g >
<title>__GI___mmap64 (802,848 samples, 2.79%)</title><rect x="107.7" y="437" width="27.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="110.71" y="447.5" >_..</text>
</g>
<g >
<title>umfMemoryProviderGetMinPageSize (1,802,806 samples, 6.25%)</title><rect x="171.7" y="597" width="61.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="174.73" y="607.5" >umfMem..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="357" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="367.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="741" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="751.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="149" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="159.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="421" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="431.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="661" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="671.5" ></text>
</g>
<g >
<title>ur_adapter_handle_t_::ur_adapter_handle_t_ (454,066 samples, 1.58%)</title><rect x="135.0" y="661" width="15.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="138.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="565" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="575.5" ></text>
</g>
<g >
<title>clone3 (972,980 samples, 3.38%)</title><rect x="956.9" y="773" width="33.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="959.92" y="783.5" >cl..</text>
</g>
<g >
<title>SinKernelGraphBase::run (646,366 samples, 2.24%)</title><rect x="40.8" y="693" width="22.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="43.79" y="703.5" >S..</text>
</g>
<g >
<title>realpath_stk (166,666 samples, 0.58%)</title><rect x="97.0" y="629" width="5.6" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="99.95" y="639.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.58%)</title><rect x="97.0" y="677" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.95" y="687.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="645" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="655.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="693" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="703.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="533" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="543.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="485" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="495.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="517" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="527.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="421" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="431.5" ></text>
</g>
<g >
<title>ur::level_zero::urContextCreate (627,461 samples, 2.18%)</title><rect x="62.8" y="661" width="21.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="65.77" y="671.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (627,461 samples, 2.18%)</title><rect x="62.8" y="597" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.77" y="607.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="181" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="191.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="757" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="767.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (745,840 samples, 2.59%)</title><rect x="343.0" y="581" width="25.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="346.01" y="591.5" >_..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="453" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="463.5" >[..</text>
</g>
<g >
<title>SinKernelGraphBase::run (627,461 samples, 2.18%)</title><rect x="62.8" y="725" width="21.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="65.77" y="735.5" >S..</text>
</g>
<g >
<title>decltype (((*(({lambda(void*, (auto:1)...)#1} const* const)0)).(operator()&lt;unsigned long, unsigned long, void**&gt;))(static_cast&lt;void*&amp;&amp;&gt;({parm#1}), static_cast&lt;unsigned long&amp;&amp;&gt;({parm#2}), static_cast&lt;unsigned long&amp;&amp;&gt;({parm#2}), static_cast&lt;void**&amp;&amp;&gt;({parm#2}))) umf::memoryProviderMakeUnique&lt;L0HostMemoryProvider, ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;&gt;(ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;)::{lambda(void*, (auto:1)...)#1}::_FUN&lt;unsigned long, unsigned long, void**&gt;(void*, unsigned long, unsigned long, void**) (802,848 samples, 2.79%)</title><rect x="107.7" y="565" width="27.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="110.71" y="575.5" >d..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="245" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="255.5" >[..</text>
</g>
<g >
<title>run (646,366 samples, 2.24%)</title><rect x="40.8" y="709" width="22.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="43.79" y="719.5" >run</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="613" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="623.5" >[..</text>
</g>
<g >
<title>BenchmarkMain::main (18,747,093 samples, 65.03%)</title><rect x="314.5" y="709" width="637.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="317.51" y="719.5" >BenchmarkMain::main</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="213" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="223.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="677" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="687.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="581" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="591.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (544,737 samples, 1.89%)</title><rect x="84.1" y="741" width="18.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.10" y="751.5" ></text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::runFromCommandLine (646,366 samples, 2.24%)</title><rect x="40.8" y="757" width="22.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="43.79" y="767.5" >T..</text>
</g>
<g >
<title>start_thread (972,980 samples, 3.38%)</title><rect x="956.9" y="757" width="33.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="767.5" >st..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.58%)</title><rect x="135.0" y="629" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.00" y="639.5" ></text>
</g>
<g >
<title>BenchmarkMain::executeSingleTest (18,747,093 samples, 65.03%)</title><rect x="314.5" y="693" width="637.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="317.51" y="703.5" >BenchmarkMain::executeSingleTest</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="533" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="543.5" >[..</text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::runImpl (627,461 samples, 2.18%)</title><rect x="62.8" y="757" width="21.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="65.77" y="767.5" >T..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="517" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="527.5" >[..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="197" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="207.5" ></text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::runFromCommandLine (18,747,093 samples, 65.03%)</title><rect x="314.5" y="677" width="637.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="317.51" y="687.5" >TestCase&lt;SinKernelGraphArguments&gt;::runFromCommandLine</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="117" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="127.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="453" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="463.5" >[..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="517" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="527.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="613" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="623.5" >[libze_in..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="597" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="607.5" >[..</text>
</g>
<g >
<title>SinKernelGraphBase::calcRefResults (17,908,621 samples, 62.12%)</title><rect x="343.0" y="597" width="608.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="346.01" y="607.5" >SinKernelGraphBase::calcRefResults</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="709" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="719.5" ></text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::run (646,366 samples, 2.24%)</title><rect x="40.8" y="741" width="22.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="43.79" y="751.5" >T..</text>
</g>
<g >
<title>__GI___ioctl (678,164 samples, 2.35%)</title><rect x="210.0" y="389" width="23.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="212.97" y="399.5" >_..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="133" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="143.5" >[..</text>
</g>
<g >
<title>ur::level_zero::urUSMHostAlloc (802,848 samples, 2.79%)</title><rect x="107.7" y="693" width="27.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="110.71" y="703.5" >u..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (806,314 samples, 2.80%)</title><rect x="956.9" y="741" width="27.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="959.92" y="751.5" >[..</text>
</g>
<g >
<title>ur_usm_pool_handle_t_::allocate (802,848 samples, 2.79%)</title><rect x="107.7" y="677" width="27.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="110.71" y="687.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="645" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="655.5" >[libze_in..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (544,737 samples, 1.89%)</title><rect x="84.1" y="725" width="18.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.10" y="735.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.58%)</title><rect x="97.0" y="661" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="99.95" y="671.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="69" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="79.5" >[..</text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="501" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="511.5" ></text>
</g>
<g >
<title>initPlatforms (454,066 samples, 1.58%)</title><rect x="135.0" y="645" width="15.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="138.00" y="655.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (18,747,093 samples, 65.03%)</title><rect x="314.5" y="757" width="637.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.51" y="767.5" >__libc_start_main_impl</text>
</g>
<g >
<title>run (6,083,203 samples, 21.10%)</title><rect x="107.7" y="757" width="206.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="110.71" y="767.5" >run</text>
</g>
<g >
<title>__libc_start_call_main (18,747,093 samples, 65.03%)</title><rect x="314.5" y="741" width="637.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="317.51" y="751.5" >__libc_start_call_main</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (728,677 samples, 2.53%)</title><rect x="289.7" y="533" width="24.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="292.74" y="543.5" >_..</text>
</g>
<g >
<title>SinKernelGraphUR::init (5,280,355 samples, 18.32%)</title><rect x="135.0" y="725" width="179.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="138.00" y="735.5" >SinKernelGraphUR::init</text>
</g>
<g >
<title>___pthread_mutex_lock (626,490 samples, 2.17%)</title><rect x="150.4" y="485" width="21.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="153.44" y="495.5" >_..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="613" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="623.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="533" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="543.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="597" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="607.5" >[libze_in..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (627,461 samples, 2.18%)</title><rect x="62.8" y="613" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.77" y="623.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="453" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="463.5" ></text>
</g>
<g >
<title>ur::level_zero::urContextCreate (2,429,296 samples, 8.43%)</title><rect x="150.4" y="677" width="82.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="153.44" y="687.5" >ur::level..</text>
</g>
<g >
<title>sinf_poly (1,831,215 samples, 6.35%)</title><rect x="853.5" y="549" width="62.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="856.46" y="559.5" >sinf_p..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="629" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="639.5" >[..</text>
</g>
<g >
<title>UrState::UrState (627,461 samples, 2.18%)</title><rect x="62.8" y="693" width="21.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="65.77" y="703.5" >U..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="549" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="559.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="469" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="479.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="597" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="607.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="229" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="239.5" >[..</text>
</g>
<g >
<title>decltype (((*(({lambda(void*, (auto:1)...)#4} const* const)0)).(operator()&lt;void const*, unsigned long*&gt;))(static_cast&lt;void*&amp;&amp;&gt;({parm#1}), static_cast&lt;void const*&amp;&amp;&gt;({parm#2}), static_cast&lt;unsigned long*&amp;&amp;&gt;({parm#2}))) umf::memoryProviderMakeUnique&lt;L0SharedMemoryProvider, ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;&gt;(ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;)::{lambda(void*, (auto:1)...)#4}::_FUN&lt;void const*, unsigned long*&gt;(void*, void const*, unsigned long*) (678,164 samples, 2.35%)</title><rect x="210.0" y="565" width="23.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="212.97" y="575.5" >d..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="597" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="607.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="501" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="511.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (627,461 samples, 2.18%)</title><rect x="62.8" y="581" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="65.77" y="591.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (802,848 samples, 2.79%)</title><rect x="107.7" y="517" width="27.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="110.71" y="527.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="661" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="671.5" >[libze_in..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="693" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="703.5" >[..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="373" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="383.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="501" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="511.5" >[..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="325" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="335.5" ></text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="261" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="271.5" ></text>
</g>
<g >
<title>__libc_open64 (287,400 samples, 1.00%)</title><rect x="140.7" y="517" width="9.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="143.66" y="527.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="533" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="543.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="645" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="655.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="341" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="351.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="581" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="591.5" ></text>
</g>
<g >
<title>SinKernelGraphUR::allocHost (802,848 samples, 2.79%)</title><rect x="107.7" y="725" width="27.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="110.71" y="735.5" >S..</text>
</g>
<g >
<title>umfPoolCreate (1,802,806 samples, 6.25%)</title><rect x="171.7" y="629" width="61.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="174.73" y="639.5" >umfPoo..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="984.3" y="613" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.33" y="623.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="485" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="495.5" ></text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="261" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="271.5" >[..</text>
</g>
<g >
<title>decltype (((*(({lambda(void*, (auto:1)...)#4} const* const)0)).(operator()&lt;void const*, unsigned long*&gt;))(static_cast&lt;void*&amp;&amp;&gt;({parm#1}), static_cast&lt;void const*&amp;&amp;&gt;({parm#2}), static_cast&lt;unsigned long*&amp;&amp;&gt;({parm#2}))) umf::memoryProviderMakeUnique&lt;L0DeviceMemoryProvider, ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;&gt;(ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;)::{lambda(void*, (auto:1)...)#4}::_FUN&lt;void const*, unsigned long*&gt;(void*, void const*, unsigned long*) (631,091 samples, 2.19%)</title><rect x="171.7" y="565" width="21.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="174.73" y="575.5" >d..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="325" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="335.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="661" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="671.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="277" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="287.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="485" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="495.5" >[..</text>
</g>
<g >
<title>urContextCreate (627,461 samples, 2.18%)</title><rect x="62.8" y="677" width="21.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="65.77" y="687.5" >u..</text>
</g>
<g >
<title>L0MemoryProvider::GetL0MinPageSize (631,091 samples, 2.19%)</title><rect x="171.7" y="549" width="21.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="174.73" y="559.5" >L..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="437" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="447.5" >[..</text>
</g>
<g >
<title>urProgramBuildExp (2,396,993 samples, 8.32%)</title><rect x="233.0" y="709" width="81.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="236.02" y="719.5" >urProgram..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (493,551 samples, 1.71%)</title><rect x="193.2" y="437" width="16.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="196.19" y="447.5" ></text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="469" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="479.5" ></text>
</g>
<g >
<title>TestCase&lt;SinKernelGraphArguments&gt;::runImpl (646,366 samples, 2.24%)</title><rect x="40.8" y="725" width="22.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="43.79" y="735.5" >T..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="485" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="495.5" >[..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="373" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="383.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="293" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="303.5" >[..</text>
</g>
<g >
<title>umfMemoryProviderGetMinPageSize (1,802,806 samples, 6.25%)</title><rect x="171.7" y="581" width="61.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="174.73" y="591.5" >umfMem..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="421" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="431.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="405" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="415.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="661" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="671.5" ></text>
</g>
<g >
<title>[libigc.so.2.16.0+1753355367] (1,531,624 samples, 5.31%)</title><rect x="262.4" y="549" width="52.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="265.44" y="559.5" >[libi..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="389" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="399.5" >[..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="245" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="255.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="629" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="639.5" >[libze_in..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="181" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="191.5" ></text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="501" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="511.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="677" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="613" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="623.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (544,737 samples, 1.89%)</title><rect x="84.1" y="709" width="18.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.10" y="719.5" ></text>
</g>
<g >
<title>urUSMHostAlloc (802,848 samples, 2.79%)</title><rect x="107.7" y="709" width="27.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="110.71" y="719.5" >u..</text>
</g>
<g >
<title>UrState::UrState (2,883,362 samples, 10.00%)</title><rect x="135.0" y="709" width="98.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="138.00" y="719.5" >UrState::Ur..</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="389" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="399.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="597" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="607.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="693" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="703.5" ></text>
</g>
<g >
<title>ur_usm_pool_handle_t_::ur_usm_pool_handle_t_ (1,802,806 samples, 6.25%)</title><rect x="171.7" y="661" width="61.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="174.73" y="671.5" >ur_usm..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="549" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="559.5" >[..</text>
</g>
<g >
<title>all (28,826,986 samples, 100%)</title><rect x="10.0" y="805" width="980.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>decltype (((*(({lambda(void*, (auto:1)...)#4} const* const)0)).(operator()&lt;void const*, unsigned long*&gt;))(static_cast&lt;void*&amp;&amp;&gt;({parm#1}), static_cast&lt;void const*&amp;&amp;&gt;({parm#2}), static_cast&lt;unsigned long*&amp;&amp;&gt;({parm#2}))) umf::memoryProviderMakeUnique&lt;L0HostMemoryProvider, ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;&gt;(ur_context_handle_t_*&amp;, ur_device_handle_t_*&amp;)::{lambda(void*, (auto:1)...)#4}::_FUN&lt;void const*, unsigned long*&gt;(void*, void const*, unsigned long*) (493,551 samples, 1.71%)</title><rect x="193.2" y="565" width="16.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="196.19" y="575.5" ></text>
</g>
<g >
<title>run (627,461 samples, 2.18%)</title><rect x="62.8" y="741" width="21.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="65.77" y="751.5" >run</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="453" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="463.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="613" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="623.5" ></text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="389" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="399.5" >[..</text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="213" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="223.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="693" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="703.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (631,091 samples, 2.19%)</title><rect x="171.7" y="437" width="21.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="174.73" y="447.5" >[..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="549" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="559.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="645" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="655.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="661" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="671.5" ></text>
</g>
<g >
<title>IGC::IgcOclTranslationCtx&lt;0ul&gt;::Impl::GetSpecConstantsInfo (1,531,624 samples, 5.31%)</title><rect x="262.4" y="581" width="52.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="265.44" y="591.5" >IGC::..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="565" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="575.5" ></text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="245" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="255.5" ></text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="565" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="575.5" >[..</text>
</g>
<g >
<title>__sinf_fma (16,100,335 samples, 55.85%)</title><rect x="368.4" y="581" width="547.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="371.37" y="591.5" >__sinf_fma</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="677" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="517" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="527.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (678,164 samples, 2.35%)</title><rect x="210.0" y="421" width="23.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="212.97" y="431.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (2,396,993 samples, 8.32%)</title><rect x="233.0" y="677" width="81.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="236.02" y="687.5" >[libze_in..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.58%)</title><rect x="97.0" y="437" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="99.95" y="447.5" ></text>
</g>
<g >
<title>disjoint_pool_aligned_malloc (802,848 samples, 2.79%)</title><rect x="107.7" y="645" width="27.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="110.71" y="655.5" >d..</text>
</g>
<g >
<title>__GI_madvise (166,666 samples, 0.58%)</title><rect x="984.3" y="725" width="5.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="987.33" y="735.5" ></text>
</g>
<g >
<title>__GI___mmap64 (493,551 samples, 1.71%)</title><rect x="193.2" y="421" width="16.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="196.19" y="431.5" ></text>
</g>
<g >
<title>L0HostMemoryProvider::allocateImpl (493,551 samples, 1.71%)</title><rect x="193.2" y="533" width="16.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="196.19" y="543.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="53" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="63.5" >[..</text>
</g>
<g >
<title>[unknown] (802,848 samples, 2.79%)</title><rect x="107.7" y="309" width="27.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="110.71" y="319.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (806,314 samples, 2.80%)</title><rect x="956.9" y="725" width="27.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="959.92" y="735.5" >[..</text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="725" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="735.5" ></text>
</g>
<g >
<title>[unknown] (678,164 samples, 2.35%)</title><rect x="210.0" y="357" width="23.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="212.97" y="367.5" >[..</text>
</g>
<g >
<title>[unknown] (783,756 samples, 2.72%)</title><rect x="580.9" y="469" width="26.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.88" y="479.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (626,490 samples, 2.17%)</title><rect x="150.4" y="581" width="21.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="153.44" y="591.5" >[..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.58%)</title><rect x="135.0" y="597" width="5.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="421" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="431.5" ></text>
</g>
<g >
<title>[unknown] (287,400 samples, 1.00%)</title><rect x="140.7" y="485" width="9.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="143.66" y="495.5" ></text>
</g>
<g >
<title>L0MemoryProvider::GetL0MinPageSize (678,164 samples, 2.35%)</title><rect x="210.0" y="549" width="23.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="212.97" y="559.5" >L..</text>
</g>
<g >
<title>ur::level_zero::urAdapterGet (454,066 samples, 1.58%)</title><rect x="135.0" y="677" width="15.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="138.00" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="565" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="575.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="951.8" y="725" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.83" y="735.5" ></text>
</g>
<g >
<title>urContextCreate (2,429,296 samples, 8.43%)</title><rect x="150.4" y="693" width="82.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="153.44" y="703.5" >urContext..</text>
</g>
<g >
<title>L0MemoryProvider::GetL0MinPageSize (493,551 samples, 1.71%)</title><rect x="193.2" y="549" width="16.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="196.19" y="559.5" ></text>
</g>
<g >
<title>ur_context_handle_t_::initialize (627,461 samples, 2.18%)</title><rect x="62.8" y="645" width="21.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="65.77" y="655.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="597" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="607.5" ></text>
</g>
<g >
<title>advise_stack_range (166,666 samples, 0.58%)</title><rect x="984.3" y="741" width="5.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="987.33" y="751.5" ></text>
</g>
<g >
<title>ur_context_handle_t_::initialize (626,490 samples, 2.17%)</title><rect x="150.4" y="661" width="21.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="153.44" y="671.5" >u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (287,400 samples, 1.00%)</title><rect x="140.7" y="533" width="9.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="143.66" y="543.5" ></text>
</g>
<g >
<title>[unknown] (149,683 samples, 0.52%)</title><rect x="102.6" y="629" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="105.62" y="639.5" ></text>
</g>
<g >
<title>umfMemoryProviderAlloc (802,848 samples, 2.79%)</title><rect x="107.7" y="581" width="27.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="110.71" y="591.5" >u..</text>
</g>
<g >
<title>main (18,747,093 samples, 65.03%)</title><rect x="314.5" y="725" width="637.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="317.51" y="735.5" >main</text>
</g>
<g >
<title>[unknown] (493,551 samples, 1.71%)</title><rect x="193.2" y="309" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="196.19" y="319.5" ></text>
</g>
</g>
</svg>
