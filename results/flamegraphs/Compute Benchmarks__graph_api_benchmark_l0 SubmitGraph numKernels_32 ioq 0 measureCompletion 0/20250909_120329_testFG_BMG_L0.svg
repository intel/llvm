<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1000" height="902" onload="init(evt)" viewBox="0 0 1000 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1000.0" height="902.0" fill="url(#background)"  />
<text id="title" x="500.00" y="24" >testFG_BMG_L0 - graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 0 measureCompletion 0</text>
<text id="details" x="10.00" y="885" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="890.00" y="24" >Search</text>
<text id="ignorecase" x="974.00" y="24" >ic</text>
<text id="matched" x="890.00" y="885" > </text>
<g id="frames">
<g >
<title>_int_malloc (759,341 samples, 1.12%)</title><rect x="340.0" y="725" width="11.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="343.00" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="277" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="261" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="271.5" >[u..</text>
</g>
<g >
<title>[unknown] (17,573,867 samples, 25.90%)</title><rect x="452.2" y="261" width="253.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="455.24" y="271.5" >[unknown]</text>
</g>
<g >
<title>ze_lib::context_t::Init (31,689,557 samples, 46.70%)</title><rect x="351.0" y="597" width="457.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="353.96" y="607.5" >ze_lib::context_t::Init</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="645" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,364,749 samples, 3.48%)</title><rect x="706.0" y="293" width="34.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="709.02" y="303.5" >__..</text>
</g>
<g >
<title>alloc_new_heap (166,666 samples, 0.25%)</title><rect x="987.6" y="485" width="2.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="990.59" y="495.5" ></text>
</g>
<g >
<title>call_init (759,341 samples, 1.12%)</title><rect x="340.0" y="789" width="11.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="343.00" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="421" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="431.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="325" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="335.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (24,671,579 samples, 36.35%)</title><rect x="383.9" y="325" width="356.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="386.89" y="335.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="181" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="191.5" >[u..</text>
</g>
<g >
<title>[unknown] (12,839,398 samples, 18.92%)</title><rect x="520.6" y="181" width="185.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.61" y="191.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="277" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="287.5" >[unknown]</text>
</g>
<g >
<title>___dlopen (31,689,557 samples, 46.70%)</title><rect x="351.0" y="565" width="457.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="353.96" y="575.5" >___dlopen</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (300,065 samples, 0.44%)</title><rect x="321.9" y="805" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="324.90" y="815.5" ></text>
</g>
<g >
<title>__dynamic_cast (825,736 samples, 1.22%)</title><rect x="808.6" y="661" width="11.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="811.59" y="671.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (174,044 samples, 0.26%)</title><rect x="982.7" y="629" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="639.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="629" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="639.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="213" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="223.5" >[unknown]</text>
</g>
<g >
<title>void testing::internal::InitGoogleTestImpl&lt;char&gt; (9,650,384 samples, 14.22%)</title><rect x="808.6" y="741" width="139.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="811.59" y="751.5" >void testing::int..</text>
</g>
<g >
<title>_dl_get_file_id (488,666 samples, 0.72%)</title><rect x="947.9" y="661" width="7.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="950.95" y="671.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1,092,396 samples, 1.61%)</title><rect x="835.4" y="645" width="15.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="838.35" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (166,666 samples, 0.25%)</title><rect x="987.6" y="645" width="2.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="990.59" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="213" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="223.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="309" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="319.5" ></text>
</g>
<g >
<title>_dl_catch_error (31,689,557 samples, 46.70%)</title><rect x="351.0" y="517" width="457.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="353.96" y="527.5" >_dl_catch_error</text>
</g>
<g >
<title>operator new (882,010 samples, 1.30%)</title><rect x="892.5" y="645" width="12.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="895.46" y="655.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;bool, unsigned int, unsigned int, bool, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul&gt; &gt;::Equals (825,736 samples, 1.22%)</title><rect x="808.6" y="693" width="11.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="811.59" y="703.5" ></text>
</g>
<g >
<title>graph_api_bench (67,863,156 samples, 100.00%)</title><rect x="10.0" y="837" width="980.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >graph_api_bench</text>
</g>
<g >
<title>void testing::internal::CartesianProductGenerator&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::AdvanceIfEnd&lt;6ul&gt; (946,516 samples, 1.39%)</title><rect x="878.8" y="677" width="13.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="881.79" y="687.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="437" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="447.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="597" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="607.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;SubmitGraphTest&gt;::RegisterTests (8,824,648 samples, 13.00%)</title><rect x="820.5" y="709" width="127.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="823.51" y="719.5" >testing::intern..</text>
</g>
<g >
<title>_int_malloc (174,044 samples, 0.26%)</title><rect x="982.7" y="581" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="985.67" y="591.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (166,666 samples, 0.25%)</title><rect x="987.6" y="661" width="2.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="990.59" y="671.5" ></text>
</g>
<g >
<title>_dl_init (759,341 samples, 1.12%)</title><rect x="340.0" y="805" width="11.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="343.00" y="815.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (759,341 samples, 1.12%)</title><rect x="340.0" y="757" width="11.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="343.00" y="767.5" ></text>
</g>
<g >
<title>call_init (30,595,541 samples, 45.08%)</title><rect x="366.8" y="357" width="441.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="369.76" y="367.5" >call_init</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="501" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="511.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="693" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="703.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (340,710 samples, 0.50%)</title><rect x="982.7" y="677" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="687.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="485" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="495.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (300,065 samples, 0.44%)</title><rect x="321.9" y="773" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="324.90" y="783.5" ></text>
</g>
<g >
<title>operator new (166,666 samples, 0.25%)</title><rect x="987.6" y="613" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.59" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="533" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="543.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::AtEnd (829,440 samples, 1.22%)</title><rect x="920.7" y="677" width="12.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="923.73" y="687.5" ></text>
</g>
<g >
<title>_dl_map_object (488,666 samples, 0.72%)</title><rect x="947.9" y="693" width="7.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="950.95" y="703.5" ></text>
</g>
<g >
<title>resolve_map (1,916,010 samples, 2.82%)</title><rect x="955.0" y="693" width="27.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="958.00" y="703.5" >r..</text>
</g>
<g >
<title>_dl_start_user (759,341 samples, 1.12%)</title><rect x="340.0" y="821" width="11.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="343.00" y="831.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="469" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="341" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="351.5" ></text>
</g>
<g >
<title>tcache_init (166,666 samples, 0.25%)</title><rect x="987.6" y="565" width="2.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="990.59" y="575.5" ></text>
</g>
<g >
<title>L0::LevelZero::LevelZero (31,689,557 samples, 46.70%)</title><rect x="351.0" y="661" width="457.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="353.96" y="671.5" >L0::LevelZero::LevelZero</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="117" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="127.5" >[u..</text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="629" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="639.5" ></text>
</g>
<g >
<title>[unknown] (12,839,398 samples, 18.92%)</title><rect x="520.6" y="117" width="185.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.61" y="127.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="581" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="591.5" ></text>
</g>
<g >
<title>void testing::internal::CartesianProductGenerator&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::AdvanceIfEnd&lt;8ul&gt; (1,957,415 samples, 2.88%)</title><rect x="892.5" y="677" width="28.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="895.46" y="687.5" >v..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt; &gt; (3,008,113 samples, 4.43%)</title><rect x="835.4" y="693" width="43.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="838.35" y="703.5" >std:..</text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="549" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="597" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1,163,228 samples, 1.71%)</title><rect x="723.4" y="101" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="726.37" y="111.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="773" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="783.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="709" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="719.5" ></text>
</g>
<g >
<title>[unknown] (11,652,775 samples, 17.17%)</title><rect x="537.7" y="101" width="168.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="540.75" y="111.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="501" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="511.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="533" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="543.5" ></text>
</g>
<g >
<title>do_lookup_x (624,460 samples, 0.92%)</title><rect x="973.7" y="661" width="9.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="976.66" y="671.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1,916,010 samples, 2.82%)</title><rect x="955.0" y="677" width="27.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="958.00" y="687.5" >_..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (942,797 samples, 1.39%)</title><rect x="865.2" y="613" width="13.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="868.18" y="623.5" ></text>
</g>
<g >
<title>tcache_init (166,666 samples, 0.25%)</title><rect x="987.6" y="581" width="2.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="990.59" y="591.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="517" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="527.5" ></text>
</g>
<g >
<title>_dl_sysdep_parse_arguments (166,666 samples, 0.25%)</title><rect x="27.1" y="805" width="2.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="30.12" y="815.5" ></text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="613" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="623.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;unsigned int&gt;::Iterator::Equals (825,736 samples, 1.22%)</title><rect x="808.6" y="677" width="11.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="811.59" y="687.5" ></text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="565" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="575.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (942,797 samples, 1.39%)</title><rect x="865.2" y="629" width="13.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="868.18" y="639.5" ></text>
</g>
<g >
<title>__dynamic_cast (1,075,405 samples, 1.58%)</title><rect x="905.2" y="645" width="15.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="908.20" y="655.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="453" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="463.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (340,710 samples, 0.50%)</title><rect x="982.7" y="645" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2,320,591 samples, 3.42%)</title><rect x="672.5" y="37" width="33.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="675.51" y="47.5" >[u..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="581" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="591.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;, 9ul&gt; (3,008,113 samples, 4.43%)</title><rect x="835.4" y="677" width="43.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="838.35" y="687.5" >void..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="421" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="431.5" ></text>
</g>
<g >
<title>arena_get2 (166,666 samples, 0.25%)</title><rect x="987.6" y="533" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="990.59" y="543.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="405" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="415.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="741" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="751.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;bool&gt;::Iterator::Clone (882,010 samples, 1.30%)</title><rect x="892.5" y="661" width="12.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="895.46" y="671.5" ></text>
</g>
<g >
<title>_dl_start (2,404,676 samples, 3.54%)</title><rect x="947.9" y="805" width="34.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="950.95" y="815.5" >_d..</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;MutateGraphTest&gt;::RegisterTests (825,736 samples, 1.22%)</title><rect x="808.6" y="709" width="11.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="811.59" y="719.5" ></text>
</g>
<g >
<title>dlopen_implementation (31,689,557 samples, 46.70%)</title><rect x="351.0" y="549" width="457.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="353.96" y="559.5" >dlopen_implementation</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="213" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="223.5" >[u..</text>
</g>
<g >
<title>[unknown] (14,019,111 samples, 20.66%)</title><rect x="503.6" y="213" width="202.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="506.57" y="223.5" >[unknown]</text>
</g>
<g >
<title>__GI___libc_malloc (1,055,583 samples, 1.56%)</title><rect x="932.7" y="661" width="15.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="935.70" y="671.5" ></text>
</g>
<g >
<title>_dl_open (31,689,557 samples, 46.70%)</title><rect x="351.0" y="469" width="457.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="353.96" y="479.5" >_dl_open</text>
</g>
<g >
<title>_dl_init (31,689,557 samples, 46.70%)</title><rect x="351.0" y="389" width="457.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="353.96" y="399.5" >_dl_init</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (166,666 samples, 0.25%)</title><rect x="987.6" y="629" width="2.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="990.59" y="639.5" ></text>
</g>
<g >
<title>__dynamic_cast (829,440 samples, 1.22%)</title><rect x="920.7" y="645" width="12.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="923.73" y="655.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2,404,676 samples, 3.54%)</title><rect x="947.9" y="773" width="34.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="950.95" y="783.5" >_d..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="725" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="735.5" ></text>
</g>
<g >
<title>all (67,863,156 samples, 100%)</title><rect x="10.0" y="853" width="980.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>start_thread (507,376 samples, 0.75%)</title><rect x="982.7" y="805" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="815.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (166,666 samples, 0.25%)</title><rect x="987.6" y="677" width="2.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="990.59" y="687.5" ></text>
</g>
<g >
<title>__libc_start_call_main (41,339,941 samples, 60.92%)</title><rect x="351.0" y="789" width="596.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="353.96" y="799.5" >__libc_start_call_main</text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="565" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="575.5" ></text>
</g>
<g >
<title>dlopen_doit (31,689,557 samples, 46.70%)</title><rect x="351.0" y="485" width="457.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="353.96" y="495.5" >dlopen_doit</text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;zeInit::{lambda (31,689,557 samples, 46.70%)</title><rect x="351.0" y="613" width="457.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="353.96" y="623.5" >std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::ca..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="677" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="687.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,689,557 samples, 46.70%)</title><rect x="351.0" y="501" width="457.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="353.96" y="511.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>BenchmarkMain::executeSingleTest (31,689,557 samples, 46.70%)</title><rect x="351.0" y="741" width="457.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="353.96" y="751.5" >BenchmarkMain::executeSingleTest</text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="389" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="181" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="191.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="261" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="271.5" >[unknown]</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,092,396 samples, 1.61%)</title><rect x="835.4" y="661" width="15.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="838.35" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="437" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (166,666 samples, 0.25%)</title><rect x="987.6" y="597" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="990.59" y="607.5" ></text>
</g>
<g >
<title>dl_main (2,404,676 samples, 3.54%)</title><rect x="947.9" y="757" width="34.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="950.95" y="767.5" >dl..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="613" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="623.5" ></text>
</g>
<g >
<title>[unknown] (21,499,301 samples, 31.68%)</title><rect x="29.5" y="821" width="310.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="32.53" y="831.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="549" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="559.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="757" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="767.5" ></text>
</g>
<g >
<title>[unknown] (3,538,068 samples, 5.21%)</title><rect x="757.5" y="181" width="51.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="760.50" y="191.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (18,760,450 samples, 27.64%)</title><rect x="435.1" y="277" width="270.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="438.11" y="287.5" >[unknown]</text>
</g>
<g >
<title>__libc_start_main_impl (41,339,941 samples, 60.92%)</title><rect x="351.0" y="805" width="596.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="353.96" y="815.5" >__libc_start_main_impl</text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="261" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="271.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="357" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="367.5" ></text>
</g>
<g >
<title>[[stack]] (1,352,521 samples, 1.99%)</title><rect x="10.0" y="821" width="19.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitGraphArguments&gt;::runFromCommandLine (31,689,557 samples, 46.70%)</title><rect x="351.0" y="725" width="457.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="353.96" y="735.5" >TestCase&lt;SubmitGraphArguments&gt;::runFromCommandLine</text>
</g>
<g >
<title>_dl_relocate_object (1,916,010 samples, 2.82%)</title><rect x="955.0" y="741" width="27.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="958.00" y="751.5" >_..</text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="293" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="303.5" ></text>
</g>
<g >
<title>_dl_start_final (2,404,676 samples, 3.54%)</title><rect x="947.9" y="789" width="34.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="950.95" y="799.5" >_d..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="741" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="751.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="533" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="245" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="255.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="581" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="591.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (300,065 samples, 0.44%)</title><rect x="321.9" y="789" width="4.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="324.90" y="799.5" ></text>
</g>
<g >
<title>operator new (2,364,749 samples, 3.48%)</title><rect x="706.0" y="309" width="34.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="709.02" y="319.5" >op..</text>
</g>
<g >
<title>zeInit (31,689,557 samples, 46.70%)</title><rect x="351.0" y="645" width="457.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="353.96" y="655.5" >zeInit</text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="293" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="303.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="485" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2,320,591 samples, 3.42%)</title><rect x="672.5" y="53" width="33.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="675.51" y="63.5" >[u..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="389" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="399.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="245" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="255.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="549" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="559.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitGraphArguments&gt;::run (31,689,557 samples, 46.70%)</title><rect x="351.0" y="709" width="457.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="353.96" y="719.5" >TestCase&lt;SubmitGraphArguments&gt;::run</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="357" width="15.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="353.96" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (1,055,583 samples, 1.56%)</title><rect x="932.7" y="645" width="15.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="935.70" y="655.5" ></text>
</g>
<g >
<title>arena_get2 (166,666 samples, 0.25%)</title><rect x="987.6" y="549" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="990.59" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2,320,591 samples, 3.42%)</title><rect x="672.5" y="69" width="33.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="675.51" y="79.5" >[u..</text>
</g>
<g >
<title>BenchmarkMain::main (41,339,941 samples, 60.92%)</title><rect x="351.0" y="757" width="596.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="353.96" y="767.5" >BenchmarkMain::main</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="517" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="469" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="479.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="453" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="463.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::ComputeCurrentValue (829,440 samples, 1.22%)</title><rect x="920.7" y="693" width="12.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="923.73" y="703.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="613" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="623.5" ></text>
</g>
<g >
<title>operator delete (946,516 samples, 1.39%)</title><rect x="878.8" y="661" width="13.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="881.79" y="671.5" ></text>
</g>
<g >
<title>_int_new_arena (166,666 samples, 0.25%)</title><rect x="987.6" y="517" width="2.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="990.59" y="527.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="229" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="239.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="565" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="575.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="421" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="431.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::Advance (2,903,931 samples, 4.28%)</title><rect x="878.8" y="693" width="41.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="881.79" y="703.5" >tes..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="405" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (972,920 samples, 1.43%)</title><rect x="851.1" y="645" width="14.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="854.13" y="655.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="693" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="703.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="757" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="767.5" ></text>
</g>
<g >
<title>run (31,689,557 samples, 46.70%)</title><rect x="351.0" y="677" width="457.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="353.96" y="687.5" >run</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="629" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="639.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="373" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="229" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="239.5" ></text>
</g>
<g >
<title>elf_machine_rela (1,916,010 samples, 2.82%)</title><rect x="955.0" y="709" width="27.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="958.00" y="719.5" >e..</text>
</g>
<g >
<title>__GI___libc_malloc (882,010 samples, 1.30%)</title><rect x="892.5" y="629" width="12.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="895.46" y="639.5" ></text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="581" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="591.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="789" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1,174,289 samples, 1.73%)</title><rect x="791.6" y="165" width="17.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="794.63" y="175.5" ></text>
</g>
<g >
<title>[unknown] (14,019,111 samples, 20.66%)</title><rect x="503.6" y="197" width="202.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="506.57" y="207.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="197" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="207.5" >[u..</text>
</g>
<g >
<title>__GI__dl_catch_exception (31,689,557 samples, 46.70%)</title><rect x="351.0" y="453" width="457.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="353.96" y="463.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>loader::context_t::init (31,689,557 samples, 46.70%)</title><rect x="351.0" y="581" width="457.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="353.96" y="591.5" >loader::context_t::init</text>
</g>
<g >
<title>_dl_new_hash (1,291,550 samples, 1.90%)</title><rect x="955.0" y="661" width="18.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="958.00" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="165" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="175.5" ></text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="533" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="543.5" ></text>
</g>
<g >
<title>clone3 (507,376 samples, 0.75%)</title><rect x="982.7" y="821" width="7.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="985.67" y="831.5" ></text>
</g>
<g >
<title>[unknown] (12,839,398 samples, 18.92%)</title><rect x="520.6" y="133" width="185.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.61" y="143.5" >[unknown]</text>
</g>
<g >
<title>operator new (1,055,583 samples, 1.56%)</title><rect x="932.7" y="677" width="15.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="935.70" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="133" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="143.5" >[u..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="725" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="735.5" ></text>
</g>
<g >
<title>[unknown] (11,652,775 samples, 17.17%)</title><rect x="537.7" y="85" width="168.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="540.75" y="95.5" >[unknown]</text>
</g>
<g >
<title>__GI__dl_catch_exception (31,689,557 samples, 46.70%)</title><rect x="351.0" y="405" width="457.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="353.96" y="415.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>[unknown] (1,163,228 samples, 1.71%)</title><rect x="723.4" y="85" width="16.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="726.37" y="95.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (174,044 samples, 0.26%)</title><rect x="982.7" y="597" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="985.67" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="613" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (507,376 samples, 0.75%)</title><rect x="982.7" y="789" width="7.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="985.67" y="799.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="341" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="351.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, bool, bool, bool, unsigned long, unsigned long, bool&gt;, 5ul&gt; (1,915,717 samples, 2.82%)</title><rect x="851.1" y="661" width="27.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="854.13" y="671.5" >v..</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="165" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="175.5" >[u..</text>
</g>
<g >
<title>[unknown] (12,839,398 samples, 18.92%)</title><rect x="520.6" y="165" width="185.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.61" y="175.5" >[unknown]</text>
</g>
<g >
<title>elf_dynamic_do_Rela (1,916,010 samples, 2.82%)</title><rect x="955.0" y="725" width="27.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="958.00" y="735.5" >e..</text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (1,055,583 samples, 1.56%)</title><rect x="932.7" y="693" width="15.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="935.70" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="197" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="207.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="565" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (2,364,749 samples, 3.48%)</title><rect x="706.0" y="277" width="34.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="709.02" y="287.5" >_i..</text>
</g>
<g >
<title>_start (43,744,617 samples, 64.46%)</title><rect x="351.0" y="821" width="631.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="353.96" y="831.5" >_start</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="629" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="639.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="773" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="783.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="661" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="671.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="987.6" y="469" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="990.59" y="479.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::PostFlagParsingInit (9,650,384 samples, 14.22%)</title><rect x="808.6" y="725" width="139.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="811.59" y="735.5" >testing::internal..</text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="197" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="207.5" ></text>
</g>
<g >
<title>openaux (488,666 samples, 0.72%)</title><rect x="947.9" y="709" width="7.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="950.95" y="719.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (22,306,830 samples, 32.87%)</title><rect x="383.9" y="309" width="322.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="386.89" y="319.5" >__memcpy_avx_unaligned_erms</text>
</g>
<g >
<title>[unknown] (12,839,398 samples, 18.92%)</title><rect x="520.6" y="149" width="185.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="523.61" y="159.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (14,019,111 samples, 20.66%)</title><rect x="503.6" y="229" width="202.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="506.57" y="239.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (488,666 samples, 0.72%)</title><rect x="947.9" y="597" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.95" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (759,341 samples, 1.12%)</title><rect x="340.0" y="741" width="11.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="343.00" y="751.5" ></text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="149" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="159.5" >[u..</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="229" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="239.5" >[u..</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (340,710 samples, 0.50%)</title><rect x="982.7" y="661" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="671.5" ></text>
</g>
<g >
<title>main (41,339,941 samples, 60.92%)</title><rect x="351.0" y="773" width="596.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="353.96" y="783.5" >main</text>
</g>
<g >
<title>dl_open_worker (31,689,557 samples, 46.70%)</title><rect x="351.0" y="437" width="457.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="353.96" y="447.5" >dl_open_worker</text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="437" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="447.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitGraphArguments&gt;::runImpl (31,689,557 samples, 46.70%)</title><rect x="351.0" y="693" width="457.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="353.96" y="703.5" >TestCase&lt;SubmitGraphArguments&gt;::runImpl</text>
</g>
<g >
<title>_dl_map_object_deps (488,666 samples, 0.72%)</title><rect x="947.9" y="741" width="7.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="950.95" y="751.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (507,376 samples, 0.75%)</title><rect x="982.7" y="709" width="7.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.67" y="719.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::AddTestInfo (786,918 samples, 1.16%)</title><rect x="328.6" y="805" width="11.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="331.64" y="815.5" ></text>
</g>
<g >
<title>_dlerror_run (31,689,557 samples, 46.70%)</title><rect x="351.0" y="533" width="457.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="353.96" y="543.5" >_dlerror_run</text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (942,797 samples, 1.39%)</title><rect x="865.2" y="645" width="13.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="868.18" y="655.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="309" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="319.5" >[unknown]</text>
</g>
<g >
<title>_dl_map_object_from_fd (488,666 samples, 0.72%)</title><rect x="947.9" y="677" width="7.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="950.95" y="687.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="985.2" y="485" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="988.19" y="495.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="805" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="309" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="319.5" ></text>
</g>
<g >
<title>[unknown] (174,044 samples, 0.26%)</title><rect x="982.7" y="501" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="985.67" y="511.5" ></text>
</g>
<g >
<title>dl_open_worker (31,689,557 samples, 46.70%)</title><rect x="351.0" y="421" width="457.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="353.96" y="431.5" >dl_open_worker</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="549" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="559.5" ></text>
</g>
<g >
<title>call_init (759,341 samples, 1.12%)</title><rect x="340.0" y="773" width="11.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="343.00" y="783.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1,185,855 samples, 1.75%)</title><rect x="10.0" y="805" width="17.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>__pthread_once_slow (31,689,557 samples, 46.70%)</title><rect x="351.0" y="629" width="457.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="353.96" y="639.5" >__pthread_once_slow</text>
</g>
<g >
<title>call_init (31,689,557 samples, 46.70%)</title><rect x="351.0" y="373" width="457.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="353.96" y="383.5" >call_init</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="453" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="463.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;bool&gt;::Iterator::Equals (1,075,405 samples, 1.58%)</title><rect x="905.2" y="661" width="15.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="908.20" y="671.5" ></text>
</g>
<g >
<title>[unknown] (4,737,729 samples, 6.98%)</title><rect x="740.2" y="325" width="68.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="743.17" y="335.5" >[unknown]</text>
</g>
<g >
<title>__GI__dl_catch_exception (488,666 samples, 0.72%)</title><rect x="947.9" y="725" width="7.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="950.95" y="735.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.25%)</title><rect x="326.2" y="597" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="329.23" y="607.5" ></text>
</g>
<g >
<title>operator new (174,044 samples, 0.26%)</title><rect x="982.7" y="613" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="985.67" y="623.5" ></text>
</g>
<g >
<title>[unknown] (17,573,867 samples, 25.90%)</title><rect x="452.2" y="245" width="253.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="455.24" y="255.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2,364,749 samples, 3.48%)</title><rect x="706.0" y="245" width="34.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="709.02" y="255.5" >[u..</text>
</g>
<g >
<title>__GI___fstat64 (488,666 samples, 0.72%)</title><rect x="947.9" y="645" width="7.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="950.95" y="655.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;bool&gt;::Iterator::Equals (829,440 samples, 1.22%)</title><rect x="920.7" y="661" width="12.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="923.73" y="671.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (30,595,541 samples, 45.08%)</title><rect x="366.8" y="341" width="441.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="369.76" y="351.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>[unknown] (19,947,582 samples, 29.39%)</title><rect x="418.0" y="293" width="288.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="420.96" y="303.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,055,583 samples, 1.56%)</title><rect x="932.7" y="517" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="935.70" y="527.5" ></text>
</g>
<g >
<title>new_heap (166,666 samples, 0.25%)</title><rect x="987.6" y="501" width="2.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.59" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1,094,016 samples, 1.61%)</title><rect x="351.0" y="325" width="15.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="353.96" y="335.5" ></text>
</g>
</g>
</svg>
