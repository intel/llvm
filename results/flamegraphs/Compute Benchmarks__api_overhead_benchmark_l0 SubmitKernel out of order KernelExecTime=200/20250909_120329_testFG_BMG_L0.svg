<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1000" height="934" onload="init(evt)" viewBox="0 0 1000 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1000.0" height="934.0" fill="url(#background)"  />
<text id="title" x="500.00" y="24" >testFG_BMG_L0 - api_overhead_benchmark_l0 SubmitKernel out of order KernelExecTime=200</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="890.00" y="24" >Search</text>
<text id="ignorecase" x="974.00" y="24" >ic</text>
<text id="matched" x="890.00" y="917" > </text>
<g id="frames">
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="101" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="111.5" >[un..</text>
</g>
<g >
<title>call_init (1,381,433 samples, 1.50%)</title><rect x="949.2" y="821" width="14.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="952.17" y="831.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="357" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="367.5" >[unkn..</text>
</g>
<g >
<title>_dl_relocate_object (610,994 samples, 0.66%)</title><rect x="979.9" y="773" width="6.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="982.95" y="783.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="677" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (166,666 samples, 0.18%)</title><rect x="988.2" y="629" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="991.23" y="639.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="773" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="783.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="293" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="303.5" >[unkno..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="485" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="533" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (166,666 samples, 0.18%)</title><rect x="986.5" y="629" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="989.45" y="639.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.18%)</title><rect x="986.5" y="693" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="703.5" ></text>
</g>
<g >
<title>dlopen_doit (33,106,912 samples, 35.96%)</title><rect x="314.1" y="517" width="352.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="317.13" y="527.5" >dlopen_doit</text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="645" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="655.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, unsigned long, bool, bool, bool, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::BaseGenerator (801,941 samples, 0.87%)</title><rect x="679.1" y="709" width="8.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="682.06" y="719.5" ></text>
</g>
<g >
<title>__libc_start_call_main (59,663,749 samples, 64.80%)</title><rect x="314.1" y="821" width="635.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="317.13" y="831.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,168,946 samples, 1.27%)</title><rect x="849.5" y="693" width="12.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="852.48" y="703.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmMemoryAllocationTest&gt;::RegisterTests (3,504,092 samples, 3.81%)</title><rect x="861.9" y="741" width="37.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="864.92" y="751.5" >tes..</text>
</g>
<g >
<title>arena_get2 (166,666 samples, 0.18%)</title><rect x="988.2" y="565" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="991.23" y="575.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt;, 5ul&gt; (1,726,758 samples, 1.88%)</title><rect x="772.9" y="693" width="18.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="775.89" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="597" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="607.5" ></text>
</g>
<g >
<title>_int_malloc (1,083,707 samples, 1.18%)</title><rect x="740.7" y="645" width="11.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="743.74" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="549" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="559.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteCommandListImmediateCopyQueueTest&gt;::RegisterTests (6,387,122 samples, 6.94%)</title><rect x="695.7" y="741" width="68.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="698.71" y="751.5" >testing..</text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="805" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="815.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;DistributionKind&gt;::Iterator::Current (1,168,932 samples, 1.27%)</title><rect x="936.7" y="709" width="12.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="939.73" y="719.5" ></text>
</g>
<g >
<title>BenchmarkMain::executeSingleTest (34,285,867 samples, 37.24%)</title><rect x="314.1" y="773" width="365.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="317.13" y="783.5" >BenchmarkMain::executeSingleTest</text>
</g>
<g >
<title>__GI___libc_malloc (1,171,520 samples, 1.27%)</title><rect x="924.3" y="693" width="12.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="927.26" y="703.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (1,169,210 samples, 1.27%)</title><rect x="874.3" y="693" width="12.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="877.34" y="703.5" ></text>
</g>
<g >
<title>_start (63,166,320 samples, 68.60%)</title><rect x="314.1" y="853" width="672.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="317.13" y="863.5" >_start</text>
</g>
<g >
<title>_dl_open_relocate_one_object (1,181,627 samples, 1.28%)</title><rect x="314.1" y="421" width="12.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="317.13" y="431.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (166,666 samples, 0.18%)</title><rect x="988.2" y="709" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="991.23" y="719.5" ></text>
</g>
<g >
<title>__pthread_once_slow (33,106,912 samples, 35.96%)</title><rect x="314.1" y="661" width="352.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="317.13" y="671.5" >__pthread_once_slow</text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="709" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="719.5" ></text>
</g>
<g >
<title>checked_request2size (762,709 samples, 0.83%)</title><rect x="687.6" y="661" width="8.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="690.59" y="671.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.18%)</title><rect x="986.5" y="661" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="671.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="469" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="479.5" ></text>
</g>
<g >
<title>[unknown] (11,813,699 samples, 12.83%)</title><rect x="414.9" y="229" width="125.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.92" y="239.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (166,666 samples, 0.18%)</title><rect x="988.2" y="677" width="1.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="991.23" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="549" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="597" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="629" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="639.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="725" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="735.5" ></text>
</g>
<g >
<title>operator new (5,918,223 samples, 6.43%)</title><rect x="540.7" y="341" width="63.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="543.66" y="351.5" >operat..</text>
</g>
<g >
<title>[unknown] (7,079,399 samples, 7.69%)</title><rect x="465.3" y="117" width="75.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="468.31" y="127.5" >[unknown]</text>
</g>
<g >
<title>__dynamic_cast (1,146,251 samples, 1.24%)</title><rect x="825.0" y="709" width="12.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="828.01" y="719.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,201,413 samples, 1.30%)</title><rect x="653.7" y="341" width="12.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="656.72" y="351.5" ></text>
</g>
<g >
<title>[unknown] (17,726,237 samples, 19.25%)</title><rect x="352.0" y="325" width="188.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="354.99" y="335.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="963.9" y="773" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="966.88" y="783.5" ></text>
</g>
<g >
<title>operator new (1,083,707 samples, 1.18%)</title><rect x="740.7" y="677" width="11.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="743.74" y="687.5" ></text>
</g>
<g >
<title>zeInit (33,106,912 samples, 35.96%)</title><rect x="314.1" y="677" width="352.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="317.13" y="687.5" >zeInit</text>
</g>
<g >
<title>_dl_start (2,121,138 samples, 2.30%)</title><rect x="963.9" y="837" width="22.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="966.88" y="847.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, AllocationMeasureMode&gt; &gt; (1,169,210 samples, 1.27%)</title><rect x="874.3" y="725" width="12.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="877.34" y="735.5" ></text>
</g>
<g >
<title>_dl_map_object (761,700 samples, 0.83%)</title><rect x="971.8" y="725" width="8.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="974.84" y="735.5" ></text>
</g>
<g >
<title>_itoa_word (1,169,210 samples, 1.27%)</title><rect x="874.3" y="629" width="12.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="877.34" y="639.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="453" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="463.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="293" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="303.5" >[unkn..</text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,169,210 samples, 1.27%)</title><rect x="874.3" y="709" width="12.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="877.34" y="719.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;TestType&gt;::Iterator::Clone (1,083,707 samples, 1.18%)</title><rect x="740.7" y="693" width="11.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="743.74" y="703.5" ></text>
</g>
<g >
<title>elf_machine_rela (610,994 samples, 0.66%)</title><rect x="979.9" y="741" width="6.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="982.95" y="751.5" ></text>
</g>
<g >
<title>[unknown] (2,373,513 samples, 2.58%)</title><rect x="578.4" y="69" width="25.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="581.39" y="79.5" >[..</text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="469" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="479.5" ></text>
</g>
<g >
<title>operator new (1,201,413 samples, 1.30%)</title><rect x="653.7" y="357" width="12.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="656.72" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="437" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="447.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="629" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="639.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::ComputeCurrentValue (2,340,452 samples, 2.54%)</title><rect x="924.3" y="725" width="24.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="927.26" y="735.5" >t..</text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,726,758 samples, 1.88%)</title><rect x="772.9" y="677" width="18.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="775.89" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="661" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="671.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="373" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="383.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, unsigned long, bool, bool, bool, bool&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul&gt; &gt;::Equals (801,941 samples, 0.87%)</title><rect x="679.1" y="725" width="8.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="682.06" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="277" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="287.5" ></text>
</g>
<g >
<title>loader::context_t::init (33,106,912 samples, 35.96%)</title><rect x="314.1" y="613" width="352.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="317.13" y="623.5" >loader::context_t::init</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="757" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="767.5" ></text>
</g>
<g >
<title>_dl_start_final (2,121,138 samples, 2.30%)</title><rect x="963.9" y="821" width="22.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="966.88" y="831.5" >_..</text>
</g>
<g >
<title>operator new (1,168,117 samples, 1.27%)</title><rect x="886.8" y="693" width="12.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="889.79" y="703.5" ></text>
</g>
<g >
<title>[unknown] (14,178,946 samples, 15.40%)</title><rect x="389.7" y="309" width="151.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="392.74" y="319.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="341" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="351.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="533" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="543.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2,121,138 samples, 2.30%)</title><rect x="963.9" y="805" width="22.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="966.88" y="815.5" >_..</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (1,175,326 samples, 1.28%)</title><rect x="899.2" y="677" width="12.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="902.22" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="789" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="799.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,132,056 samples, 1.23%)</title><rect x="813.0" y="677" width="12.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="815.96" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="677" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="687.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="645" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="655.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::run (33,106,912 samples, 35.96%)</title><rect x="314.1" y="741" width="352.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="317.13" y="751.5" >TestCase&lt;SubmitKernelArguments&gt;::run</text>
</g>
<g >
<title>_int_malloc (1,201,413 samples, 1.30%)</title><rect x="653.7" y="325" width="12.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="656.72" y="335.5" ></text>
</g>
<g >
<title>[unknown] (285,537 samples, 0.31%)</title><rect x="299.2" y="661" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="302.21" y="671.5" ></text>
</g>
<g >
<title>testing::TestInfo::TestInfo (1,168,117 samples, 1.27%)</title><rect x="886.8" y="709" width="12.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="889.79" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="485" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="495.5" ></text>
</g>
<g >
<title>__printf_buffer (1,041,577 samples, 1.13%)</title><rect x="718.0" y="613" width="11.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="720.99" y="623.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="533" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="533" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="543.5" ></text>
</g>
<g >
<title>call_init (31,925,285 samples, 34.67%)</title><rect x="326.7" y="405" width="339.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="329.70" y="415.5" >call_init</text>
</g>
<g >
<title>tcache_init (166,666 samples, 0.18%)</title><rect x="988.2" y="597" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="991.23" y="607.5" ></text>
</g>
<g >
<title>[unknown] (11,813,699 samples, 12.83%)</title><rect x="414.9" y="213" width="125.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.92" y="223.5" >[unknown]</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="645" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="645" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="655.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="693" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="703.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="181" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="191.5" >[un..</text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="645" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="655.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="245" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="255.5" >[unkn..</text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::Advance (1,083,707 samples, 1.18%)</title><rect x="740.7" y="725" width="11.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="743.74" y="735.5" ></text>
</g>
<g >
<title>dlopen_implementation (33,106,912 samples, 35.96%)</title><rect x="314.1" y="581" width="352.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="317.13" y="591.5" >dlopen_implementation</text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="533" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="543.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;, 5ul&gt; (2,137,101 samples, 2.32%)</title><rect x="718.0" y="693" width="22.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="720.99" y="703.5" >v..</text>
</g>
<g >
<title>__GI___snprintf (1,177,235 samples, 1.28%)</title><rect x="911.7" y="661" width="12.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="914.73" y="671.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1,181,627 samples, 1.28%)</title><rect x="314.1" y="453" width="12.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="317.13" y="463.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="963.9" y="741" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="966.88" y="751.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="261" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="271.5" >[unkno..</text>
</g>
<g >
<title>__GI___snprintf (1,041,577 samples, 1.13%)</title><rect x="718.0" y="645" width="11.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="720.99" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,179,491 samples, 1.28%)</title><rect x="528.1" y="85" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="531.10" y="95.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (33,106,912 samples, 35.96%)</title><rect x="314.1" y="533" width="352.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="317.13" y="543.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>[[stack]] (2,280,156 samples, 2.48%)</title><rect x="10.0" y="853" width="24.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >[..</text>
</g>
<g >
<title>[unknown] (2,358,947 samples, 2.56%)</title><rect x="628.6" y="197" width="25.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="631.61" y="207.5" >[..</text>
</g>
<g >
<title>all (92,073,071 samples, 100%)</title><rect x="10.0" y="885" width="980.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,095,524 samples, 1.19%)</title><rect x="729.1" y="645" width="11.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="732.08" y="655.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (166,666 samples, 0.18%)</title><rect x="988.2" y="693" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="991.23" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="629" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="639.5" ></text>
</g>
<g >
<title>testing::TestInfo::TestInfo (762,709 samples, 0.83%)</title><rect x="687.6" y="709" width="8.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="690.59" y="719.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="133" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="143.5" >[un..</text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="549" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="559.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,132,056 samples, 1.23%)</title><rect x="813.0" y="661" width="12.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="815.96" y="671.5" ></text>
</g>
<g >
<title>open_path (284,223 samples, 0.31%)</title><rect x="976.9" y="709" width="3.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="979.92" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="597" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="607.5" ></text>
</g>
<g >
<title>_dl_catch_error (33,106,912 samples, 35.96%)</title><rect x="314.1" y="549" width="352.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="317.13" y="559.5" >_dl_catch_error</text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="629" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="639.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="549" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="559.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="629" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="325" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="335.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="725" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="735.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (762,709 samples, 0.83%)</title><rect x="687.6" y="725" width="8.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="690.59" y="735.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="549" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="559.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="245" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="255.5" >[unkno..</text>
</g>
<g >
<title>arena_get2 (166,666 samples, 0.18%)</title><rect x="988.2" y="581" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="991.23" y="591.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (1,181,627 samples, 1.28%)</title><rect x="314.1" y="389" width="12.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="317.13" y="399.5" ></text>
</g>
<g >
<title>_dlerror_run (33,106,912 samples, 35.96%)</title><rect x="314.1" y="565" width="352.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="317.13" y="575.5" >_dlerror_run</text>
</g>
<g >
<title>[unknown] (7,079,399 samples, 7.69%)</title><rect x="465.3" y="149" width="75.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="468.31" y="159.5" >[unknown]</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmBatchMemoryAllocationTest&gt;::RegisterTests (2,321,941 samples, 2.52%)</title><rect x="837.2" y="741" width="24.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="840.21" y="751.5" >t..</text>
</g>
<g >
<title>_dl_init (31,925,285 samples, 34.67%)</title><rect x="326.7" y="421" width="339.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="329.70" y="431.5" >_dl_init</text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="469" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="437" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="447.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (284,223 samples, 0.31%)</title><rect x="976.9" y="677" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="979.92" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1,181,143 samples, 1.28%)</title><rect x="641.1" y="181" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="644.15" y="191.5" ></text>
</g>
<g >
<title>__GI___snprintf (1,169,210 samples, 1.27%)</title><rect x="874.3" y="677" width="12.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="877.34" y="687.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="963.9" y="757" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="966.88" y="767.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="597" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="607.5" ></text>
</g>
<g >
<title>__GI_munmap (166,666 samples, 0.18%)</title><rect x="988.2" y="501" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="991.23" y="511.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt;, 6ul&gt; (1,177,235 samples, 1.28%)</title><rect x="911.7" y="709" width="12.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="914.73" y="719.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="597" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="607.5" ></text>
</g>
<g >
<title>new_heap (166,666 samples, 0.18%)</title><rect x="988.2" y="533" width="1.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="991.23" y="543.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (31,925,285 samples, 34.67%)</title><rect x="326.7" y="373" width="339.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="329.70" y="383.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>operator new (1,152,995 samples, 1.25%)</title><rect x="837.2" y="725" width="12.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="840.21" y="735.5" ></text>
</g>
<g >
<title>BenchmarkMain::main (59,663,749 samples, 64.80%)</title><rect x="314.1" y="789" width="635.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="317.13" y="799.5" >BenchmarkMain::main</text>
</g>
<g >
<title>__GI__dl_allocate_tls_init (581,778 samples, 0.63%)</title><rect x="965.6" y="773" width="6.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="968.65" y="783.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="389" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="399.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="645" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="655.5" ></text>
</g>
<g >
<title>[unknown] (14,178,946 samples, 15.40%)</title><rect x="389.7" y="277" width="151.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="392.74" y="287.5" >[unknown]</text>
</g>
<g >
<title>operator new (1,072,985 samples, 1.17%)</title><rect x="752.3" y="693" width="11.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="755.27" y="703.5" ></text>
</g>
<g >
<title>[unknown] (8,267,953 samples, 8.98%)</title><rect x="452.7" y="165" width="88.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="455.66" y="175.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2,373,513 samples, 2.58%)</title><rect x="578.4" y="53" width="25.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="581.39" y="63.5" >[..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1,082,711 samples, 1.18%)</title><rect x="706.5" y="693" width="11.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="709.47" y="703.5" ></text>
</g>
<g >
<title>[unknown] (26,293,263 samples, 28.56%)</title><rect x="34.3" y="853" width="279.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="37.27" y="863.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="309" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="319.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="789" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="799.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_mem_get_ipc_handle.cpp (731,865 samples, 0.79%)</title><rect x="956.1" y="805" width="7.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="959.09" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5,918,223 samples, 6.43%)</title><rect x="540.7" y="325" width="63.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="543.66" y="335.5" >__GI__..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1,132,056 samples, 1.23%)</title><rect x="813.0" y="645" width="12.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="815.96" y="655.5" ></text>
</g>
<g >
<title>_int_new_arena (166,666 samples, 0.18%)</title><rect x="988.2" y="549" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="991.23" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="485" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="495.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1,095,524 samples, 1.19%)</title><rect x="729.1" y="629" width="11.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="732.08" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, unsigned long, DistributionKind&gt; &gt; (2,352,561 samples, 2.56%)</title><rect x="899.2" y="725" width="25.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="902.22" y="735.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt; &gt; (3,219,812 samples, 3.50%)</title><rect x="706.5" y="725" width="34.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="709.47" y="735.5" >st..</text>
</g>
<g >
<title>__GI___libc_malloc (762,709 samples, 0.83%)</title><rect x="687.6" y="677" width="8.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="690.59" y="687.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="261" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="271.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="421" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="431.5" ></text>
</g>
<g >
<title>__printf_buffer (1,169,210 samples, 1.27%)</title><rect x="874.3" y="645" width="12.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="877.34" y="655.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="197" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="207.5" >[unkno..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="581" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="591.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (2,137,101 samples, 2.32%)</title><rect x="718.0" y="677" width="22.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="720.99" y="687.5" >t..</text>
</g>
<g >
<title>elf_dynamic_do_Rela (610,994 samples, 0.66%)</title><rect x="979.9" y="757" width="6.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="982.95" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="677" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="687.5" ></text>
</g>
<g >
<title>gtest_ExecuteCommandListImmediateCopyQueueTestExecuteCommandListImmediateCopyQueueTest_EvalGenerateName_[abi:cxx11] (1,010,618 samples, 1.10%)</title><rect x="695.7" y="725" width="10.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="698.71" y="735.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (918,731 samples, 1.00%)</title><rect x="781.5" y="629" width="9.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="784.49" y="639.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (477,477 samples, 0.52%)</title><rect x="971.8" y="709" width="5.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="974.84" y="719.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="741" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="751.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="581" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1,186,735 samples, 1.29%)</title><rect x="591.0" y="37" width="12.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="594.02" y="47.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="501" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="511.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (808,027 samples, 0.88%)</title><rect x="772.9" y="661" width="8.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="775.89" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="293" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="303.5" ></text>
</g>
<g >
<title>[unknown] (10,627,182 samples, 11.54%)</title><rect x="427.5" y="181" width="113.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="430.55" y="191.5" >[unknown]</text>
</g>
<g >
<title>__GI___libc_malloc (1,083,707 samples, 1.18%)</title><rect x="740.7" y="661" width="11.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="743.74" y="671.5" ></text>
</g>
<g >
<title>dl_symbol_visibility_binds_local_p (610,994 samples, 0.66%)</title><rect x="979.9" y="709" width="6.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="982.95" y="719.5" ></text>
</g>
<g >
<title>main (59,663,749 samples, 64.80%)</title><rect x="314.1" y="805" width="635.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="317.13" y="815.5" >main</text>
</g>
<g >
<title>_GLOBAL__sub_I_benchmark_info.cpp (649,568 samples, 0.71%)</title><rect x="949.2" y="805" width="6.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="952.17" y="815.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="213" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="223.5" >[unkno..</text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runFromCommandLine (34,285,867 samples, 37.24%)</title><rect x="314.1" y="757" width="365.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="317.13" y="767.5" >TestCase&lt;SubmitKernelArguments&gt;::runFromCommandLine</text>
</g>
<g >
<title>BenchmarkInfo::initialize (649,568 samples, 0.71%)</title><rect x="949.2" y="789" width="6.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="952.17" y="799.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="661" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="671.5" ></text>
</g>
<g >
<title>MemGetIpcHandleTest_Test_Test::AddToRegistry (731,865 samples, 0.79%)</title><rect x="956.1" y="789" width="7.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="959.09" y="799.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="805" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="815.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="437" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="447.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (761,700 samples, 0.83%)</title><rect x="971.8" y="773" width="8.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="974.84" y="783.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,132,056 samples, 1.23%)</title><rect x="813.0" y="693" width="12.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="815.96" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="277" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="287.5" >[unkn..</text>
</g>
<g >
<title>_int_malloc (166,666 samples, 0.18%)</title><rect x="986.5" y="613" width="1.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="989.45" y="623.5" ></text>
</g>
<g >
<title>alloc_new_heap (166,666 samples, 0.18%)</title><rect x="988.2" y="517" width="1.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="991.23" y="527.5" ></text>
</g>
<g >
<title>std::ostream&amp; std::ostream::_M_insert&lt;unsigned long&gt; (1,175,326 samples, 1.28%)</title><rect x="899.2" y="693" width="12.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="902.22" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1,181,143 samples, 1.28%)</title><rect x="641.1" y="165" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="644.15" y="175.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::AddTestInfo (929,049 samples, 1.01%)</title><rect x="791.3" y="709" width="9.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="794.26" y="719.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="773" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="453" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="341" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="351.5" ></text>
</g>
<g >
<title>__printf_buffer (918,731 samples, 1.00%)</title><rect x="781.5" y="613" width="9.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="784.49" y="623.5" ></text>
</g>
<g >
<title>[unknown] (7,079,399 samples, 7.69%)</title><rect x="465.3" y="133" width="75.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="468.31" y="143.5" >[unknown]</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="805" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="815.5" ></text>
</g>
<g >
<title>open_verify (284,223 samples, 0.31%)</title><rect x="976.9" y="693" width="3.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="979.92" y="703.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (1,177,235 samples, 1.28%)</title><rect x="911.7" y="677" width="12.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="914.73" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (1,168,117 samples, 1.27%)</title><rect x="886.8" y="661" width="12.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="889.79" y="671.5" ></text>
</g>
<g >
<title>testing::TestSuite::AddTestInfo (929,049 samples, 1.01%)</title><rect x="791.3" y="693" width="9.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="794.26" y="703.5" ></text>
</g>
<g >
<title>_dl_open (33,106,912 samples, 35.96%)</title><rect x="314.1" y="501" width="352.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="317.13" y="511.5" >_dl_open</text>
</g>
<g >
<title>ze_lib::context_t::Init (33,106,912 samples, 35.96%)</title><rect x="314.1" y="629" width="352.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="317.13" y="639.5" >ze_lib::context_t::Init</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (24,831,025 samples, 26.97%)</title><rect x="339.4" y="357" width="264.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="342.36" y="367.5" >[libze_intel_gpu.so.1.6.34666.3]</text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (1,072,985 samples, 1.17%)</title><rect x="752.3" y="725" width="11.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="755.27" y="735.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="85" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="95.5" >[un..</text>
</g>
<g >
<title>[unknown] (12,996,683 samples, 14.12%)</title><rect x="402.3" y="261" width="138.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="405.33" y="271.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="789" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="799.5" ></text>
</g>
<g >
<title>start_thread (165,531 samples, 0.18%)</title><rect x="302.2" y="837" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="357" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="367.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="213" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="223.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="613" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="623.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (61,045,182 samples, 66.30%)</title><rect x="314.1" y="837" width="649.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="317.13" y="847.5" >__libc_start_main_impl</text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="725" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="735.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,177,235 samples, 1.28%)</title><rect x="911.7" y="693" width="12.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="914.73" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="565" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="575.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="741" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="751.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteCommandListTestWithIndirectTest&gt;::RegisterTests (1,109,272 samples, 1.20%)</title><rect x="801.2" y="741" width="11.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="804.15" y="751.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (1,178,955 samples, 1.28%)</title><rect x="666.5" y="741" width="12.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="669.51" y="751.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="149" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="159.5" >[un..</text>
</g>
<g >
<title>[unknown] (11,813,699 samples, 12.83%)</title><rect x="414.9" y="245" width="125.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="417.92" y="255.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="613" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="623.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="709" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="565" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="575.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="773" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="783.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (808,027 samples, 0.88%)</title><rect x="772.9" y="645" width="8.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="775.89" y="655.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="725" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="735.5" ></text>
</g>
<g >
<title>start_thread (333,332 samples, 0.36%)</title><rect x="986.5" y="837" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="847.5" ></text>
</g>
<g >
<title>___dlopen (33,106,912 samples, 35.96%)</title><rect x="314.1" y="597" width="352.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="317.13" y="607.5" >___dlopen</text>
</g>
<g >
<title>__GI__dl_catch_exception (761,700 samples, 0.83%)</title><rect x="971.8" y="757" width="8.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="974.84" y="767.5" ></text>
</g>
<g >
<title>[unknown] (10,627,182 samples, 11.54%)</title><rect x="427.5" y="197" width="113.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="430.55" y="207.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="517" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (1,152,995 samples, 1.25%)</title><rect x="837.2" y="693" width="12.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="840.21" y="703.5" ></text>
</g>
<g >
<title>dl_open_worker_begin (1,181,627 samples, 1.28%)</title><rect x="314.1" y="437" width="12.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="317.13" y="447.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="677" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="581" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="661" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="671.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="165" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="175.5" >[un..</text>
</g>
<g >
<title>std::locale::~locale (950,653 samples, 1.03%)</title><rect x="304.0" y="837" width="10.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="307.01" y="847.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;SubmitBarrierTest&gt;::RegisterTests (1,132,056 samples, 1.23%)</title><rect x="813.0" y="741" width="12.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="815.96" y="751.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="837" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="847.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="277" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="287.5" >[unkno..</text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;unsigned long, UsmMemoryPlacement&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul&gt; &gt;::IteratorImpl (1,109,272 samples, 1.20%)</title><rect x="801.2" y="709" width="11.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="804.15" y="719.5" ></text>
</g>
<g >
<title>clone3 (333,332 samples, 0.36%)</title><rect x="986.5" y="853" width="3.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="989.45" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="517" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="527.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="757" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="767.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="661" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="671.5" ></text>
</g>
<g >
<title>dl_main (1,954,472 samples, 2.12%)</title><rect x="965.6" y="789" width="20.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="968.65" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (166,666 samples, 0.18%)</title><rect x="988.2" y="661" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="991.23" y="671.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="757" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="767.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (918,731 samples, 1.00%)</title><rect x="781.5" y="661" width="9.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="784.49" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt; &gt; (1,726,758 samples, 1.88%)</title><rect x="772.9" y="725" width="18.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="775.89" y="735.5" ></text>
</g>
<g >
<title>[unknown] (285,537 samples, 0.31%)</title><rect x="299.2" y="645" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="302.21" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="501" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="511.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="357" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, bool, bool, bool, bool&gt; &gt; (1,132,056 samples, 1.23%)</title><rect x="813.0" y="725" width="12.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="815.96" y="735.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="485" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="495.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="325" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="335.5" >[unkn..</text>
</g>
<g >
<title>__GI__dl_catch_exception (33,106,912 samples, 35.96%)</title><rect x="314.1" y="485" width="352.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="317.13" y="495.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>[unknown] (14,178,946 samples, 15.40%)</title><rect x="389.7" y="293" width="151.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="392.74" y="303.5" >[unknown]</text>
</g>
<g >
<title>dl_open_worker (33,106,912 samples, 35.96%)</title><rect x="314.1" y="469" width="352.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="317.13" y="479.5" >dl_open_worker</text>
</g>
<g >
<title>elf_machine_rela_relative (1,181,627 samples, 1.28%)</title><rect x="314.1" y="373" width="12.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="317.13" y="383.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="517" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="527.5" ></text>
</g>
<g >
<title>run (33,106,912 samples, 35.96%)</title><rect x="314.1" y="709" width="352.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="317.13" y="719.5" >run</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="517" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="527.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (1,168,117 samples, 1.27%)</title><rect x="886.8" y="725" width="12.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="889.79" y="735.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,072,985 samples, 1.17%)</title><rect x="752.3" y="677" width="11.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="755.27" y="687.5" ></text>
</g>
<g >
<title>testing::TestInfo::TestInfo (1,072,985 samples, 1.17%)</title><rect x="752.3" y="709" width="11.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="755.27" y="719.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;ExecuteCommandListImmediateTest&gt;::RegisterTests (3,519,485 samples, 3.82%)</title><rect x="763.7" y="741" width="37.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="766.69" y="751.5" >tes..</text>
</g>
<g >
<title>[unknown] (1,179,491 samples, 1.28%)</title><rect x="528.1" y="101" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="531.10" y="111.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.18%)</title><rect x="986.5" y="677" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="687.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="693" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="703.5" ></text>
</g>
<g >
<title>L0::LevelZero::LevelZero (33,106,912 samples, 35.96%)</title><rect x="314.1" y="693" width="352.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="317.13" y="703.5" >L0::LevelZero::LevelZero</text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="613" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="623.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTo&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, AllocationMeasureMode&gt; (1,168,946 samples, 1.27%)</title><rect x="849.5" y="709" width="12.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="852.48" y="719.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;unsigned long, UsmMemoryPlacement&gt;::End (1,109,272 samples, 1.20%)</title><rect x="801.2" y="725" width="11.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="804.15" y="735.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="565" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (1,171,520 samples, 1.27%)</title><rect x="924.3" y="677" width="12.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="927.26" y="687.5" ></text>
</g>
<g >
<title>[unknown] (5,918,223 samples, 6.43%)</title><rect x="540.7" y="229" width="63.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="543.66" y="239.5" >[unkno..</text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;, 9ul&gt; (3,219,812 samples, 3.50%)</title><rect x="706.5" y="709" width="34.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="709.47" y="719.5" >vo..</text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="453" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="463.5" ></text>
</g>
<g >
<title>testing::internal::CartesianProductGenerator&lt;Api, unsigned long, unsigned long, TmpMemoryStrategy, unsigned long&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul&gt; &gt;::Equals (1,146,251 samples, 1.24%)</title><rect x="825.0" y="725" width="12.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="828.01" y="735.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="565" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="575.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,041,577 samples, 1.13%)</title><rect x="718.0" y="629" width="11.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="720.99" y="639.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="309" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="319.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="469" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="479.5" ></text>
</g>
<g >
<title>__GI___snprintf (918,731 samples, 1.00%)</title><rect x="781.5" y="645" width="9.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="784.49" y="655.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (18,912,802 samples, 20.54%)</title><rect x="339.4" y="341" width="201.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="342.36" y="351.5" >__memcpy_avx_unaligned_erms</text>
</g>
<g >
<title>_dl_relocate_object (1,181,627 samples, 1.28%)</title><rect x="314.1" y="405" width="12.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="317.13" y="415.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,177,235 samples, 1.28%)</title><rect x="911.7" y="645" width="12.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="914.73" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,152,995 samples, 1.25%)</title><rect x="837.2" y="709" width="12.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="840.21" y="719.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;EnqueueNdrTimeTest&gt;::RegisterTests (762,709 samples, 0.83%)</title><rect x="687.6" y="741" width="8.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="690.59" y="751.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="405" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,072,985 samples, 1.17%)</title><rect x="752.3" y="661" width="11.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="755.27" y="671.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTupleTo&lt;std::tuple&lt;Api, bool, bool, bool, bool&gt;, 5ul&gt; (1,132,056 samples, 1.23%)</title><rect x="813.0" y="709" width="12.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="815.96" y="719.5" ></text>
</g>
<g >
<title>api_overhead_be (92,073,071 samples, 100.00%)</title><rect x="10.0" y="869" width="980.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >api_overhead_be</text>
</g>
<g >
<title>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;unsigned long&gt; (1,122,328 samples, 1.22%)</title><rect x="22.3" y="837" width="12.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="25.32" y="847.5" ></text>
</g>
<g >
<title>void testing::internal::InitGoogleTestImpl&lt;char&gt; (25,377,882 samples, 27.56%)</title><rect x="679.1" y="773" width="270.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="682.06" y="783.5" >void testing::internal::InitGoogleTe..</text>
</g>
<g >
<title>[unknown] (1,181,627 samples, 1.28%)</title><rect x="314.1" y="261" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="317.13" y="271.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="741" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="613" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="565" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,168,117 samples, 1.27%)</title><rect x="886.8" y="677" width="12.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="889.79" y="687.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;TmpBufferMixedSizeTest&gt;::RegisterTests (1,146,251 samples, 1.24%)</title><rect x="825.0" y="741" width="12.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="828.01" y="751.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (165,531 samples, 0.18%)</title><rect x="302.2" y="709" width="1.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="305.25" y="719.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="453" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="463.5" ></text>
</g>
<g >
<title>dl_open_worker (31,925,285 samples, 34.67%)</title><rect x="326.7" y="453" width="339.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="329.70" y="463.5" >dl_open_worker</text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="757" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1,179,491 samples, 1.28%)</title><rect x="528.1" y="69" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="531.10" y="79.5" ></text>
</g>
<g >
<title>testing::(anonymous namespace)::PrintByteSegmentInObjectTo (2,137,101 samples, 2.32%)</title><rect x="718.0" y="661" width="22.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="720.99" y="671.5" >t..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; testing::PrintToString&lt;std::tuple&lt;Api, UsmRuntimeMemoryPlacement, unsigned long, unsigned long, AllocationMeasureMode&gt; &gt; (1,168,946 samples, 1.27%)</title><rect x="849.5" y="725" width="12.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="852.48" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (31,925,285 samples, 34.67%)</title><rect x="326.7" y="437" width="339.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="329.70" y="447.5" >__GI__dl_catch_exception</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;UsmRandomMemoryAllocationTest&gt;::RegisterTests (4,693,013 samples, 5.10%)</title><rect x="899.2" y="741" width="50.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="902.22" y="751.5" >testi..</text>
</g>
<g >
<title>std::ostream::sentry::sentry (1,157,828 samples, 1.26%)</title><rect x="10.0" y="837" width="12.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>_int_malloc (5,918,223 samples, 6.43%)</title><rect x="540.7" y="309" width="63.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="543.66" y="319.5" >_int_m..</text>
</g>
<g >
<title>testing::internal::UnitTestImpl::PostFlagParsingInit (25,377,882 samples, 27.56%)</title><rect x="679.1" y="757" width="270.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="682.06" y="767.5" >testing::internal::UnitTestImpl::Pos..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (333,332 samples, 0.36%)</title><rect x="986.5" y="821" width="3.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="989.45" y="831.5" ></text>
</g>
<g >
<title>resolve_map (610,994 samples, 0.66%)</title><rect x="979.9" y="725" width="6.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="982.95" y="735.5" ></text>
</g>
<g >
<title>[unknown] (3,560,767 samples, 3.87%)</title><rect x="565.8" y="117" width="37.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="568.75" y="127.5" >[un..</text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="821" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="831.5" ></text>
</g>
<g >
<title>void testing::internal::PrintTo&lt;Api, bool, unsigned long, bool, unsigned long, bool, bool, bool&gt; (1,726,758 samples, 1.88%)</title><rect x="772.9" y="709" width="18.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="775.89" y="719.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,169,210 samples, 1.27%)</title><rect x="874.3" y="661" width="12.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="877.34" y="671.5" ></text>
</g>
<g >
<title>TestCase&lt;SubmitKernelArguments&gt;::runImpl (33,106,912 samples, 35.96%)</title><rect x="314.1" y="725" width="352.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="317.13" y="735.5" >TestCase&lt;SubmitKernelArguments&gt;::runImpl</text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;MemGetIpcHandleTest&gt;::TestInfo::TestInfo (731,865 samples, 0.79%)</title><rect x="956.1" y="757" width="7.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="959.09" y="767.5" ></text>
</g>
<g >
<title>std::once_flag::_Prepare_execution::_Prepare_execution&lt;std::call_once&lt;zeInit::{lambda (33,106,912 samples, 35.96%)</title><rect x="314.1" y="645" width="352.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="317.13" y="655.5" >std::once_flag::_Prepare_execution::_Prepare_ex..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (165,531 samples, 0.18%)</title><rect x="302.2" y="821" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="305.25" y="831.5" ></text>
</g>
<g >
<title>[unknown] (649,568 samples, 0.71%)</title><rect x="949.2" y="773" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.17" y="783.5" ></text>
</g>
<g >
<title>testing::internal::PrintBytesInObjectTo (1,175,326 samples, 1.28%)</title><rect x="899.2" y="709" width="12.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="902.22" y="719.5" ></text>
</g>
<g >
<title>testing::internal::ValuesInIteratorRangeGenerator&lt;unsigned long&gt;::Iterator::~Iterator (1,109,272 samples, 1.20%)</title><rect x="801.2" y="693" width="11.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="804.15" y="703.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;CreateBufferTest&gt;::RegisterTests (801,941 samples, 0.87%)</title><rect x="679.1" y="741" width="8.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="682.06" y="751.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (929,049 samples, 1.01%)</title><rect x="791.3" y="725" width="9.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="794.26" y="735.5" ></text>
</g>
<g >
<title>[unknown] (284,223 samples, 0.31%)</title><rect x="976.9" y="501" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="979.92" y="511.5" ></text>
</g>
<g >
<title>operator new (166,666 samples, 0.18%)</title><rect x="986.5" y="645" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="989.45" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,072,985 samples, 1.17%)</title><rect x="752.3" y="581" width="11.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.27" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,168,932 samples, 1.27%)</title><rect x="936.7" y="677" width="12.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="939.73" y="687.5" ></text>
</g>
<g >
<title>call_init (31,925,285 samples, 34.67%)</title><rect x="326.7" y="389" width="339.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="329.70" y="399.5" >call_init</text>
</g>
<g >
<title>tcache_init (166,666 samples, 0.18%)</title><rect x="988.2" y="613" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="991.23" y="623.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="986.5" y="501" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="989.45" y="511.5" ></text>
</g>
<g >
<title>__brk (166,666 samples, 0.18%)</title><rect x="963.9" y="789" width="1.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="966.88" y="799.5" ></text>
</g>
<g >
<title>[unknown] (452,203 samples, 0.49%)</title><rect x="297.4" y="693" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="300.43" y="703.5" ></text>
</g>
<g >
<title>void testing::internal::CartesianProductGenerator&lt;Api, bool, bool, UsmMemoryPlacement, UsmMemoryPlacement, unsigned long, bool, bool, TestType&gt;::IteratorImpl&lt;std::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul&gt; &gt;::AdvanceIfEnd&lt;8ul&gt; (1,083,707 samples, 1.18%)</title><rect x="740.7" y="709" width="11.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="743.74" y="719.5" ></text>
</g>
<g >
<title>operator new (762,709 samples, 0.83%)</title><rect x="687.6" y="693" width="8.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="690.59" y="703.5" ></text>
</g>
<g >
<title>openaux (761,700 samples, 0.83%)</title><rect x="971.8" y="741" width="8.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="974.84" y="751.5" ></text>
</g>
<g >
<title>operator new (1,171,520 samples, 1.27%)</title><rect x="924.3" y="709" width="12.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="927.26" y="719.5" ></text>
</g>
<g >
<title>memset (581,778 samples, 0.63%)</title><rect x="965.6" y="757" width="6.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="968.65" y="767.5" ></text>
</g>
<g >
<title>operator new (166,666 samples, 0.18%)</title><rect x="988.2" y="645" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="991.23" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1,168,117 samples, 1.27%)</title><rect x="886.8" y="517" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.79" y="527.5" ></text>
</g>
<g >
<title>[unknown] (166,666 samples, 0.18%)</title><rect x="988.2" y="341" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="991.23" y="351.5" ></text>
</g>
<g >
<title>operator new (1,168,932 samples, 1.27%)</title><rect x="936.7" y="693" width="12.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="939.73" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4,704,210 samples, 5.11%)</title><rect x="603.7" y="229" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="606.65" y="239.5" >[unkn..</text>
</g>
<g >
<title>__printf_buffer (1,177,235 samples, 1.28%)</title><rect x="911.7" y="629" width="12.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="914.73" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1,152,995 samples, 1.25%)</title><rect x="837.2" y="581" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="840.21" y="591.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (166,666 samples, 0.18%)</title><rect x="986.5" y="709" width="1.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="719.5" ></text>
</g>
<g >
<title>[libze_intel_gpu.so.1.6.34666.3] (333,332 samples, 0.36%)</title><rect x="986.5" y="741" width="3.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.45" y="751.5" ></text>
</g>
<g >
<title>testing::internal::ParameterizedTestSuiteInfo&lt;MemGetIpcHandleTest&gt;::AddTestPattern (731,865 samples, 0.79%)</title><rect x="956.1" y="773" width="7.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="959.09" y="783.5" ></text>
</g>
</g>
</svg>
