"{\"results\": [{\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order not using events\", \"value\": 20.101, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),20.241,20.101,10.33%,19.386,664.160,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.0908953, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order not using events KernelExecTime=20\", \"value\": 19.972, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),20.107,19.972,2.28%,19.248,59.584,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.45843959999999995, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"value\": 19.966, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),20.105,19.966,8.42%,19.247,534.359,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.692841, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order KernelExecTime=20\", \"value\": 19.933, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),20.076,19.933,7.97%,19.237,505.341,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6000572, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion not using events\", \"value\": 24.6, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),24.738,24.600,6.48%,23.665,506.232,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6030224000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"value\": 31.505, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),31.350,31.505,5.55%,29.323,492.722,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.7399250000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"value\": 24.692, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),24.831,24.692,6.67%,23.781,523.160,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6562276999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion KernelExecTime=20\", \"value\": 31.614, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),31.520,31.614,5.64%,29.476,506.257,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.777728, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order not using events\", \"value\": 21.37, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),21.931,21.370,10.59%,20.412,233.569,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.3224929, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order not using events KernelExecTime=20\", \"value\": 21.405, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),21.980,21.405,13.11%,20.453,529.640,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.8815779999999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"value\": 20.198, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),20.330,20.198,7.88%,19.396,509.243,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6020039999999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order KernelExecTime=20\", \"value\": 20.127, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),20.255,20.127,2.21%,19.330,50.956,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.44763549999999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion not using events\", \"value\": 26.696, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),27.274,26.696,11.10%,25.487,645.875,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 3.0274140000000003, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"value\": 93.277, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),92.664,93.277,3.31%,87.981,529.773,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 3.0671784, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"value\": 24.69, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),24.844,24.690,6.67%,23.736,519.213,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6570947999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion KernelExecTime=20\", \"value\": 87.419, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),87.371,87.419,2.24%,83.982,518.129,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.9571104000000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order not using events\", \"value\": 10.423, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),10.494,10.423,3.95%,9.544,51.499,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.414513, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order not using events KernelExecTime=20\", \"value\": 10.397, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),10.450,10.397,3.36%,9.516,34.338,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.35111999999999993, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"value\": 12.213, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),12.251,12.213,2.79%,11.413,56.851,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.3418029, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order KernelExecTime=20\", \"value\": 12.289, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),12.351,12.289,12.34%,11.344,476.472,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5241134, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion not using events\", \"value\": 14.042, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),14.079,14.042,3.64%,12.576,65.869,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.5124756, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"value\": 20.332, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),20.445,20.332,9.19%,18.006,481.531,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.8788954999999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"value\": 16.019, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),16.057,16.019,2.45%,14.971,49.398,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.3933965, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion KernelExecTime=20\", \"value\": 23.594, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),23.615,23.594,7.32%,21.230,488.013,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.728618, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order not using events\", \"value\": 10.462, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),10.497,10.462,2.85%,9.729,23.768,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.2991645, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order not using events KernelExecTime=20\", \"value\": 10.496, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),10.532,10.496,3.42%,9.752,68.929,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.3601944, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"value\": 12.178, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),12.222,12.178,3.02%,11.368,74.388,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.3691044, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order KernelExecTime=20\", \"value\": 12.076, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),12.124,12.076,11.51%,11.297,441.218,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.3954724, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion not using events\", \"value\": 18.641, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),18.611,18.641,3.39%,16.718,60.406,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6309129, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"value\": 90.836, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),90.866,90.836,1.79%,88.247,513.263,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6265014, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"value\": 18.45, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),18.396,18.450,3.73%,15.353,63.221,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6861708000000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion KernelExecTime=20\", \"value\": 90.503, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),90.260,90.503,2.52%,85.788,452.972,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.2745520000000004, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events CPU count\", \"value\": 129292.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),129855.405,129292.000,2.06%,128861.000,230165.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),17.024,16.531,16.90%,15.759,636.250,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 2675.021343, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events\", \"value\": 16.221, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),129855.403,129292.000,2.06%,128861.000,230165.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),16.705,16.221,17.07%,15.530,626.520,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.8515434999999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events KernelExecTime=20 CPU count\", \"value\": 129292.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),129855.408,129292.000,2.06%,128861.000,230165.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),16.809,16.321,12.47%,15.674,184.703,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 2675.0214048, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events KernelExecTime=20\", \"value\": 16.383, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),129855.409,129292.000,2.06%,128861.000,230165.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),16.872,16.383,16.50%,15.562,591.657,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.78388, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order CPU count\", \"value\": 114854.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),114899.319,114854.000,0.34%,114854.000,130989.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),15.354,15.256,10.61%,14.755,515.797,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 390.65768460000004, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order\", \"value\": 15.226, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),114899.320,114854.000,0.34%,114854.000,130989.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),15.320,15.226,10.34%,14.678,505.636,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.584088, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order KernelExecTime=20 CPU count\", \"value\": 114854.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),114899.321,114854.000,0.34%,114854.000,130989.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),15.289,15.191,10.06%,14.601,490.772,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 390.65769140000003, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order KernelExecTime=20\", \"value\": 15.202, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),114899.321,114854.000,0.34%,114854.000,130989.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),15.274,15.202,2.21%,14.395,42.615,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.33755539999999995, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events CPU count\", \"value\": 166855.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),167338.918,166855.000,1.87%,146861.000,266085.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),21.767,21.269,13.33%,20.452,644.660,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 3129.2377666, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events\", \"value\": 21.178, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),167629.607,167175.000,1.82%,147339.000,266484.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),21.663,21.178,13.22%,20.310,635.270,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.8638486000000003, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events KernelExecTime=20 CPU count\", \"value\": 233902.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),229843.173,233902.000,5.86%,154898.000,326654.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),29.428,29.722,11.04%,25.488,616.875,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 13468.809937800002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"value\": 29.444, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),230170.139,234319.000,5.27%,157370.000,309900.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),29.355,29.444,8.72%,25.679,191.383,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.559756, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion CPU count\", \"value\": 144288.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),144282.413,144288.000,1.00%,124455.000,180445.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),19.770,19.676,7.72%,18.872,485.883,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 1442.82413, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion\", \"value\": 19.448, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),144780.392,144690.000,1.11%,126897.000,176693.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),19.542,19.448,7.62%,18.647,470.748,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.4891004, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion KernelExecTime=20 CPU count\", \"value\": 202846.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),200639.497,202846.000,3.93%,126763.000,266975.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),26.633,26.818,6.87%,24.271,505.123,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 7885.132232100001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion KernelExecTime=20\", \"value\": 26.67, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),204344.425,204186.000,2.78%,157315.000,279035.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),26.768,26.670,6.32%,25.497,501.900,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6917376000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel out of order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order not using events CPU count\", \"value\": 135452.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),136196.183,135452.000,2.23%,134117.000,238287.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),17.579,17.070,16.67%,16.167,604.710,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 3037.1748808999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order not using events CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order not using events\", \"value\": 17.07, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),136196.183,135452.000,2.23%,134117.000,238287.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),17.579,17.070,16.67%,16.167,604.710,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.9304193000000005, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order not using events KernelExecTime=20 CPU count\", \"value\": 135452.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),136196.200,135452.000,2.23%,134117.000,238572.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),17.171,16.665,14.54%,15.730,343.087,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 3037.1752600000004, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order not using events KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order not using events KernelExecTime=20\", \"value\": 16.745, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),136196.192,135452.000,2.23%,134117.000,238287.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),17.250,16.745,16.42%,15.835,530.034,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.83245, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order CPU count\", \"value\": 120578.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),120623.395,120578.000,0.33%,120537.000,140060.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),15.980,15.883,9.96%,15.151,505.670,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 398.0572035, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order\", \"value\": 15.883, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),120623.395,120578.000,0.33%,120537.000,140060.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),15.980,15.883,9.96%,15.151,505.670,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5916080000000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order KernelExecTime=20 CPU count\", \"value\": 120578.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),120623.397,120578.000,0.33%,120537.000,140060.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),15.891,15.795,2.60%,15.280,94.840,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 398.05721009999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order KernelExecTime=20\", \"value\": 16.007, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),120623.396,120578.000,0.33%,120537.000,140060.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),16.099,16.007,2.88%,15.368,89.747,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.4636512, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events CPU count\", \"value\": 180007.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),180697.298,180007.000,2.15%,157563.000,447727.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),22.949,22.441,9.99%,21.210,206.058,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 3884.991907, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events\", \"value\": 22.441, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),180697.298,180007.000,2.15%,157563.000,447727.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),22.949,22.441,9.99%,21.210,206.058,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.2926051000000003, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events KernelExecTime=20 CPU count\", \"value\": 753725.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),747473.782,753725.000,3.17%,318125.000,1650808.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),92.872,93.222,2.95%,88.486,574.073,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 23694.9188894, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"value\": 93.222, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),747473.782,753725.000,3.17%,318125.000,1650808.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),92.872,93.222,2.95%,88.486,574.073,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.7397240000000003, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion CPU count\", \"value\": 133703.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),133816.299,133703.000,0.38%,133028.000,174852.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),20.854,20.610,8.19%,19.815,517.649,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 508.5019362, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion\", \"value\": 20.389, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),133789.902,133703.000,0.38%,133365.000,172487.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),20.522,20.389,7.66%,19.614,479.942,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5719851999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion KernelExecTime=20 CPU count\", \"value\": 155335.0, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),155576.362,155335.000,0.62%,138098.000,220820.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),90.793,91.296,2.58%,86.745,517.853,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"instr\", \"stddev\": 964.5734444, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion KernelExecTime=20 CPU count\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion KernelExecTime=20\", \"value\": 91.774, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),155507.200,155335.000,0.82%,140167.000,218116.000,[CPU],hw instructions [count]\\nSubmitKernel(api=ur Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),91.135,91.774,2.75%,87.033,493.708,[CPU],time [us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.5062125, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur SubmitKernel in order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order not using events\", \"value\": 18.912, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),19.040,18.912,8.35%,18.402,504.313,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5898399999999997, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order not using events KernelExecTime=20\", \"value\": 18.946, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),19.082,18.946,8.31%,18.381,503.524,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5857142000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order\", \"value\": 19.122, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),19.244,19.122,8.49%,18.331,515.477,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6338156000000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order KernelExecTime=20\", \"value\": 18.896, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),19.020,18.896,2.28%,18.071,79.757,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.43365599999999993, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion not using events\", \"value\": 23.548, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),23.684,23.548,6.79%,22.774,510.648,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6081436000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"value\": 30.886, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),30.940,30.886,5.35%,29.466,501.150,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.65529, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion\", \"value\": 23.505, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),23.639,23.505,6.79%,22.640,509.708,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6050881, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion KernelExecTime=20\", \"value\": 30.811, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),30.863,30.811,5.12%,29.431,477.398,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5801856, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel out of order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order not using events\", \"value\": 19.812, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),20.350,19.812,14.85%,18.896,665.526,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 3.021975, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order not using events KernelExecTime=20\", \"value\": 19.64, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),20.175,19.640,11.75%,18.789,301.629,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.3705625, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order\", \"value\": 19.251, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),19.380,19.251,7.96%,18.596,489.924,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.542648, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order KernelExecTime=20\", \"value\": 19.407, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=0),19.539,19.407,2.13%,18.791,48.290,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.4161807, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion not using events\", \"value\": 25.32, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),25.876,25.320,11.58%,24.211,649.836,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.9964408000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion not using events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"value\": 92.176, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=0 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),91.785,92.176,2.94%,87.674,565.733,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.698479, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion not using events KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion\", \"value\": 23.955, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),24.112,23.955,6.68%,23.201,506.417,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6106816, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion KernelExecTime=20\", \"value\": 92.529, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_syclpreview\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=20\", \"--UseEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 UseEvents=1 NumKernels=10 KernelExecTime=20 MeasureCompletion=1),92.443,92.529,1.77%,89.832,515.060,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.6362411, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_syclpreview SubmitKernel in order with measure completion KernelExecTime=20\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"value\": 29.356, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),29.388,29.356,3.03%,27.538,78.737,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8904563999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"value\": 267.441, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),268.539,267.441,2.23%,261.291,756.784,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 5.9884197, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"value\": 25.829, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),25.804,25.829,2.76%,24.069,63.388,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.7121904, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"value\": 252.087, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),252.290,252.087,1.59%,247.727,621.960,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 4.011411, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"value\": 28.638, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),28.684,28.638,2.05%,27.816,72.053,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.5880219999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"value\": 253.638, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),254.060,253.638,1.18%,250.414,537.626,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2.997908, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SinKernelGraph graphs:0, numKernels:5\", \"value\": 33.533, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=ur numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),33.628,33.533,3.11%,31.616,82.086,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.0458308, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SinKernelGraph graphs:0, numKernels:100\", \"value\": 271.649, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=ur numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),271.889,271.649,2.51%,265.206,902.429,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 6.8244139, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SinKernelGraph graphs:1, numKernels:5\", \"value\": 52.932, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=ur numKernels=5 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),52.989,52.932,2.39%,49.391,97.198,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.2664371, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SinKernelGraph graphs:1, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SinKernelGraph graphs:1, numKernels:100\", \"value\": 310.98, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=ur numKernels=100 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),311.645,310.980,1.92%,307.947,741.986,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 5.983584, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SinKernelGraph graphs:1, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"value\": 5.644, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=1000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=sycl wgc=1000 wgs=256),5.681,5.644,11.93%,5.316,67.885,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6777433, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"value\": 0.64, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=sycl count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),0.635,0.640,9.64%,0.502,1.211,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.061214, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"value\": 4.409, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=1000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=l0 wgc=1000 wgs=256),4.426,4.409,9.52%,3.859,41.366,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.4213552, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"value\": 0.914, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=l0 count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),0.908,0.914,2.12%,0.868,0.937,[GPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.019249600000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 7.604, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.911,7.604,17.07%,7.190,68.177,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.3504076999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 30.791, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),30.911,30.791,3.82%,29.020,88.231,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.1808002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"value\": 7.538, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),7.866,7.538,20.28%,7.139,113.303,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.5952248, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"value\": 33.111, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),33.309,33.111,4.26%,31.406,95.755,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.4189633999999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 7.601, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),7.905,7.601,14.32%,7.131,70.581,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.131996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 42.778, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),42.912,42.778,3.01%,40.983,117.861,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.2916512, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 7.017, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.071,7.017,3.32%,6.775,13.937,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.2347572, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 34.299, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),34.273,34.299,2.08%,32.411,51.733,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.7128784, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"value\": 6.961, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),7.014,6.961,3.20%,6.756,14.467,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.224448, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"value\": 47.519, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),47.703,47.519,2.16%,45.759,96.019,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.0303848000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 6.899, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.959,6.899,3.19%,6.670,13.631,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.22199209999999997, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 91.547, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),91.621,91.547,1.21%,89.805,121.295,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.1086140999999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 1.267, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),1.254,1.267,6.68%,1.121,4.213,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.0837672, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 4.511, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),4.527,4.511,10.96%,4.058,49.615,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.4961592, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"value\": 1.167, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),1.172,1.167,8.48%,1.112,9.238,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.09938559999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"value\": 4.8, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),4.821,4.800,10.75%,4.417,50.142,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.5182574999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 1.167, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),1.174,1.167,6.92%,1.107,5.199,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.08124079999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 6.453, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),6.474,6.453,7.38%,6.083,50.830,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.4777812, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 1.383, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),1.388,1.383,5.73%,1.323,5.685,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.0795324, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 11.168, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),11.139,11.168,4.00%,10.049,40.105,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.44555999999999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"value\": 1.453, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),1.458,1.453,5.28%,1.382,5.969,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.07698239999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"value\": 20.558, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),20.567,20.558,2.44%,19.499,63.551,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.5018347999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 1.918, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),1.923,1.918,4.70%,1.782,6.661,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.090381, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 54.212, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=l0 Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),54.171,54.212,0.61%,53.347,58.711,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.3304431, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_l0 SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 6.952, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.015,6.952,8.98%,6.629,18.981,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.629947, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 30.973, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),31.041,30.973,2.75%,29.517,79.981,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8536275, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"value\": 6.923, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),6.981,6.923,8.79%,6.536,18.856,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6136299, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"value\": 33.517, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),33.591,33.517,2.43%,32.051,67.666,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8162613000000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 6.903, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.962,6.903,11.69%,6.534,60.511,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8138577999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 42.515, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=0 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),42.578,42.515,1.63%,41.089,60.843,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6940214, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 6.951, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.014,6.951,10.61%,6.615,46.358,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.7441854, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 35.084, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),35.154,35.084,2.48%,33.581,88.844,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8718192, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"value\": 6.909, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),6.968,6.909,9.08%,6.558,20.136,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6326944, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"value\": 48.358, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),48.461,48.358,2.57%,46.769,103.971,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 1.2454476999999997, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 6.963, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),7.020,6.963,8.79%,6.599,20.478,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.6170579999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 93.316, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/graph_api_benchmark_ur\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\", \"--UseEvents=0\", \"--UseExplicit=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=ur Profiling=0 InOrderQueue=1 UseEvents=0 UseExplicit=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),93.354,93.316,0.81%,91.492,120.966,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.7561674000000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"graph_api_benchmark_ur SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"value\": 5.754, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueMemcpy(api=sycl sourcePlacement=Device destinationPlacement=Device size=1KB),5.974,5.754,13.85%,5.379,70.361,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8273989999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"value\": 3.414, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=StreamMemory\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--type=Triad\", \"--size=10240\", \"--memoryPlacement=Device\", \"--useEvents=0\", \"--contents=Zeros\", \"--multiplier=1\", \"--vectorSize=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nStreamMemory(api=sycl type=Triad size=10KB useEvents=0 contents=Zeros memoryPlacement=Device multiplier=1 vectorSize=1),3.397,3.414,3.34%,0.420,3.726,[CPU],[GB/s]\\n\", \"passed\": true, \"unit\": \"GB/s\", \"stddev\": 0.11345979999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"lower_is_better\": false, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"miscellaneous_benchmark_sycl VectorSum\", \"value\": 862.73, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/miscellaneous_benchmark_sycl\", \"--test=VectorSum\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--numberOfElementsX=512\", \"--numberOfElementsY=256\", \"--numberOfElementsZ=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nVectorSum(api=sycl numberOfElementsX=512 numberOfElementsY=256 numberOfElementsZ=256),862.044,862.730,0.45%,822.144,872.299,[GPU],bw [GB/s]\\n\", \"passed\": true, \"unit\": \"bw GB/s\", \"stddev\": 3.8791980000000006, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"miscellaneous_benchmark_sycl VectorSum\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:100, numThreads:4, allocSize:102400 srcUSM:1 dstUSM:1 without events\", \"value\": 9055.318, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_ur\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=102400\", \"--NumThreads=4\", \"--NumOpsPerThread=100\", \"--iterations=10\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=ur Ioq=1 NumOpsPerThread=100 NumThreads=4 AllocSize=102400 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=0),9001.868,9055.318,2.83%,8436.287,9315.468,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 254.75286440000002, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:100, numThreads:4, allocSize:102400 srcUSM:1 dstUSM:1 without events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:100, numThreads:4, allocSize:102400 srcUSM:1 dstUSM:1 without events without copy offload\", \"value\": 8964.915, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_ur\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=102400\", \"--NumThreads=4\", \"--NumOpsPerThread=100\", \"--iterations=10\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=0\"], \"env\": {\"UR_L0_V2_FORCE_DISABLE_COPY_OFFLOAD\": \"1\"}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=ur Ioq=1 NumOpsPerThread=100 NumThreads=4 AllocSize=102400 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=0),9025.770,8964.915,5.51%,8239.959,9918.583,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 497.319927, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:100, numThreads:4, allocSize:102400 srcUSM:1 dstUSM:1 without events without copy offload\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:0 dstUSM:1 without events\", \"value\": 115579.758, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_ur\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=4\", \"--NumOpsPerThread=4096\", \"--iterations=10\", \"--SrcUSM=0\", \"--DstUSM=1\", \"--UseBarrier=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=ur Ioq=1 NumOpsPerThread=4096 NumThreads=4 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=0 DstUSM=1 UseBarrier=0),115513.005,115579.758,0.35%,114973.234,116407.378,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 404.29551749999996, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:0 dstUSM:1 without events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:0 dstUSM:1 without events with barrier\", \"value\": 117374.449, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_ur\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=4\", \"--NumOpsPerThread=4096\", \"--iterations=10\", \"--SrcUSM=0\", \"--DstUSM=1\", \"--UseBarrier=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=ur Ioq=1 NumOpsPerThread=4096 NumThreads=4 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=0 DstUSM=1 UseBarrier=1),117370.414,117374.449,0.68%,116073.057,118862.528,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 798.1188152000001, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_ur MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:0 dstUSM:1 without events with barrier\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur UsmMemoryAllocation usmMemoryPlacement:Device size:256 measureMode:Both\", \"value\": 0.145, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=UsmMemoryAllocation\", \"--csv\", \"--noHeaders\", \"--type=Device\", \"--size=256\", \"--measureMode=Both\", \"--iterations=10000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nUsmMemoryAllocation(api=ur type=Device size=256 measureMode=Both),0.148,0.145,37.97%,0.142,4.647,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.05619559999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur UsmMemoryAllocation usmMemoryPlacement:Device size:256 measureMode:Both\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur UsmMemoryAllocation usmMemoryPlacement:Device size:262144 measureMode:Both\", \"value\": 0.148, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=UsmMemoryAllocation\", \"--csv\", \"--noHeaders\", \"--type=Device\", \"--size=262144\", \"--measureMode=Both\", \"--iterations=10000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nUsmMemoryAllocation(api=ur type=Device size=256KB measureMode=Both),0.151,0.148,59.68%,0.143,7.497,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.0901168, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur UsmMemoryAllocation usmMemoryPlacement:Device size:262144 measureMode:Both\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:256 measureMode:Both\", \"value\": 10.672, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=UsmBatchMemoryAllocation\", \"--csv\", \"--noHeaders\", \"--type=Device\", \"--allocationCount=128\", \"--size=256\", \"--measureMode=Both\", \"--iterations=1000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nUsmBatchMemoryAllocation(api=ur type=Device allocationCount=128 size=256 measureMode=Both),10.812,10.672,7.64%,10.589,27.063,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 0.8260367999999999, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:256 measureMode:Both\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:16384 measureMode:Both\", \"value\": 369.884, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=UsmBatchMemoryAllocation\", \"--csv\", \"--noHeaders\", \"--type=Device\", \"--allocationCount=128\", \"--size=16384\", \"--measureMode=Both\", \"--iterations=1000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nUsmBatchMemoryAllocation(api=ur type=Device allocationCount=128 size=16KB measureMode=Both),406.527,369.884,27.24%,356.315,1162.060,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 110.73795479999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:16384 measureMode:Both\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:131072 measureMode:Both\", \"value\": 1376.811, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_ur\", \"--test=UsmBatchMemoryAllocation\", \"--csv\", \"--noHeaders\", \"--type=Device\", \"--allocationCount=128\", \"--size=131072\", \"--measureMode=Both\", \"--iterations=1000\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nUsmBatchMemoryAllocation(api=ur type=Device allocationCount=128 size=128KB measureMode=Both),1494.593,1376.811,12.12%,1319.255,2152.919,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 181.14467159999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"api_overhead_benchmark_ur UsmBatchMemoryAllocation usmMemoryPlacement:Device allocationCount:128 size:131072 measureMode:Both\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:1, allocSize:1024 srcUSM:1 dstUSM:1 without events\", \"value\": 37138.461, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_syclpreview\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=1\", \"--NumOpsPerThread=4096\", \"--iterations=40\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=sycl Ioq=1 NumOpsPerThread=4096 NumThreads=1 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=0),37170.742,37138.461,0.46%,36865.588,37557.045,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 170.98541319999998, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:1, allocSize:1024 srcUSM:1 dstUSM:1 without events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:1, allocSize:1024 srcUSM:1 dstUSM:1 without events with barrier\", \"value\": 60033.783, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_syclpreview\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=1\", \"--NumOpsPerThread=4096\", \"--iterations=40\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=sycl Ioq=1 NumOpsPerThread=4096 NumThreads=1 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=1),60001.843,60033.783,0.36%,59481.943,60562.042,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 216.0066348, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:1, allocSize:1024 srcUSM:1 dstUSM:1 without events with barrier\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:1 dstUSM:1 without events\", \"value\": 227775.028, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_syclpreview\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=4\", \"--NumOpsPerThread=4096\", \"--iterations=10\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=sycl Ioq=1 NumOpsPerThread=4096 NumThreads=4 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=0),227519.012,227775.028,0.95%,224261.503,230478.710,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 2161.430614, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:1 dstUSM:1 without events\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:1 dstUSM:1 without events with barrier\", \"value\": 162212.033, \"command\": [\"/home/test-user/ur_bench_workdir/compute-benchmarks-build/bin/multithread_benchmark_syclpreview\", \"--test=MemcpyExecute\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--UseEvents=0\", \"--MeasureCompletion=1\", \"--UseQueuePerThread=1\", \"--AllocSize=1024\", \"--NumThreads=4\", \"--NumOpsPerThread=4096\", \"--iterations=10\", \"--SrcUSM=1\", \"--DstUSM=1\", \"--UseBarrier=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nMemcpyExecute(api=sycl Ioq=1 NumOpsPerThread=4096 NumThreads=4 AllocSize=1024 MeasureCompletion=1 UseEvents=0 UseQueuePerThread=1 SrcUSM=1 DstUSM=1 UseBarrier=1),162232.616,162212.033,0.40%,161147.410,163541.574,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"stddev\": 648.930464, \"git_url\": \"https://github.com/intel/compute-benchmarks.git\", \"git_hash\": \"ffd199db86a904451f0697cb25a0e7a6b9f2006f\", \"name\": \"multithread_benchmark_syclpreview MemcpyExecute opsPerThread:4096, numThreads:4, allocSize:1024 srcUSM:1 dstUSM:1 without events with barrier\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\"}, {\"label\": \"Velocity-Bench Hashtable\", \"value\": 332.125806, \"command\": [\"/home/test-user/ur_bench_workdir/hashtable/hashtable_sycl\", \"--no-verify\"], \"env\": {}, \"stdout\": \"hashtable - total time for whole calculation: 0.404117 s\\n332.125806 million keys/second\\n\", \"passed\": true, \"unit\": \"M keys/sec\", \"stddev\": 1.849173391118039, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench Hashtable\", \"lower_is_better\": false, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench Bitcracker\", \"value\": 35.3484, \"command\": [\"/home/test-user/ur_bench_workdir/bitcracker/bitcracker\", \"-f\", \"/home/test-user/ur_bench_workdir/velocity-bench-repo/bitcracker/hash_pass/img_win8_user_hash.txt\", \"-d\", \"/home/test-user/ur_bench_workdir/velocity-bench-repo/bitcracker/hash_pass/user_passwords_60000.txt\", \"-b\", \"60000\"], \"env\": {}, \"stdout\": \"\\n---------> BitCracker: BitLocker password cracking tool <---------\\n\\n\\n==================================\\nRetrieving Info\\n==================================\\n\\nReading hash file \\\"/home/test-user/ur_bench_workdir/velocity-bench-repo/bitcracker/hash_pass/img_win8_user_hash.txt\\\"\\n================================================\\n                  Attack\\n================================================\\nType of attack: User Password\\nPsw per thread: 1\\nmax_num_pswd_per_read: 60000\\nDictionary: /home/test-user/ur_bench_workdir/velocity-bench-repo/bitcracker/hash_pass/user_passwords_60000.txt\\nMAC Comparison (-m): Yes\\n\\n\\nIter: 1, num passwords read: 60000\\nKernel execution:\\n\\tEffective passwords: 60000\\n\\tPasswords Range:\\n\\t\\tnpknpByH7N2m3OnLNH1X9DJxLrzIFWk\\n\\t\\t.....\\n\\t\\tdL_7uuf3QCz-c6K3xDu0\\n--------------------\\n================================================\\nBitcracker attack completed\\nTotal passwords evaluated: 60000\\nPassword not found!\\n================================================\\ntime to subtract from total: 0.00326562 s\\nbitcracker - total time for whole calculation: 35.3484 s\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.04065665177229224, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench Bitcracker\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench CudaSift\", \"value\": 206.358, \"command\": [\"/home/test-user/ur_bench_workdir/cudaSift/cudaSift\"], \"env\": {}, \"stdout\": \"UNKN: \\n\\nUNKN: ==================================================\\nUNKN: User input parameters:\\nUNKN: Trace:                             ../../inputData\\nUNKN: ==================================================\\nUNKN: \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1126 1268 30.5729% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1232 1268 33.451% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1210 1266 32.8537% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1232 1266 33.451% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1119 1270 30.3828% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1231 1265 33.4238% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1239 1274 33.6411% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1228 1266 33.3424% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1062 1267 28.8352% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1225 1257 33.2609% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1231 1268 33.4238% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1209 1257 32.8265% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1199 1264 32.555% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1233 1270 33.4781% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1225 1262 33.2609% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1230 1262 33.3967% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1224 1256 33.2338% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1217 1252 33.0437% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1207 1259 32.7722% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1155 1253 31.3603% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1231 1265 33.4238% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1215 1272 32.9894% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1232 1267 33.451% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1228 1262 33.3424% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1099 1255 29.8398% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1225 1260 33.2609% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1106 1273 30.0299% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1226 1260 33.2881% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1208 1259 32.7993% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1223 1260 33.2066% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1093 1261 29.6769% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1089 1269 29.5683% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1227 1263 33.3152% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1055 1261 28.6451% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1086 1269 29.4868% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1131 1262 30.7087% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1109 1258 30.1113% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1235 1272 33.5324% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1222 1260 33.1795% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1228 1268 33.3424% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1100 1253 29.867% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1113 1274 30.2199% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1107 1267 30.057% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1135 1271 30.8173% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1228 1262 33.3424% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1229 1266 33.3695% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1227 1261 33.3152% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1205 1267 32.7179% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1159 1268 31.4689% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nImage size = (1920,1080)\\nInitializing data...\\nNumber of original features: 3683 3933\\nNumber of matching features: 1219 1256 33.098% 1 2\\n\\nPerforming data verification \\nData verification is SUCCESSFUL. \\n\\nAvg workload time = 206.358 ms\\n\\n\", \"passed\": true, \"unit\": \"ms\", \"stddev\": 1.8965009886630673, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench CudaSift\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench Easywave\", \"value\": 238, \"command\": [\"/home/test-user/ur_bench_workdir/easywave/easyWave_sycl\", \"-grid\", \"/home/test-user/ur_bench_workdir/data/easywave/examples/e2Asean.grd\", \"-source\", \"/home/test-user/ur_bench_workdir/data/easywave/examples/BengkuluSept2007.flt\", \"-time\", \"120\"], \"env\": {}, \"stdout\": \"MAIN: Starting SYCL main program\\nMAIN: Attempting to clean up previous eWave tsunami files\\nMAIN: Clean up completed\\nSYCL: SYCL Queue initialization successful \\nSYCL: \\t Using SYCL device         : Intel(R) Data Center GPU Max 1100 (Driver version 1.6.33276)\\nSYCL: \\t Platform                  : Intel(R) oneAPI Unified Runtime over Level-Zero\\nMAIN: Program successfully completed\\n\", \"passed\": true, \"unit\": \"ms\", \"stddev\": 1.5275252316519468, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench Easywave\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench QuickSilver\", \"value\": 116.51, \"command\": [\"/home/test-user/ur_bench_workdir/QuickSilver/qs\", \"-i\", \"/home/test-user/ur_bench_workdir/velocity-bench-repo/QuickSilver/Examples/AllScattering/scatteringOnly.inp\"], \"env\": {\"QS_DEVICE\": \"GPU\"}, \"stdout\": \"Copyright (c) 2016\\nLawrence Livermore National Security, LLC\\nAll Rights Reserved\\nQuicksilver Version     : \\nQuicksilver Git Hash    : \\nMPI Version             : 3.0\\nNumber of MPI ranks     : 1\\nNumber of OpenMP Threads: 1\\nNumber of OpenMP CPUs   : 1\\n\\nLoading params\\nFinished loading params\\nSimulation:\\n   dt: 1e-08\\n   fMax: 0.1\\n   inputFile: /home/test-user/ur_bench_workdir/velocity-bench-repo/QuickSilver/Examples/AllScattering/scatteringOnly.inp\\n   energySpectrum: \\n   boundaryCondition: octant\\n   loadBalance: 1\\n   cycleTimers: 0\\n   debugThreads: 0\\n   lx: 100\\n   ly: 100\\n   lz: 100\\n   nParticles: 10000000\\n   batchSize: 0\\n   nBatches: 10\\n   nSteps: 10\\n   nx: 10\\n   ny: 10\\n   nz: 10\\n   seed: 1029384756\\n   xDom: 0\\n   yDom: 0\\n   zDom: 0\\n   eMax: 20\\n   eMin: 1e-09\\n   nGroups: 230\\n   lowWeightCutoff: 0.001\\n   bTally: 1\\n   fTally: 1\\n   cTally: 1\\n   coralBenchmark: 0\\n   crossSectionsOut:\\n\\nGeometry:\\n   material: sourceMaterial\\n   shape: brick\\n   xMax: 100\\n   xMin: 0\\n   yMax: 100\\n   yMin: 0\\n   zMax: 100\\n   zMin: 0\\n\\nMaterial:\\n   name: sourceMaterial\\n   mass: 1000\\n   nIsotopes: 10\\n   nReactions: 9\\n   sourceRate: 1e+10\\n   totalCrossSection: 0.1\\n   absorptionCrossSection: flat\\n   fissionCrossSection: flat\\n   scatteringCrossSection: flat\\n   absorptionCrossSectionRatio: 0\\n   fissionCrossSectionRatio: 0\\n   scatteringCrossSectionRatio: 1\\n\\nCrossSection:\\n   name: flat\\n   A: 0\\n   B: 0\\n   C: 0\\n   D: 0\\n   E: 1\\n   nuBar: 2.4\\nsetting GPU\\nsetting parameters\\nBuilding partition 0\\nBuilding partition 1\\nBuilding partition 2\\nBuilding partition 3\\nBuilding MC_Domain 0\\nBuilding MC_Domain 1\\nBuilding MC_Domain 2\\nBuilding MC_Domain 3\\nStarting Consistency Check\\nFinished Consistency Check\\nFinished initMesh\\nStarted copyMaterialDatabase_device\\nFinished copyMaterialDatabase_device\\nFinished copyNuclearData_device\\nFinished copyDomainDevice\\n   cycle  start  source     rr  split     absorb    scatter fission    produce    collisn   escape     census    num_seg   scalar_flux      cycleInit  cycleTracking  cycleFinalize\\n       0      0 1000000      0 9000000          0   18533189       0          0   18533189  1151780    8848220   55527935  1.854923e+09   3.872350e-01   6.066230e-01   0.000000e+00\\n       1 8848220 1000000      0 151478          0   34281997       0          0   34281997  1664159    8335539   94633679  5.047651e+09   3.679870e-01   7.478700e-01   0.000000e+00\\n       2 8335539 1000000      0 663717          0   34354432       0          0   34354432  1366771    8632485   95010375  7.705930e+09   3.600340e-01   7.648730e-01   0.000000e+00\\n       3 8632485 1000000      0 367978          0   34302727       0          0   34302727  1242216    8758247   94953591  9.992076e+09   3.755650e-01   8.244380e-01   0.000000e+00\\n       4 8758247 1000000      0 242076          0   34141236       0          0   34141236  1168452    8831871   94599337  1.199834e+10   4.147480e-01   8.149590e-01   0.000000e+00\\n       5 8831871 1000000      0 168070          0   33948724       0          0   33948724  1121156    8878785   94148236  1.377636e+10   4.165530e-01   7.880380e-01   0.000000e+00\\n       6 8878785 1000000      0 120572          0   33760567       0          0   33760567  1089103    8910254   93689264  1.535668e+10   4.146520e-01   7.862760e-01   0.000000e+00\\n       7 8910254 1000000      0  89810          0   33552179       0          0   33552179  1065203    8934861   93216931  1.676993e+10   4.163100e-01   8.095950e-01   0.000000e+00\\n       8 8934861 1000000      0  65491          0   33384605       0          0   33384605  1047720    8952632   92768273  1.804559e+10   4.139620e-01   8.090570e-01   0.000000e+00\\n       9 8952632 1000000      0  47165          0   33198494       0          0   33198494  1033968    8965829   92324678  1.920208e+10   4.157310e-01   7.806390e-01   0.000000e+00\\n\\nTimer                       Cumulative   Cumulative   Cumulative   Cumulative   Cumulative   Cumulative\\nName                            number    microSecs    microSecs    microSecs    microSecs   Efficiency\\n                              of calls          min          avg          max       stddev       Rating\\nmain                                 1    1.172e+07    1.172e+07    1.172e+07    0.000e+00       100.00\\ncycleInit                           10    3.983e+06    3.983e+06    3.983e+06    0.000e+00       100.00\\ncycleTracking                       10    7.732e+06    7.732e+06    7.732e+06    0.000e+00       100.00\\ncycleTracking_Kernel               104    4.980e+06    4.980e+06    4.980e+06    0.000e+00       100.00\\ncycleTracking_MPI                  117    2.034e+05    2.034e+05    2.034e+05    0.000e+00       100.00\\ncycleTracking_Test_Done              0    0.000e+00    0.000e+00    0.000e+00    0.000e+00         0.00\\ncycleFinalize                       20    4.920e+02    4.920e+02    4.920e+02    0.000e+00       100.00\\nFigure Of Merit                 116.51 [Num Mega Segments / Cycle Tracking Time]\\n\", \"passed\": true, \"unit\": \"MMS/CTT\", \"stddev\": 0.07094598884597644, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench QuickSilver\", \"lower_is_better\": false, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench Sobel Filter\", \"value\": 651.301, \"command\": [\"/home/test-user/ur_bench_workdir/sobel_filter/sobel_filter\", \"-i\", \"/home/test-user/ur_bench_workdir/data/sobel_filter/sobel_filter_data/silverfalls_32Kx32K.png\", \"-n\", \"5\"], \"env\": {\"OPENCV_IO_MAX_IMAGE_PIXELS\": \"1677721600\"}, \"stdout\": \"SYMN: Welcome to the SYCL version of Sobel filter workload.\\nSYMN: Input image file: /home/test-user/ur_bench_workdir/data/sobel_filter/sobel_filter_data/silverfalls_32Kx32K.png\\nSYMN: Launching SYCL kernel with # of iterations: 5\\ntime to subtract from total: 7.46421 s\\nsobelfilter - total time for whole calculation: 0.651301 s\\n\", \"passed\": true, \"unit\": \"ms\", \"stddev\": 12.291470306680143, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench Sobel Filter\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench dl-cifar\", \"value\": 24.3811, \"command\": [\"/home/test-user/ur_bench_workdir/dl-cifar/dl-cifar_sycl\"], \"env\": {}, \"stdout\": \"\\n\\t\\tWelcome to DL-CIFAR workload: SYCL version.\\n\\n=======================================================================\\nSYCL: SYCL Queue initialization successful\\nSYCL: \\t Using SYCL device         : Intel(R) Data Center GPU Max 1100 (Driver version 1.6.33276)\\nSYCL: \\t Platform                  : Intel(R) oneAPI Unified Runtime over Level-Zero\\nSYCL: \\t Using SYCL device         : Intel(R) Data Center GPU Max 1100 (Driver version 1.6.33276)\\nSYCL: \\t Platform                  : Intel(R) oneAPI Unified Runtime over Level-Zero\\n=======================================================================\\n\\nWL PARAMS: \\n\\nWL PARAMS: ==================================================\\nWL PARAMS: User input parameters:\\nWL PARAMS: Trace:                         notrace\\nWL PARAMS: DL NW size type:               WORKLOAD_DEFAULT_SIZE\\nWL PARAMS: ==================================================\\nWL PARAMS: \\n\\ndataFileReadTimer->getTotalOpTime(): 0.000119 s\\ndl-cifar - total time for whole calculation: 24.3811 s\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.07506044231151232, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench dl-cifar\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench dl-mnist\", \"value\": 2.55, \"command\": [\"/home/test-user/ur_bench_workdir/dl-mnist/dl-mnist-sycl\", \"-conv_algo\", \"ONEDNN_AUTO\"], \"env\": {\"NEOReadDebugKeys\": \"1\", \"DisableScratchPages\": \"0\"}, \"stdout\": \"\\n\\t\\tWelcome to DL-MNIST workload: SYCL version.\\n\\n=======================================================================\\nSYCL: SYCL Queue initialization successful\\nSYCL: \\t Using SYCL device         : Intel(R) Data Center GPU Max 1100 (Driver version 1.6.33276)\\nSYCL: \\t Platform                  : Intel(R) oneAPI Unified Runtime over Level-Zero\\nSYCL: \\t Using SYCL device         : Intel(R) Data Center GPU Max 1100 (Driver version 1.6.33276)\\nSYCL: \\t Platform                  : Intel(R) oneAPI Unified Runtime over Level-Zero\\n=======================================================================\\n\\nWL PARAMS: \\n\\nWL PARAMS: ==================================================\\nWL PARAMS: User input parameters:\\nWL PARAMS: Trace:                             notrace\\nWL PARAMS: Tensor management policy:          per_layer\\nWL PARAMS: Convolution algorithm:             ONEDNN_AUTO\\nWL PARAMS: Dataset reader format:             NCHW\\nWL PARAMS: Dry run:                           YES\\nWL PARAMS: OneDNN Conv PD memory format:      ONEDNN_CONVPD_ANY\\nWL PARAMS: No of iterations for inference:    400\\nWL PARAMS: ==================================================\\nWL PARAMS: \\n\\ndl-mnist - total time for whole calculation: 2.55 s\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.011547005383792526, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench dl-mnist\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"Velocity-Bench svm\", \"value\": 0.1291, \"command\": [\"/home/test-user/ur_bench_workdir/svm/svm_sycl\", \"/home/test-user/ur_bench_workdir/velocity-bench-repo/svm/SYCL/a9a\", \"/home/test-user/ur_bench_workdir/velocity-bench-repo/svm/SYCL/a.m\"], \"env\": {}, \"stdout\": \"Number of args 3\\nUsing cuSVM (Carpenter)...\\n\\nBuffering input text file (6989624 B).\\nLoad Done \\nStarting Training \\n_C 1.000000\\nWorkgroup Size: 1024\\nnbrCtas 80 \\nelemsPerCta 1248 \\nthreadsPerCta 128 \\nTotal run time: 0.063333 seconds\\nIter:100\\nM:97683\\nN:123\\nTrain done. Calulate Vector counts \\nTraining done \\n\\nLoading    elapsed time : 0.0616 s\\nProcessing elapsed time : 0.0654 s\\nStoring    elapsed time : 0.0021 s\\nTotal      elapsed time : 0.1291 s\\nResult's are correct: 0.0551 \\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.0013972500464511308, \"git_url\": \"https://github.com/oneapi-src/Velocity-Bench/\", \"git_hash\": \"b22215c16f789100449c34bf4eaa3fb178983d69\", \"name\": \"Velocity-Bench svm\", \"lower_is_better\": true, \"suite\": \"Velocity Bench\"}, {\"label\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_SingleTask\", \"value\": 224.717, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_independent\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/IndependentDAGTaskThroughput_multi.csv\", \"--size=32768\"], \"env\": {}, \"stdout\": [\"Runtime_IndependentDAGTaskThroughput_SingleTask\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"32768\", \"0.224820\", \"0.224717\", \"0.210633\", \"0.210633 0.224717 0.239111\", \"0.014239\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 1.251483253317172, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_SingleTask\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_BasicParallelFor\", \"value\": 232.741, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_independent\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/IndependentDAGTaskThroughput_multi.csv\", \"--size=32768\"], \"env\": {}, \"stdout\": [\"Runtime_IndependentDAGTaskThroughput_BasicParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"32768\", \"0.232445\", \"0.232741\", \"0.231832\", \"0.231832 0.232741 0.232761\", \"0.000530\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.9273192546259378, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_BasicParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_HierarchicalParallelFor\", \"value\": 229.434, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_independent\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/IndependentDAGTaskThroughput_multi.csv\", \"--size=32768\"], \"env\": {}, \"stdout\": [\"Runtime_IndependentDAGTaskThroughput_HierarchicalParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"32768\", \"0.230653\", \"0.229434\", \"0.229028\", \"0.229028 0.229434 0.233498\", \"0.002472\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 1.3334207887985008, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_HierarchicalParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_NDRangeParallelFor\", \"value\": 232.567, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_independent\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/IndependentDAGTaskThroughput_multi.csv\", \"--size=32768\"], \"env\": {}, \"stdout\": [\"Runtime_IndependentDAGTaskThroughput_NDRangeParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"32768\", \"0.232703\", \"0.232567\", \"0.232310\", \"0.232310 0.232567 0.233232\", \"0.000476\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 1.0923389278668565, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench IndependentDAGTaskThroughput_multi Runtime_IndependentDAGTaskThroughput_NDRangeParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_SingleTask\", \"value\": 1557.156, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_sequential\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/DAGTaskThroughput_multi.csv\", \"--size=327680\"], \"env\": {}, \"stdout\": [\"Runtime_DAGTaskThroughput_SingleTask\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"327680\", \"1.556226\", \"1.557156\", \"1.551833\", \"1.551833 1.557156 1.559689\", \"0.004010\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 3.5012900955695545, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_SingleTask\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_BasicParallelFor\", \"value\": 1620.876, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_sequential\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/DAGTaskThroughput_multi.csv\", \"--size=327680\"], \"env\": {}, \"stdout\": [\"Runtime_DAGTaskThroughput_BasicParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"327680\", \"1.619503\", \"1.620876\", \"1.615347\", \"1.615347 1.620876 1.622285\", \"0.003667\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 3.5609201526196537, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_BasicParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_HierarchicalParallelFor\", \"value\": 1569.8780000000002, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_sequential\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/DAGTaskThroughput_multi.csv\", \"--size=327680\"], \"env\": {}, \"stdout\": [\"Runtime_DAGTaskThroughput_HierarchicalParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"327680\", \"1.570375\", \"1.569878\", \"1.569372\", \"1.569372 1.569878 1.571877\", \"0.001325\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 5.059491805837178, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_HierarchicalParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_NDRangeParallelFor\", \"value\": 1578.7949999999998, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/dag_task_throughput_sequential\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/DAGTaskThroughput_multi.csv\", \"--size=327680\"], \"env\": {}, \"stdout\": [\"Runtime_DAGTaskThroughput_NDRangeParallelFor\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"327680\", \"1.579255\", \"1.578795\", \"1.578107\", \"1.578107 1.578795 1.580864\", \"0.001435\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 3.270064576324572, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench DAGTaskThroughput_multi Runtime_DAGTaskThroughput_NDRangeParallelFor\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_H2D_Contiguous\", \"value\": 5.914, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_1D_H2D_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.006630\", \"0.005914\", \"0.005842\", \"0.005842 0.005914 0.008135\", \"0.001304\", \"21.397782\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.10247438704378768, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_H2D_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_H2D_Contiguous\", \"value\": 5.906, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_2D_H2D_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.005943\", \"0.005906\", \"0.005872\", \"0.005872 0.005906 0.006050\", \"0.000095\", \"21.286136\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.11132984026456444, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_H2D_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_H2D_Contiguous\", \"value\": 5.856, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_3D_H2D_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.005903\", \"0.005856\", \"0.005848\", \"0.005848 0.005856 0.006005\", \"0.000089\", \"21.373546\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.022253089673121812, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_H2D_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_D2H_Contiguous\", \"value\": 5.88, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_1D_D2H_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.005880\", \"0.005880\", \"0.005847\", \"0.005847 0.005880 0.005915\", \"0.000034\", \"21.379337\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.07145161533046883, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_D2H_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_D2H_Contiguous\", \"value\": 652.694, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_2D_D2H_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.652701\", \"0.652694\", \"0.652691\", \"0.652691 0.652694 0.652717\", \"0.000014\", \"0.191515\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.03321445468466195, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_D2H_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_D2H_Contiguous\", \"value\": 652.722, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_3D_D2H_Contiguous\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.652735\", \"0.652722\", \"0.652720\", \"0.652720 0.652722 0.652763\", \"0.000024\", \"0.191506\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.07990828075571334, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_D2H_Contiguous\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_H2D_Strided\", \"value\": 5.883, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_1D_H2D_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.005809\", \"0.005883\", \"0.005583\", \"0.005583 0.005883 0.005962\", \"0.000200\", \"22.388398\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.06439202849214581, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_H2D_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_H2D_Strided\", \"value\": 6.153, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_2D_H2D_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.006155\", \"0.006153\", \"0.006111\", \"0.006111 0.006153 0.006201\", \"0.000045\", \"20.453883\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.07649771238409685, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_H2D_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_H2D_Strided\", \"value\": 6.194, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_3D_H2D_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.006275\", \"0.006194\", \"0.006103\", \"0.006103 0.006194 0.006527\", \"0.000223\", \"20.481807\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.08714757598464799, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_H2D_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_D2H_Strided\", \"value\": 5.986, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_1D_D2H_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.006218\", \"0.005986\", \"0.005884\", \"0.005884 0.005986 0.006783\", \"0.000492\", \"21.243099\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.10562512327408982, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_1D_D2H_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_D2H_Strided\", \"value\": 652.672, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_2D_D2H_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.652684\", \"0.652672\", \"0.652667\", \"0.652667 0.652672 0.652713\", \"0.000025\", \"0.191522\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.08289611973228887, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_2D_D2H_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_D2H_Strided\", \"value\": 652.682, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/host_device_bandwidth\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/HostDeviceBandwidth_multi.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"MicroBench_HostDeviceBandwidth_3D_D2H_Strided\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.652669\", \"0.652682\", \"0.652634\", \"0.652634 0.652682 0.652691\", \"0.000031\", \"0.191532\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"0.125000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.08472642248236685, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench HostDeviceBandwidth_multi MicroBench_HostDeviceBandwidth_3D_D2H_Strided\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench LocalMem_multi MicroBench_LocalMem_int32_4096\", \"value\": 29.8, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/local_mem\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/LocalMem_multi.csv\", \"--size=10240000\"], \"env\": {}, \"stdout\": [\"MicroBench_LocalMem_int32_4096\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"10240000\", \"0.029763\", \"0.029800\", \"0.029681\", \"0.029681 0.029800 0.029808\", \"0.000071\", \"10511.718191\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"312.000000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.01850225211517006, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench LocalMem_multi MicroBench_LocalMem_int32_4096\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench LocalMem_multi MicroBench_LocalMem_fp32_4096\", \"value\": 29.794999999999998, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/local_mem\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/LocalMem_multi.csv\", \"--size=10240000\"], \"env\": {}, \"stdout\": [\"MicroBench_LocalMem_fp32_4096\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"10240000\", \"0.029791\", \"0.029795\", \"0.029725\", \"0.029725 0.029795 0.029852\", \"0.000064\", \"10496.252031\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"312.000000\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.07751988992080448, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench LocalMem_multi MicroBench_LocalMem_fp32_4096\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_int32\", \"value\": 3.863, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_NDRange_int32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.003865\", \"0.003863\", \"0.003838\", \"0.003838 0.003863 0.003895\", \"0.000029\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.01652271164185849, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_int32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_int64\", \"value\": 5.551, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_NDRange_int64\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.005593\", \"0.005551\", \"0.005537\", \"0.005537 0.005551 0.005690\", \"0.000085\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.007371114795832106, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_int64\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_fp32\", \"value\": 3.877, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_NDRange_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.003877\", \"0.003877\", \"0.003834\", \"0.003834 0.003877 0.003921\", \"0.000044\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.015885003409925064, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_NDRange_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_int32\", \"value\": 11.395000000000001, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_Hierarchical_int32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.011378\", \"0.011395\", \"0.011330\", \"0.011330 0.011395 0.011409\", \"0.000042\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.01708800749063547, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_int32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_int64\", \"value\": 12.331, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_Hierarchical_int64\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.012325\", \"0.012331\", \"0.012281\", \"0.012281 0.012331 0.012361\", \"0.000040\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.031085902485423974, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_int64\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_fp32\", \"value\": 11.045, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/scalar_prod\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/ScalarProduct_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"ScalarProduct_Hierarchical_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.011035\", \"0.011045\", \"0.010990\", \"0.010990 0.011045 0.011070\", \"0.000041\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0015275252316511, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench ScalarProduct_multi ScalarProduct_Hierarchical_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int16\", \"value\": 2.419, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_NDRange_int16\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.002427\", \"0.002419\", \"0.002418\", \"0.002418 0.002419 0.002443\", \"0.000014\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0011547005383791243, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int16\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int32\", \"value\": 2.337, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_NDRange_int32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.002338\", \"0.002337\", \"0.002334\", \"0.002334 0.002337 0.002343\", \"0.000004\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.003605551275464085, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int64\", \"value\": 2.5170000000000003, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_NDRange_int64\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.002519\", \"0.002517\", \"0.002514\", \"0.002514 0.002517 0.002526\", \"0.000006\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0030550504633039444, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_int64\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_fp32\", \"value\": 2.333, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_NDRange_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.002333\", \"0.002333\", \"0.002328\", \"0.002328 0.002333 0.002339\", \"0.000005\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0036055512754638386, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_NDRange_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int16\", \"value\": 12.443, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_Hierarchical_int16\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.012446\", \"0.012443\", \"0.012439\", \"0.012439 0.012443 0.012457\", \"0.000009\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.00351188458428407, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int16\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int32\", \"value\": 12.311, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_Hierarchical_int32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.012319\", \"0.012311\", \"0.012307\", \"0.012307 0.012311 0.012340\", \"0.000018\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.003214550253664563, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int64\", \"value\": 12.522, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_Hierarchical_int64\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.012517\", \"0.012522\", \"0.012488\", \"0.012488 0.012522 0.012543\", \"0.000028\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.008736894948054684, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_int64\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_fp32\", \"value\": 12.312999999999999, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/segmentedreduction\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Pattern_SegmentedReduction_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"Pattern_SegmentedReduction_Hierarchical_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.012315\", \"0.012313\", \"0.012305\", \"0.012305 0.012313 0.012326\", \"0.000011\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.001000000000000334, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Pattern_SegmentedReduction_multi Pattern_SegmentedReduction_Hierarchical_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_device\", \"value\": 0.038, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/usm_allocation_latency\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/USM_Allocation_latency_multi.csv\", \"--size=1024000000\"], \"env\": {}, \"stdout\": [\"USM_Allocation_latency_fp32_device\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"1024000000\", \"0.000035\", \"0.000038\", \"0.000027\", \"0.000027 0.000038 0.000040\", \"0.000007\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0023143164446679737, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_device\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_host\", \"value\": 0.325, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/usm_allocation_latency\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/USM_Allocation_latency_multi.csv\", \"--size=1024000000\"], \"env\": {}, \"stdout\": [\"USM_Allocation_latency_fp32_host\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"1024000000\", \"0.000366\", \"0.000325\", \"0.000295\", \"0.000295 0.000325 0.000478\", \"0.000098\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.01703525755602188, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_host\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_shared\", \"value\": 0.039, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/usm_allocation_latency\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/USM_Allocation_latency_multi.csv\", \"--size=1024000000\"], \"env\": {}, \"stdout\": [\"USM_Allocation_latency_fp32_shared\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"1024000000\", \"0.000039\", \"0.000039\", \"0.000036\", \"0.000036 0.000039 0.000043\", \"0.000003\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.004730851126483731, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench USM_Allocation_latency_multi USM_Allocation_latency_fp32_shared\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench VectorAddition_multi VectorAddition_int32\", \"value\": 1.468, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/vec_add\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/VectorAddition_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"VectorAddition_int32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.001473\", \"0.001468\", \"0.001432\", \"0.001432 0.001468 0.001518\", \"0.000044\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.031099059714909595, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench VectorAddition_multi VectorAddition_int32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench VectorAddition_multi VectorAddition_int64\", \"value\": 3.0460000000000003, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/vec_add\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/VectorAddition_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"VectorAddition_int64\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.003046\", \"0.003046\", \"0.003035\", \"0.003035 0.003046 0.003057\", \"0.000011\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.007589635307612985, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench VectorAddition_multi VectorAddition_int64\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench VectorAddition_multi VectorAddition_fp32\", \"value\": 1.449, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/vec_add\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/VectorAddition_multi.csv\", \"--size=102400000\"], \"env\": {}, \"stdout\": [\"VectorAddition_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"102400000\", \"0.001469\", \"0.001449\", \"0.001430\", \"0.001430 0.001449 0.001528\", \"0.000052\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0222351073754997, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench VectorAddition_multi VectorAddition_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench 2mm Polybench_2mm\", \"value\": 1.256, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/2mm\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/2mm.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"Polybench_2mm\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.001260\", \"0.001256\", \"0.001252\", \"0.001252 0.001256 0.001271\", \"0.000010\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.012124355652982088, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench 2mm Polybench_2mm\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench 3mm Polybench_3mm\", \"value\": 1.795, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/3mm\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/3mm.csv\", \"--size=512\"], \"env\": {}, \"stdout\": [\"Polybench_3mm\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"512\", \"0.001794\", \"0.001795\", \"0.001789\", \"0.001789 0.001795 0.001800\", \"0.000005\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.006658328118479366, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench 3mm Polybench_3mm\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Atax Polybench_Atax\", \"value\": 7.054, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/atax\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Atax.csv\", \"--size=8192\"], \"env\": {}, \"stdout\": [\"Polybench_Atax\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"8192\", \"0.007050\", \"0.007054\", \"0.007012\", \"0.007012 0.007054 0.007085\", \"0.000037\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.013051181300301617, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Atax Polybench_Atax\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench Kmeans Kmeans_fp32\", \"value\": 16.42, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/kmeans\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/Kmeans.csv\", \"--size=700000000\"], \"env\": {}, \"stdout\": [\"Kmeans_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"700000000\", \"0.016419\", \"0.016420\", \"0.016410\", \"0.016410 0.016420 0.016427\", \"0.000009\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0017320508075689429, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench Kmeans Kmeans_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench LinearRegressionCoeff LinearRegressionCoeff_fp32\", \"value\": 972.303, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/lin_reg_coeff\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/LinearRegressionCoeff.csv\", \"--size=1638400000\"], \"env\": {}, \"stdout\": [\"LinearRegressionCoeff_fp32\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"1638400000\", \"0.964809\", \"0.972303\", \"0.946573\", \"0.946573 0.972303 0.975552\", \"0.015876\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 12.175671665251118, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench LinearRegressionCoeff LinearRegressionCoeff_fp32\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"SYCL-Bench MolecularDynamics MolecularDynamics\", \"value\": 0.030000000000000002, \"command\": [\"/home/test-user/ur_bench_workdir/sycl-bench-build/mol_dyn\", \"--warmup-run\", \"--num-runs=3\", \"--output=/home/test-user/ur_bench_workdir/MolecularDynamics.csv\", \"--size=8196\"], \"env\": {}, \"stdout\": [\"MolecularDynamics\", \"PASS\", \"Intel(R) Data Center GPU Max 1100\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"256\", \"8196\", \"0.000039\", \"0.000030\", \"0.000028\", \"0.000028 0.000030 0.000059\", \"0.000017\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"LLVM (Intel DPC++)\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\", \"N/A\"], \"passed\": true, \"unit\": \"ms\", \"stddev\": 0.0, \"git_url\": \"https://github.com/unisa-hpc/sycl-bench.git\", \"git_hash\": \"31fc70be6266193c4ba60eb1fe3ce26edee4ca5b\", \"name\": \"SYCL-Bench MolecularDynamics MolecularDynamics\", \"lower_is_better\": true, \"suite\": \"SYCL-Bench\"}, {\"label\": \"llama.cpp DeepSeek-R1-Distill-Qwen-1.5B-Q4_0.gguf Prompt Processing Batched 2048\", \"value\": 3827.988171, \"command\": [\"/home/test-user/ur_bench_workdir/llamacpp-build/bin/llama-bench\", \"--output\", \"csv\", \"-n\", \"128\", \"-p\", \"512\", \"-pg\", \"0,0\", \"-sm\", \"none\", \"-ngl\", \"99\", \"--numa\", \"isolate\", \"-t\", \"8\", \"--mmap\", \"0\", \"--model\", \"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\"], \"env\": {}, \"stdout\": \"build_commit,build_number,cpu_info,gpu_info,backends,model_filename,model_type,model_size,model_n_params,n_batch,n_ubatch,n_threads,cpu_mask,cpu_strict,poll,type_k,type_v,n_gpu_layers,split_mode,main_gpu,no_kv_offload,flash_attn,tensor_split,use_mmap,embeddings,n_prompt,n_gen,test_time,avg_ns,stddev_ns,avg_ts,stddev_ts\\n\\\"916c83bf\\\",\\\"5061\\\",\\\"INTEL(R) XEON(R) PLATINUM 8580\\\",\\\"Intel(R) Data Center GPU Max 1100\\\",\\\"SYCL\\\",\\\"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\\\",\\\"qwen2 1.5B Q4_0\\\",\\\"1060276736\\\",\\\"1777088000\\\",\\\"2048\\\",\\\"512\\\",\\\"8\\\",\\\"0x0\\\",\\\"0\\\",\\\"50\\\",\\\"f16\\\",\\\"f16\\\",\\\"99\\\",\\\"none\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0.00\\\",\\\"0\\\",\\\"0\\\",\\\"512\\\",\\\"0\\\",\\\"2025-06-09T00:54:54Z\\\",\\\"133751743\\\",\\\"65831\\\",\\\"3827.988171\\\",\\\"1.824981\\\"\\n\\\"916c83bf\\\",\\\"5061\\\",\\\"INTEL(R) XEON(R) PLATINUM 8580\\\",\\\"Intel(R) Data Center GPU Max 1100\\\",\\\"SYCL\\\",\\\"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\\\",\\\"qwen2 1.5B Q4_0\\\",\\\"1060276736\\\",\\\"1777088000\\\",\\\"2048\\\",\\\"512\\\",\\\"8\\\",\\\"0x0\\\",\\\"0\\\",\\\"50\\\",\\\"f16\\\",\\\"f16\\\",\\\"99\\\",\\\"none\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0.00\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"128\\\",\\\"2025-06-09T00:54:55Z\\\",\\\"1275015659\\\",\\\"5232559\\\",\\\"100.392269\\\",\\\"0.409759\\\"\\n\", \"passed\": true, \"unit\": \"token/s\", \"stddev\": 3.170929581790987, \"git_url\": \"https://github.com/ggerganov/llama.cpp\", \"git_hash\": \"916c83bfe7f8b08ada609c3b8e583cf5301e594b\", \"name\": \"llama.cpp DeepSeek-R1-Distill-Qwen-1.5B-Q4_0.gguf Prompt Processing Batched 2048\", \"lower_is_better\": false, \"suite\": \"llama.cpp bench\"}, {\"label\": \"llama.cpp DeepSeek-R1-Distill-Qwen-1.5B-Q4_0.gguf Text Generation Batched 2048\", \"value\": 100.385399, \"command\": [\"/home/test-user/ur_bench_workdir/llamacpp-build/bin/llama-bench\", \"--output\", \"csv\", \"-n\", \"128\", \"-p\", \"512\", \"-pg\", \"0,0\", \"-sm\", \"none\", \"-ngl\", \"99\", \"--numa\", \"isolate\", \"-t\", \"8\", \"--mmap\", \"0\", \"--model\", \"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\"], \"env\": {}, \"stdout\": \"build_commit,build_number,cpu_info,gpu_info,backends,model_filename,model_type,model_size,model_n_params,n_batch,n_ubatch,n_threads,cpu_mask,cpu_strict,poll,type_k,type_v,n_gpu_layers,split_mode,main_gpu,no_kv_offload,flash_attn,tensor_split,use_mmap,embeddings,n_prompt,n_gen,test_time,avg_ns,stddev_ns,avg_ts,stddev_ts\\n\\\"916c83bf\\\",\\\"5061\\\",\\\"INTEL(R) XEON(R) PLATINUM 8580\\\",\\\"Intel(R) Data Center GPU Max 1100\\\",\\\"SYCL\\\",\\\"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\\\",\\\"qwen2 1.5B Q4_0\\\",\\\"1060276736\\\",\\\"1777088000\\\",\\\"2048\\\",\\\"512\\\",\\\"8\\\",\\\"0x0\\\",\\\"0\\\",\\\"50\\\",\\\"f16\\\",\\\"f16\\\",\\\"99\\\",\\\"none\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0.00\\\",\\\"0\\\",\\\"0\\\",\\\"512\\\",\\\"0\\\",\\\"2025-06-09T00:54:46Z\\\",\\\"133867910\\\",\\\"40694\\\",\\\"3824.665904\\\",\\\"1.089969\\\"\\n\\\"916c83bf\\\",\\\"5061\\\",\\\"INTEL(R) XEON(R) PLATINUM 8580\\\",\\\"Intel(R) Data Center GPU Max 1100\\\",\\\"SYCL\\\",\\\"/home/test-user/ur_bench_workdir/models/deepseek-r1-distill-qwen-1.5b-q4_0.gguf\\\",\\\"qwen2 1.5B Q4_0\\\",\\\"1060276736\\\",\\\"1777088000\\\",\\\"2048\\\",\\\"512\\\",\\\"8\\\",\\\"0x0\\\",\\\"0\\\",\\\"50\\\",\\\"f16\\\",\\\"f16\\\",\\\"99\\\",\\\"none\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"0.00\\\",\\\"0\\\",\\\"0\\\",\\\"0\\\",\\\"128\\\",\\\"2025-06-09T00:54:47Z\\\",\\\"1275106778\\\",\\\"5794903\\\",\\\"100.385399\\\",\\\"0.453549\\\"\\n\", \"passed\": true, \"unit\": \"token/s\", \"stddev\": 0.125496572197546, \"git_url\": \"https://github.com/ggerganov/llama.cpp\", \"git_hash\": \"916c83bfe7f8b08ada609c3b8e583cf5301e594b\", \"name\": \"llama.cpp DeepSeek-R1-Distill-Qwen-1.5B-Q4_0.gguf Text Generation Batched 2048\", \"lower_is_better\": false, \"suite\": \"llama.cpp bench\"}, {\"label\": \"gromacs-0006-pme-graphs\", \"value\": 1.179, \"command\": [\"/home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\", \"mdrun\", \"-s\", \"/home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr\", \"-nb\", \"gpu\", \"-update\", \"gpu\", \"-bonded\", \"gpu\", \"-ntmpi\", \"1\", \"-ntomp\", \"1\", \"-nobackup\", \"-noconfout\", \"-nstlist\", \"100\", \"-pin\", \"on\", \"-resethway\", \"-pme\", \"gpu\", \"-pmefft\", \"gpu\", \"-notunepme\"], \"env\": {\"SYCL_CACHE_PERSISTENT\": \"1\", \"GMX_CUDA_GRAPH\": \"1\"}, \"stdout\": \"          :-) GROMACS - gmx mdrun, 2025.2-dev-20250512-0eaa03516a (-:\\n\\nExecutable:   /home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\\nData prefix:  /home/test-user/ur_bench_workdir/gromacs-repo (source tree)\\nWorking dir:  /home/test-user/ur_bench_workdir/bcwd/bcwd\\nCommand line:\\n  gmx mdrun -s /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr -nb gpu -update gpu -bonded gpu -ntmpi 1 -ntomp 1 -nobackup -noconfout -nstlist 100 -pin on -resethway -pme gpu -pmefft gpu -notunepme\\n\\nReading file /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr, VERSION 2025.2-dev-20250512-0eaa03516a (single precision)\\nChanging nstlist from 10 to 100, rlist from 0.903 to 1.118\\n\\nGMX_CUDA_GRAPH environment variable is detected. The experimental CUDA Graphs feature will be used if run conditions allow.\\n\\n1 GPU selected for this run.\\nMapping of GPU IDs to the 2 GPU tasks in the 1 rank on this node:\\n  PP:0,PME:0\\nPP tasks will do (non-perturbed) short-ranged and most bonded interactions on the GPU\\nPP task will update and constrain coordinates on the GPU\\nPME tasks will do all aspects on the GPU\\nCUDA Graphs will be used, provided there are no CPU force computations.\\nUsing 1 MPI thread\\n\\nOverriding thread affinity set outside gmx mdrun\\nstarting mdrun 'ethanol in water'\\n10000 steps,     20.0 ps.\\n\\nstep 5000: resetting all time and cycle counters\\n\\nNOTE: 10 % of the run time was spent in pair search,\\n      you might want to increase nstlist (this has no effect on accuracy)\\n\\n               Core t (s)   Wall t (s)        (%)\\n       Time:        1.179        1.179      100.0\\n                 (ns/day)    (hour/ns)\\nPerformance:      733.172        0.033\\n\\nGROMACS reminds you: \\\"If you don't know what you're doing, use a (M)BAR-based method\\\" (Erik Lindahl)\\n\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.002645751311064635, \"git_url\": \"https://gitlab.com/gromacs/gromacs.git\", \"git_hash\": \"v2025.2\", \"name\": \"gromacs-0006-pme-graphs\", \"lower_is_better\": true, \"suite\": \"Gromacs Bench\"}, {\"label\": \"gromacs-0006-pme-eager\", \"value\": 1.112, \"command\": [\"/home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\", \"mdrun\", \"-s\", \"/home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr\", \"-nb\", \"gpu\", \"-update\", \"gpu\", \"-bonded\", \"gpu\", \"-ntmpi\", \"1\", \"-ntomp\", \"1\", \"-nobackup\", \"-noconfout\", \"-nstlist\", \"100\", \"-pin\", \"on\", \"-resethway\", \"-pme\", \"gpu\", \"-pmefft\", \"gpu\", \"-notunepme\"], \"env\": {\"SYCL_CACHE_PERSISTENT\": \"1\"}, \"stdout\": \"          :-) GROMACS - gmx mdrun, 2025.2-dev-20250512-0eaa03516a (-:\\n\\nExecutable:   /home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\\nData prefix:  /home/test-user/ur_bench_workdir/gromacs-repo (source tree)\\nWorking dir:  /home/test-user/ur_bench_workdir/bcwd/bcwd\\nCommand line:\\n  gmx mdrun -s /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr -nb gpu -update gpu -bonded gpu -ntmpi 1 -ntomp 1 -nobackup -noconfout -nstlist 100 -pin on -resethway -pme gpu -pmefft gpu -notunepme\\n\\nReading file /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/pme.tpr, VERSION 2025.2-dev-20250512-0eaa03516a (single precision)\\nChanging nstlist from 10 to 100, rlist from 0.903 to 1.118\\n\\n1 GPU selected for this run.\\nMapping of GPU IDs to the 2 GPU tasks in the 1 rank on this node:\\n  PP:0,PME:0\\nPP tasks will do (non-perturbed) short-ranged and most bonded interactions on the GPU\\nPP task will update and constrain coordinates on the GPU\\nPME tasks will do all aspects on the GPU\\nUsing 1 MPI thread\\n\\nOverriding thread affinity set outside gmx mdrun\\nstarting mdrun 'ethanol in water'\\n10000 steps,     20.0 ps.\\n\\nstep 5000: resetting all time and cycle counters\\n\\nNOTE: 11 % of the run time was spent in pair search,\\n      you might want to increase nstlist (this has no effect on accuracy)\\n\\n               Core t (s)   Wall t (s)        (%)\\n       Time:        1.112        1.112      100.0\\n                 (ns/day)    (hour/ns)\\nPerformance:      777.338        0.031\\n\\nGROMACS reminds you: \\\"Science adjusts its views based on what's observed. Faith is the denial of observation so that belief can be preserved.\\\" (Tim Minchin)\\n\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.005291502622129186, \"git_url\": \"https://gitlab.com/gromacs/gromacs.git\", \"git_hash\": \"v2025.2\", \"name\": \"gromacs-0006-pme-eager\", \"lower_is_better\": true, \"suite\": \"Gromacs Bench\"}, {\"label\": \"gromacs-0006-rf-graphs\", \"value\": 1.761, \"command\": [\"/home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\", \"mdrun\", \"-s\", \"/home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr\", \"-nb\", \"gpu\", \"-update\", \"gpu\", \"-bonded\", \"gpu\", \"-ntmpi\", \"1\", \"-ntomp\", \"1\", \"-nobackup\", \"-noconfout\", \"-nstlist\", \"100\", \"-pin\", \"on\", \"-resethway\"], \"env\": {\"SYCL_CACHE_PERSISTENT\": \"1\", \"GMX_CUDA_GRAPH\": \"1\"}, \"stdout\": \"          :-) GROMACS - gmx mdrun, 2025.2-dev-20250512-0eaa03516a (-:\\n\\nExecutable:   /home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\\nData prefix:  /home/test-user/ur_bench_workdir/gromacs-repo (source tree)\\nWorking dir:  /home/test-user/ur_bench_workdir/bcwd/bcwd\\nCommand line:\\n  gmx mdrun -s /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr -nb gpu -update gpu -bonded gpu -ntmpi 1 -ntomp 1 -nobackup -noconfout -nstlist 100 -pin on -resethway\\n\\nReading file /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr, VERSION 2025.2-dev-20250512-0eaa03516a (single precision)\\n\\nWARNING: Can not increase nstlist because the box is too small\\n\\nGMX_CUDA_GRAPH environment variable is detected. The experimental CUDA Graphs feature will be used if run conditions allow.\\n\\n1 GPU selected for this run.\\nMapping of GPU IDs to the 1 GPU task in the 1 rank on this node:\\n  PP:0\\nPP tasks will do (non-perturbed) short-ranged and most bonded interactions on the GPU\\nPP task will update and constrain coordinates on the GPU\\nCUDA Graphs will be used, provided there are no CPU force computations.\\nUsing 1 MPI thread\\n\\nOverriding thread affinity set outside gmx mdrun\\nstarting mdrun 'ethanol in water'\\n10000 steps,     20.0 ps.\\n\\nstep 5000: resetting all time and cycle counters\\n\\nNOTE: 51 % of the run time was spent in pair search,\\n      you might want to increase nstlist (this has no effect on accuracy)\\n\\n               Core t (s)   Wall t (s)        (%)\\n       Time:        1.761        1.761      100.0\\n                 (ns/day)    (hour/ns)\\nPerformance:      490.820        0.049\\n\\nGROMACS reminds you: \\\"For those who want some proof that physicists are human, the proof is in the idiocy of all the different units which they use for measuring energy.\\\" (Richard Feynman)\\n\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.004041451884327448, \"git_url\": \"https://gitlab.com/gromacs/gromacs.git\", \"git_hash\": \"v2025.2\", \"name\": \"gromacs-0006-rf-graphs\", \"lower_is_better\": true, \"suite\": \"Gromacs Bench\"}, {\"label\": \"gromacs-0006-rf-eager\", \"value\": 1.605, \"command\": [\"/home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\", \"mdrun\", \"-s\", \"/home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr\", \"-nb\", \"gpu\", \"-update\", \"gpu\", \"-bonded\", \"gpu\", \"-ntmpi\", \"1\", \"-ntomp\", \"1\", \"-nobackup\", \"-noconfout\", \"-nstlist\", \"100\", \"-pin\", \"on\", \"-resethway\"], \"env\": {\"SYCL_CACHE_PERSISTENT\": \"1\"}, \"stdout\": \"          :-) GROMACS - gmx mdrun, 2025.2-dev-20250512-0eaa03516a (-:\\n\\nExecutable:   /home/test-user/ur_bench_workdir/gromacs-build/bin/gmx\\nData prefix:  /home/test-user/ur_bench_workdir/gromacs-repo (source tree)\\nWorking dir:  /home/test-user/ur_bench_workdir/bcwd/bcwd\\nCommand line:\\n  gmx mdrun -s /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr -nb gpu -update gpu -bonded gpu -ntmpi 1 -ntomp 1 -nobackup -noconfout -nstlist 100 -pin on -resethway\\n\\nReading file /home/test-user/ur_bench_workdir/grappa-1.5k-6.1M_rc0.9/0006/rf.tpr, VERSION 2025.2-dev-20250512-0eaa03516a (single precision)\\n\\nWARNING: Can not increase nstlist because the box is too small\\n\\n1 GPU selected for this run.\\nMapping of GPU IDs to the 1 GPU task in the 1 rank on this node:\\n  PP:0\\nPP tasks will do (non-perturbed) short-ranged and most bonded interactions on the GPU\\nPP task will update and constrain coordinates on the GPU\\nUsing 1 MPI thread\\n\\nOverriding thread affinity set outside gmx mdrun\\nstarting mdrun 'ethanol in water'\\n10000 steps,     20.0 ps.\\n\\nstep 5000: resetting all time and cycle counters\\n\\nNOTE: 56 % of the run time was spent in pair search,\\n      you might want to increase nstlist (this has no effect on accuracy)\\n\\n               Core t (s)   Wall t (s)        (%)\\n       Time:        1.605        1.605      100.0\\n                 (ns/day)    (hour/ns)\\nPerformance:      538.364        0.045\\n\\nGROMACS reminds you: \\\"Ease Myself Into the Body Bag\\\" (P.J. Harvey)\\n\\n\", \"passed\": true, \"unit\": \"s\", \"stddev\": 0.004041451884327393, \"git_url\": \"https://gitlab.com/gromacs/gromacs.git\", \"git_hash\": \"v2025.2\", \"name\": \"gromacs-0006-rf-eager\", \"lower_is_better\": true, \"suite\": \"Gromacs Bench\"}], \"name\": \"Baseline_PVC_L0\", \"hostname\": \"dnp_intel_06_01\", \"git_hash\": \"43b3d42e2b\", \"github_repo\": \"intel/llvm\", \"date\": \"2025-06-09T00:55:45.845193+00:00\", \"compute_runtime\": \"25.13.33276.18\"}"