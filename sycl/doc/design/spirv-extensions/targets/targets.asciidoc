
== Targets

[%header,cols="8,3,10"]
|===
|Name
|Value
|Description

a|
[source]
----
arm
arm32 = arm
----
| 1
| ARM (32-bit)

a|
[source]
----
arm64
aarch64 = arm64
----
| 2
| ARM (64-bit)

a|
[source]
----
x86
----
| 3
| x86 (32-bit)

a|
[source]
----
x86_64
----
| 4
| x86 (64-bit)

a|
[source]
----
riscv32
----
| 5
| RISC-V (32-bit)

a|
[source]
----
riscv64
----
| 6
| RISC-V (64-bit)

a|
[source]
----
nvptx
----
| 7
| NVIDIA PTX (32-bit)

a|
[source]
----
nvptx64
----
| 8
| NVIDIA PTX (64-bit)

a|
[source]
----
amdgcn
----
| 9
| AMD GCN
|===

== Features

[%header,cols="8,3,3,10"]
|===
|Name
|Target
|Value
|Description

4+^|*Target: arm, arm32 (1)*

a|
[source]
----
neon
----
| 1
| 1
| Enable NEON instructions

4+^|*Target: arm64, aarch64 (2)*

a|
[source]
----
fp8
----
| 2
| 1
| Enable FP8 instructions

a|
[source]
----
fp8dot2
----
| 2
| 2
| Enable FP8 2-way dot product instructions

a|
[source]
----
fp8dot4
----
| 2
| 3
| Enable FP8 4-way dot product instructions

a|
[source]
----
neon
----
| 2
| 4
| Enable NEON instructions

a|
[source]
----
sve
----
| 2
| 5
| Enable SVE instructions

4+^|*Target: x86 (3)*

a|
[source]
----
fma
----
| 3
| 1
| Enable fused three-operand multiply-add

a|
[source]
----
fma4
----
| 3
| 2
| Enable fused four-operand multiply-add

a|
[source]
----
mmx
----
| 3
| 3
| Enable MMX instructions

a|
[source]
----
sse
----
| 3
| 4
| Enable SSE instructions

a|
[source]
----
sse2
----
| 3
| 5
| Enable SSE2 instructions

a|
[source]
----
sse3
----
| 3
| 6
| Enable SSE3 instructions

a|
[source]
----
sse4.1
----
| 3
| 7
| Enable SSE4.1 instructions

a|
[source]
----
sse4.2
----
| 3
| 8
| Enable SSE4.2 instructions

a|
[source]
----
sse4a
----
| 3
| 9
| Enable SSE4a instructions

a|
[source]
----
avx
----
| 3
| 10
| Enable AVX instructions

a|
[source]
----
avx2
----
| 3
| 11
| Enable AVX2 instructions

a|
[source]
----
avx512f
----
| 3
| 12
| Enable AVX512 instructions

4+^|*Target: x86_64 (4)*

a|
[source]
----
fma
----
| 4
| 1
| Enable fused three-operand multiply-add

a|
[source]
----
fma4
----
| 4
| 2
| Enable fused four-operand multiply-add

a|
[source]
----
mmx
----
| 4
| 3
| Enable MMX instructions

a|
[source]
----
sse
----
| 4
| 4
| Enable SSE instructions

a|
[source]
----
sse2
----
| 4
| 5
| Enable SSE2 instructions

a|
[source]
----
sse3
----
| 4
| 6
| Enable SSE3 instructions

a|
[source]
----
sse4.1
----
| 4
| 7
| Enable SSE4.1 instructions

a|
[source]
----
sse4.2
----
| 4
| 8
| Enable SSE4.2 instructions

a|
[source]
----
sse4a
----
| 4
| 9
| Enable SSE4a instructions

a|
[source]
----
avx
----
| 4
| 10
| Enable AVX instructions

a|
[source]
----
avx2
----
| 4
| 11
| Enable AVX2 instructions

a|
[source]
----
avx512f
----
| 4
| 12
| Enable AVX512 instructions

4+^|*Target: riscv32 (5)*

a|
[source]
----
32bit
----
| 5
| 1
| Implements RV32.

a|
[source]
----
64bit
----
| 5
| 2
| Implements RV64.

a|
[source]
----
a
----
| 5
| 3
| 'A' (Atomic Instructions).

a|
[source]
----
auipc-addi-fusion
----
| 5
| 4
| Enable AUIPC+ADDI macrofusion.

a|
[source]
----
b
----
| 5
| 5
| 'B' (the collection of the Zba, Zbb, Zbs extensions).

a|
[source]
----
c
----
| 5
| 6
| 'C' (Compressed Instructions).

a|
[source]
----
conditional-cmv-fusion
----
| 5
| 7
| Enable branch+c.mv fusion.

a|
[source]
----
d
----
| 5
| 8
| 'D' (Double-Precision Floating-Point).

a|
[source]
----
dlen-factor-2
----
| 5
| 9
| Vector unit DLEN(data path width) is half of VLEN.

a|
[source]
----
e
----
| 5
| 10
| Implements RV{32,64}E (provides 16 rather than 32 GPRs).

a|
[source]
----
experimental
----
| 5
| 11
| Experimental intrinsics.

a|
[source]
----
experimental-rva23s64
----
| 5
| 12
| RISC-V experimental-rva23s64 profile.

a|
[source]
----
experimental-rva23u64
----
| 5
| 13
| RISC-V experimental-rva23u64 profile.

a|
[source]
----
experimental-rvb23s64
----
| 5
| 14
| RISC-V experimental-rvb23s64 profile.

a|
[source]
----
experimental-rvb23u64
----
| 5
| 15
| RISC-V experimental-rvb23u64 profile.

a|
[source]
----
experimental-rvm23u32
----
| 5
| 16
| RISC-V experimental-rvm23u32 profile.

a|
[source]
----
experimental-smmpm
----
| 5
| 17
| 'Smmpm' (Machine-level Pointer Masking for M-mode).

a|
[source]
----
experimental-smnpm
----
| 5
| 18
| 'Smnpm' (Machine-level Pointer Masking for next lower privilege mode).

a|
[source]
----
experimental-ssnpm
----
| 5
| 19
| 'Ssnpm' (Supervisor-level Pointer Masking for next lower privilege mode).

a|
[source]
----
experimental-sspm
----
| 5
| 20
| 'Sspm' (Indicates Supervisor-mode Pointer Masking).

a|
[source]
----
experimental-ssqosid
----
| 5
| 21
| 'Ssqosid' (Quality-of-Service (QoS) Identifiers).

a|
[source]
----
experimental-supm
----
| 5
| 22
| 'Supm' (Indicates User-mode Pointer Masking).

a|
[source]
----
experimental-zacas
----
| 5
| 23
| 'Zacas' (Atomic Compare-And-Swap Instructions).

a|
[source]
----
experimental-zalasr
----
| 5
| 24
| 'Zalasr' (Load-Acquire and Store-Release Instructions).

a|
[source]
----
experimental-zicfilp
----
| 5
| 25
| 'Zicfilp' (Landing pad).

a|
[source]
----
experimental-zicfiss
----
| 5
| 26
| 'Zicfiss' (Shadow stack).

a|
[source]
----
f
----
| 5
| 27
| 'F' (Single-Precision Floating-Point).

a|
[source]
----
forced-atomics
----
| 5
| 28
| Assume that lock-free native-width atomics are available.

a|
[source]
----
forced-sw-shadow-stack
----
| 5
| 29
| Implement shadow stack with software..

a|
[source]
----
h
----
| 5
| 30
| 'H' (Hypervisor).

a|
[source]
----
i
----
| 5
| 31
| 'I' (Base Integer Instruction Set).

a|
[source]
----
ld-add-fusion
----
| 5
| 32
| Enable LD+ADD macrofusion.

a|
[source]
----
lui-addi-fusion
----
| 5
| 33
| Enable LUI+ADDI macro fusion.

a|
[source]
----
m
----
| 5
| 34
| 'M' (Integer Multiplication and Division).

a|
[source]
----
no-default-unroll
----
| 5
| 35
| Disable default unroll preference..

a|
[source]
----
no-rvc-hints
----
| 5
| 36
| Disable RVC Hint Instructions..

a|
[source]
----
no-sink-splat-operands
----
| 5
| 37
| Disable sink splat operands to enable .vx, .vf,.wx, and .wf instructions.

a|
[source]
----
no-trailing-seq-cst-fence
----
| 5
| 38
| Disable trailing fence for seq-cst store..

a|
[source]
----
optimized-zero-stride-load
----
| 5
| 39
| Optimized (perform fewer memory operations)zero-stride vector load.

a|
[source]
----
predictable-select-expensive
----
| 5
| 40
| Prefer likely predicted branches over selects.

a|
[source]
----
prefer-w-inst
----
| 5
| 41
| Prefer instructions with W suffix.

a|
[source]
----
relax
----
| 5
| 42
| Enable Linker relaxation..

a|
[source]
----
reserve-x1
----
| 5
| 43
| Reserve X1.

a|
[source]
----
reserve-x10
----
| 5
| 44
| Reserve X10.

a|
[source]
----
reserve-x11
----
| 5
| 45
| Reserve X11.

a|
[source]
----
reserve-x12
----
| 5
| 46
| Reserve X12.

a|
[source]
----
reserve-x13
----
| 5
| 47
| Reserve X13.

a|
[source]
----
reserve-x14
----
| 5
| 48
| Reserve X14.

a|
[source]
----
reserve-x15
----
| 5
| 49
| Reserve X15.

a|
[source]
----
reserve-x16
----
| 5
| 50
| Reserve X16.

a|
[source]
----
reserve-x17
----
| 5
| 51
| Reserve X17.

a|
[source]
----
reserve-x18
----
| 5
| 52
| Reserve X18.

a|
[source]
----
reserve-x19
----
| 5
| 53
| Reserve X19.

a|
[source]
----
reserve-x2
----
| 5
| 54
| Reserve X2.

a|
[source]
----
reserve-x20
----
| 5
| 55
| Reserve X20.

a|
[source]
----
reserve-x21
----
| 5
| 56
| Reserve X21.

a|
[source]
----
reserve-x22
----
| 5
| 57
| Reserve X22.

a|
[source]
----
reserve-x23
----
| 5
| 58
| Reserve X23.

a|
[source]
----
reserve-x24
----
| 5
| 59
| Reserve X24.

a|
[source]
----
reserve-x25
----
| 5
| 60
| Reserve X25.

a|
[source]
----
reserve-x26
----
| 5
| 61
| Reserve X26.

a|
[source]
----
reserve-x27
----
| 5
| 62
| Reserve X27.

a|
[source]
----
reserve-x28
----
| 5
| 63
| Reserve X28.

a|
[source]
----
reserve-x29
----
| 5
| 64
| Reserve X29.

a|
[source]
----
reserve-x3
----
| 5
| 65
| Reserve X3.

a|
[source]
----
reserve-x30
----
| 5
| 66
| Reserve X30.

a|
[source]
----
reserve-x31
----
| 5
| 67
| Reserve X31.

a|
[source]
----
reserve-x4
----
| 5
| 68
| Reserve X4.

a|
[source]
----
reserve-x5
----
| 5
| 69
| Reserve X5.

a|
[source]
----
reserve-x6
----
| 5
| 70
| Reserve X6.

a|
[source]
----
reserve-x7
----
| 5
| 71
| Reserve X7.

a|
[source]
----
reserve-x8
----
| 5
| 72
| Reserve X8.

a|
[source]
----
reserve-x9
----
| 5
| 73
| Reserve X9.

a|
[source]
----
rva20s64
----
| 5
| 74
| RISC-V rva20s64 profile.

a|
[source]
----
rva20u64
----
| 5
| 75
| RISC-V rva20u64 profile.

a|
[source]
----
rva22s64
----
| 5
| 76
| RISC-V rva22s64 profile.

a|
[source]
----
rva22u64
----
| 5
| 77
| RISC-V rva22u64 profile.

a|
[source]
----
rvi20u32
----
| 5
| 78
| RISC-V rvi20u32 profile.

a|
[source]
----
rvi20u64
----
| 5
| 79
| RISC-V rvi20u64 profile.

a|
[source]
----
save-restore
----
| 5
| 80
| Enable save/restore..

a|
[source]
----
shcounterenw
----
| 5
| 81
| 'Shcounterenw' (Support writeable hcounteren enable bit for any hpmcounter that is not read-only zero).

a|
[source]
----
shgatpa
----
| 5
| 82
| 'Sgatpa' (SvNNx4 mode supported for all modes supported by satp, as well as Bare).

a|
[source]
----
shifted-zextw-fusion
----
| 5
| 83
| Enable SLLI+SRLI to be fused when computing (shifted) word zero extension.

a|
[source]
----
short-forward-branch-opt
----
| 5
| 84
| Enable short forward branch optimization.

a|
[source]
----
shtvala
----
| 5
| 85
| 'Shtvala' (htval provides all needed values).

a|
[source]
----
shvsatpa
----
| 5
| 86
| 'Svsatpa' (vsatp supports all modes supported by satp).

a|
[source]
----
shvstvala
----
| 5
| 87
| 'Shvstvala' (vstval provides all needed values).

a|
[source]
----
shvstvecd
----
| 5
| 88
| 'Shvstvecd' (vstvec supports Direct mode).

a|
[source]
----
sifive7
----
| 5
| 89
| SiFive 7-Series processors.

a|
[source]
----
smaia
----
| 5
| 90
| 'Smaia' (Advanced Interrupt Architecture Machine Level).

a|
[source]
----
smcdeleg
----
| 5
| 91
| 'Smcdeleg' (Counter Delegation Machine Level).

a|
[source]
----
smcsrind
----
| 5
| 92
| 'Smcsrind' (Indirect CSR Access Machine Level).

a|
[source]
----
smepmp
----
| 5
| 93
| 'Smepmp' (Enhanced Physical Memory Protection).

a|
[source]
----
smstateen
----
| 5
| 94
| 'Smstateen' (Machine-mode view of the state-enable extension).

a|
[source]
----
ssaia
----
| 5
| 95
| 'Ssaia' (Advanced Interrupt Architecture Supervisor Level).

a|
[source]
----
ssccfg
----
| 5
| 96
| 'Ssccfg' (Counter Configuration Supervisor Level).

a|
[source]
----
ssccptr
----
| 5
| 97
| 'Ssccptr' (Main memory supports page table reads).

a|
[source]
----
sscofpmf
----
| 5
| 98
| 'Sscofpmf' (Count Overflow and Mode-Based Filtering).

a|
[source]
----
sscounterenw
----
| 5
| 99
| 'Sscounterenw' (Support writeable scounteren enable bit for any hpmcounter that is not read-only zero).

a|
[source]
----
sscsrind
----
| 5
| 100
| 'Sscsrind' (Indirect CSR Access Supervisor Level).

a|
[source]
----
ssstateen
----
| 5
| 101
| 'Ssstateen' (Supervisor-mode view of the state-enable extension).

a|
[source]
----
ssstrict
----
| 5
| 102
| 'Ssstrict' (No non-conforming extensions are present).

a|
[source]
----
sstc
----
| 5
| 103
| 'Sstc' (Supervisor-mode timer interrupts).

a|
[source]
----
sstvala
----
| 5
| 104
| 'Sstvala' (stval provides all needed values).

a|
[source]
----
sstvecd
----
| 5
| 105
| 'Sstvecd' (stvec supports Direct mode).

a|
[source]
----
ssu64xl
----
| 5
| 106
| 'Ssu64xl' (UXLEN=64 supported).

a|
[source]
----
svade
----
| 5
| 107
| 'Svade' (Raise exceptions on improper A/D bits).

a|
[source]
----
svadu
----
| 5
| 108
| 'Svadu' (Hardware A/D updates).

a|
[source]
----
svbare
----
| 5
| 109
| 'Svbare' $(satp mode Bare supported).

a|
[source]
----
svinval
----
| 5
| 110
| 'Svinval' (Fine-Grained Address-Translation Cache Invalidation).

a|
[source]
----
svnapot
----
| 5
| 111
| 'Svnapot' (NAPOT Translation Contiguity).

a|
[source]
----
svpbmt
----
| 5
| 112
| 'Svpbmt' (Page-Based Memory Types).

a|
[source]
----
tagged-globals
----
| 5
| 113
| Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.

a|
[source]
----
unaligned-scalar-mem
----
| 5
| 114
| Has reasonably performant unaligned scalar loads and stores.

a|
[source]
----
unaligned-vector-mem
----
| 5
| 115
| Has reasonably performant unaligned vector loads and stores.

a|
[source]
----
use-postra-scheduler
----
| 5
| 116
| Schedule again after register allocation.

a|
[source]
----
v
----
| 5
| 117
| 'V' (Vector Extension for Application Processors).

a|
[source]
----
ventana-veyron
----
| 5
| 118
| Ventana Veyron-Series processors.

a|
[source]
----
xcvalu
----
| 5
| 119
| 'XCValu' (CORE-V ALU Operations).

a|
[source]
----
xcvbi
----
| 5
| 120
| 'XCVbi' (CORE-V Immediate Branching).

a|
[source]
----
xcvbitmanip
----
| 5
| 121
| 'XCVbitmanip' (CORE-V Bit Manipulation).

a|
[source]
----
xcvelw
----
| 5
| 122
| 'XCVelw' (CORE-V Event Load Word).

a|
[source]
----
xcvmac
----
| 5
| 123
| 'XCVmac' (CORE-V Multiply-Accumulate).

a|
[source]
----
xcvmem
----
| 5
| 124
| 'XCVmem' (CORE-V Post-incrementing Load & Store).

a|
[source]
----
xcvsimd
----
| 5
| 125
| 'XCVsimd' (CORE-V SIMD ALU).

a|
[source]
----
xsfcease
----
| 5
| 126
| 'XSfcease' (SiFive sf.cease Instruction).

a|
[source]
----
xsfvcp
----
| 5
| 127
| 'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions).

a|
[source]
----
xsfvfnrclipxfqf
----
| 5
| 128
| 'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions).

a|
[source]
----
xsfvfwmaccqqq
----
| 5
| 129
| 'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4)).

a|
[source]
----
xsfvqmaccdod
----
| 5
| 130
| 'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2)).

a|
[source]
----
xsfvqmaccqoq
----
| 5
| 131
| 'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4)).

a|
[source]
----
xsifivecdiscarddlone
----
| 5
| 132
| 'XSiFivecdiscarddlone' (SiFive sf.cdiscard.d.l1 Instruction).

a|
[source]
----
xsifivecflushdlone
----
| 5
| 133
| 'XSiFivecflushdlone' (SiFive sf.cflush.d.l1 Instruction).

a|
[source]
----
xtheadba
----
| 5
| 134
| 'XTHeadBa' (T-Head address calculation instructions).

a|
[source]
----
xtheadbb
----
| 5
| 135
| 'XTHeadBb' (T-Head basic bit-manipulation instructions).

a|
[source]
----
xtheadbs
----
| 5
| 136
| 'XTHeadBs' (T-Head single-bit instructions).

a|
[source]
----
xtheadcmo
----
| 5
| 137
| 'XTHeadCmo' (T-Head cache management instructions).

a|
[source]
----
xtheadcondmov
----
| 5
| 138
| 'XTHeadCondMov' (T-Head conditional move instructions).

a|
[source]
----
xtheadfmemidx
----
| 5
| 139
| 'XTHeadFMemIdx' (T-Head FP Indexed Memory Operations).

a|
[source]
----
xtheadmac
----
| 5
| 140
| 'XTHeadMac' (T-Head Multiply-Accumulate Instructions).

a|
[source]
----
xtheadmemidx
----
| 5
| 141
| 'XTHeadMemIdx' (T-Head Indexed Memory Operations).

a|
[source]
----
xtheadmempair
----
| 5
| 142
| 'XTHeadMemPair' (T-Head two-GPR Memory Operations).

a|
[source]
----
xtheadsync
----
| 5
| 143
| 'XTHeadSync' (T-Head multicore synchronization instructions).

a|
[source]
----
xtheadvdot
----
| 5
| 144
| 'XTHeadVdot' (T-Head Vector Extensions for Dot).

a|
[source]
----
xventanacondops
----
| 5
| 145
| 'XVentanaCondOps' (Ventana Conditional Ops).

a|
[source]
----
xwchc
----
| 5
| 146
| 'Xwchc' (WCH/QingKe additional compressed opcodes).

a|
[source]
----
za128rs
----
| 5
| 147
| 'Za128rs' (Reservation Set Size of at Most 128 Bytes).

a|
[source]
----
za64rs
----
| 5
| 148
| 'Za64rs' (Reservation Set Size of at Most 64 Bytes).

a|
[source]
----
zaamo
----
| 5
| 149
| 'Zaamo' (Atomic Memory Operations).

a|
[source]
----
zabha
----
| 5
| 150
| 'Zabha' (Byte and Halfword Atomic Memory Operations).

a|
[source]
----
zalrsc
----
| 5
| 151
| 'Zalrsc' (Load-Reserved/Store-Conditional).

a|
[source]
----
zama16b
----
| 5
| 152
| 'Zama16b' (Atomic 16-byte misaligned loads, stores and AMOs).

a|
[source]
----
zawrs
----
| 5
| 153
| 'Zawrs' (Wait on Reservation Set).

a|
[source]
----
zba
----
| 5
| 154
| 'Zba' (Address Generation Instructions).

a|
[source]
----
zbb
----
| 5
| 155
| 'Zbb' (Basic Bit-Manipulation).

a|
[source]
----
zbc
----
| 5
| 156
| 'Zbc' (Carry-Less Multiplication).

a|
[source]
----
zbkb
----
| 5
| 157
| 'Zbkb' (Bitmanip instructions for Cryptography).

a|
[source]
----
zbkc
----
| 5
| 158
| 'Zbkc' (Carry-less multiply instructions for Cryptography).

a|
[source]
----
zbkx
----
| 5
| 159
| 'Zbkx' (Crossbar permutation instructions).

a|
[source]
----
zbs
----
| 5
| 160
| 'Zbs' (Single-Bit Instructions).

a|
[source]
----
zca
----
| 5
| 161
| 'Zca' (part of the C extension, excluding compressed floating point loads/stores).

a|
[source]
----
zcb
----
| 5
| 162
| 'Zcb' (Compressed basic bit manipulation instructions).

a|
[source]
----
zcd
----
| 5
| 163
| 'Zcd' (Compressed Double-Precision Floating-Point Instructions).

a|
[source]
----
zce
----
| 5
| 164
| 'Zce' (Compressed extensions for microcontrollers).

a|
[source]
----
zcf
----
| 5
| 165
| 'Zcf' (Compressed Single-Precision Floating-Point Instructions).

a|
[source]
----
zcmop
----
| 5
| 166
| 'Zcmop' (Compressed May-Be-Operations).

a|
[source]
----
zcmp
----
| 5
| 167
| 'Zcmp' (sequenced instructions for code-size reduction).

a|
[source]
----
zcmt
----
| 5
| 168
| 'Zcmt' (table jump instructions for code-size reduction).

a|
[source]
----
zdinx
----
| 5
| 169
| 'Zdinx' (Double in Integer).

a|
[source]
----
zexth-fusion
----
| 5
| 170
| Enable SLLI+SRLI to be fused to zero extension of halfword.

a|
[source]
----
zextw-fusion
----
| 5
| 171
| Enable SLLI+SRLI to be fused to zero extension of word.

a|
[source]
----
zfa
----
| 5
| 172
| 'Zfa' (Additional Floating-Point).

a|
[source]
----
zfbfmin
----
| 5
| 173
| 'Zfbfmin' (Scalar BF16 Converts).

a|
[source]
----
zfh
----
| 5
| 174
| 'Zfh' (Half-Precision Floating-Point).

a|
[source]
----
zfhmin
----
| 5
| 175
| 'Zfhmin' (Half-Precision Floating-Point Minimal).

a|
[source]
----
zfinx
----
| 5
| 176
| 'Zfinx' (Float in Integer).

a|
[source]
----
zhinx
----
| 5
| 177
| 'Zhinx' (Half Float in Integer).

a|
[source]
----
zhinxmin
----
| 5
| 178
| 'Zhinxmin' (Half Float in Integer Minimal).

a|
[source]
----
zic64b
----
| 5
| 179
| 'Zic64b' (Cache Block Size Is 64 Bytes).

a|
[source]
----
zicbom
----
| 5
| 180
| 'Zicbom' (Cache-Block Management Instructions).

a|
[source]
----
zicbop
----
| 5
| 181
| 'Zicbop' (Cache-Block Prefetch Instructions).

a|
[source]
----
zicboz
----
| 5
| 182
| 'Zicboz' (Cache-Block Zero Instructions).

a|
[source]
----
ziccamoa
----
| 5
| 183
| 'Ziccamoa' (Main Memory Supports All Atomics in A).

a|
[source]
----
ziccif
----
| 5
| 184
| 'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement).

a|
[source]
----
zicclsm
----
| 5
| 185
| 'Zicclsm' (Main Memory Supports Misaligned Loads/Stores).

a|
[source]
----
ziccrse
----
| 5
| 186
| 'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences).

a|
[source]
----
zicntr
----
| 5
| 187
| 'Zicntr' (Base Counters and Timers).

a|
[source]
----
zicond
----
| 5
| 188
| 'Zicond' (Integer Conditional Operations).

a|
[source]
----
zicsr
----
| 5
| 189
| 'zicsr' (CSRs).

a|
[source]
----
zifencei
----
| 5
| 190
| 'Zifencei' (fence.i).

a|
[source]
----
zihintntl
----
| 5
| 191
| 'Zihintntl' (Non-Temporal Locality Hints).

a|
[source]
----
zihintpause
----
| 5
| 192
| 'Zihintpause' (Pause Hint).

a|
[source]
----
zihpm
----
| 5
| 193
| 'Zihpm' (Hardware Performance Counters).

a|
[source]
----
zimop
----
| 5
| 194
| 'Zimop' (May-Be-Operations).

a|
[source]
----
zk
----
| 5
| 195
| 'Zk' (Standard scalar cryptography extension).

a|
[source]
----
zkn
----
| 5
| 196
| 'Zkn' (NIST Algorithm Suite).

a|
[source]
----
zknd
----
| 5
| 197
| 'Zknd' (NIST Suite: AES Decryption).

a|
[source]
----
zkne
----
| 5
| 198
| 'Zkne' (NIST Suite: AES Encryption).

a|
[source]
----
zknh
----
| 5
| 199
| 'Zknh' (NIST Suite: Hash Function Instructions).

a|
[source]
----
zkr
----
| 5
| 200
| 'Zkr' (Entropy Source Extension).

a|
[source]
----
zks
----
| 5
| 201
| 'Zks' (ShangMi Algorithm Suite).

a|
[source]
----
zksed
----
| 5
| 202
| 'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions).

a|
[source]
----
zksh
----
| 5
| 203
| 'Zksh' (ShangMi Suite: SM3 Hash Function Instructions).

a|
[source]
----
zkt
----
| 5
| 204
| 'Zkt' (Data Independent Execution Latency).

a|
[source]
----
zmmul
----
| 5
| 205
| 'Zmmul' (Integer Multiplication).

a|
[source]
----
ztso
----
| 5
| 206
| 'Ztso' (Memory Model

a|
[source]
----
zvbb
----
| 5
| 207
| 'Zvbb' (Vector basic bit-manipulation instructions).

a|
[source]
----
zvbc
----
| 5
| 208
| 'Zvbc' (Vector Carryless Multiplication).

a|
[source]
----
zve32f
----
| 5
| 209
| 'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension).

a|
[source]
----
zve32x
----
| 5
| 210
| 'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW).

a|
[source]
----
zve64d
----
| 5
| 211
| 'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension).

a|
[source]
----
zve64f
----
| 5
| 212
| 'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension).

a|
[source]
----
zve64x
----
| 5
| 213
| 'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW).

a|
[source]
----
zvfbfmin
----
| 5
| 214
| 'Zvbfmin' (Vector BF16 Converts).

a|
[source]
----
zvfbfwma
----
| 5
| 215
| 'Zvfbfwma' (Vector BF16 widening mul-add).

a|
[source]
----
zvfh
----
| 5
| 216
| 'Zvfh' (Vector Half-Precision Floating-Point).

a|
[source]
----
zvfhmin
----
| 5
| 217
| 'Zvfhmin' (Vector Half-Precision Floating-Point Minimal).

a|
[source]
----
zvkb
----
| 5
| 218
| 'Zvkb' (Vector Bit-manipulation used in Cryptography).

a|
[source]
----
zvkg
----
| 5
| 219
| 'Zvkg' (Vector GCM instructions for Cryptography).

a|
[source]
----
zvkn
----
| 5
| 220
| 'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt').

a|
[source]
----
zvknc
----
| 5
| 221
| 'Zvknc' (shorthand for 'Zvknc' and 'Zvbc').

a|
[source]
----
zvkned
----
| 5
| 222
| 'Zvkned' (Vector AES Encryption & Decryption (Single Round)).

a|
[source]
----
zvkng
----
| 5
| 223
| 'zvkng' (shorthand for 'Zvkn' and 'Zvkg').

a|
[source]
----
zvknha
----
| 5
| 224
| 'Zvknha' (Vector SHA-2 (SHA-256 only)).

a|
[source]
----
zvknhb
----
| 5
| 225
| 'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512)).

a|
[source]
----
zvks
----
| 5
| 226
| 'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt').

a|
[source]
----
zvksc
----
| 5
| 227
| 'Zvksc' (shorthand for 'Zvks' and 'Zvbc').

a|
[source]
----
zvksed
----
| 5
| 228
| 'Zvksed' (SM4 Block Cipher Instructions).

a|
[source]
----
zvksg
----
| 5
| 229
| 'Zvksg' (shorthand for 'Zvks' and 'Zvkg').

a|
[source]
----
zvksh
----
| 5
| 230
| 'Zvksh' (SM3 Hash Function Instructions).

a|
[source]
----
zvkt
----
| 5
| 231
| 'Zvkt' (Vector Data-Independent Execution Latency).

a|
[source]
----
zvl1024b
----
| 5
| 232
| 'Zvl' (Minimum Vector Length) 1024.

a|
[source]
----
zvl128b
----
| 5
| 233
| 'Zvl' (Minimum Vector Length) 128.

a|
[source]
----
zvl16384b
----
| 5
| 234
| 'Zvl' (Minimum Vector Length) 16384.

a|
[source]
----
zvl2048b
----
| 5
| 235
| 'Zvl' (Minimum Vector Length) 2048.

a|
[source]
----
zvl256b
----
| 5
| 236
| 'Zvl' (Minimum Vector Length) 256.

a|
[source]
----
zvl32768b
----
| 5
| 237
| 'Zvl' (Minimum Vector Length) 32768.

a|
[source]
----
zvl32b
----
| 5
| 238
| 'Zvl' (Minimum Vector Length) 32.

a|
[source]
----
zvl4096b
----
| 5
| 239
| 'Zvl' (Minimum Vector Length) 4096.

a|
[source]
----
zvl512b
----
| 5
| 240
| 'Zvl' (Minimum Vector Length) 512.

a|
[source]
----
zvl64b
----
| 5
| 241
| 'Zvl' (Minimum Vector Length) 64.

a|
[source]
----
zvl65536b
----
| 5
| 242
| 'Zvl' (Minimum Vector Length) 65536.

a|
[source]
----
zvl8192b
----
| 5
| 243
| 'Zvl' (Minimum Vector Length) 8192.

4+^|*Target: riscv64 (6)*

a|
[source]
----
32bit
----
| 6
| 1
| Implements RV32.

a|
[source]
----
64bit
----
| 6
| 2
| Implements RV64.

a|
[source]
----
a
----
| 6
| 3
| 'A' (Atomic Instructions).

a|
[source]
----
auipc-addi-fusion
----
| 6
| 4
| Enable AUIPC+ADDI macrofusion.

a|
[source]
----
b
----
| 6
| 5
| 'B' (the collection of the Zba, Zbb, Zbs extensions).

a|
[source]
----
c
----
| 6
| 6
| 'C' (Compressed Instructions).

a|
[source]
----
conditional-cmv-fusion
----
| 6
| 7
| Enable branch+c.mv fusion.

a|
[source]
----
d
----
| 6
| 8
| 'D' (Double-Precision Floating-Point).

a|
[source]
----
dlen-factor-2
----
| 6
| 9
| Vector unit DLEN(data path width) is half of VLEN.

a|
[source]
----
e
----
| 6
| 10
| Implements RV{32,64}E (provides 16 rather than 32 GPRs).

a|
[source]
----
experimental
----
| 6
| 11
| Experimental intrinsics.

a|
[source]
----
experimental-rva23s64
----
| 6
| 12
| RISC-V experimental-rva23s64 profile.

a|
[source]
----
experimental-rva23u64
----
| 6
| 13
| RISC-V experimental-rva23u64 profile.

a|
[source]
----
experimental-rvb23s64
----
| 6
| 14
| RISC-V experimental-rvb23s64 profile.

a|
[source]
----
experimental-rvb23u64
----
| 6
| 15
| RISC-V experimental-rvb23u64 profile.

a|
[source]
----
experimental-rvm23u32
----
| 6
| 16
| RISC-V experimental-rvm23u32 profile.

a|
[source]
----
experimental-smmpm
----
| 6
| 17
| 'Smmpm' (Machine-level Pointer Masking for M-mode).

a|
[source]
----
experimental-smnpm
----
| 6
| 18
| 'Smnpm' (Machine-level Pointer Masking for next lower privilege mode).

a|
[source]
----
experimental-ssnpm
----
| 6
| 19
| 'Ssnpm' (Supervisor-level Pointer Masking for next lower privilege mode).

a|
[source]
----
experimental-sspm
----
| 6
| 20
| 'Sspm' (Indicates Supervisor-mode Pointer Masking).

a|
[source]
----
experimental-ssqosid
----
| 6
| 21
| 'Ssqosid' (Quality-of-Service (QoS) Identifiers).

a|
[source]
----
experimental-supm
----
| 6
| 22
| 'Supm' (Indicates User-mode Pointer Masking).

a|
[source]
----
experimental-zacas
----
| 6
| 23
| 'Zacas' (Atomic Compare-And-Swap Instructions).

a|
[source]
----
experimental-zalasr
----
| 6
| 24
| 'Zalasr' (Load-Acquire and Store-Release Instructions).

a|
[source]
----
experimental-zicfilp
----
| 6
| 25
| 'Zicfilp' (Landing pad).

a|
[source]
----
experimental-zicfiss
----
| 6
| 26
| 'Zicfiss' (Shadow stack).

a|
[source]
----
f
----
| 6
| 27
| 'F' (Single-Precision Floating-Point).

a|
[source]
----
forced-atomics
----
| 6
| 28
| Assume that lock-free native-width atomics are available.

a|
[source]
----
forced-sw-shadow-stack
----
| 6
| 29
| Implement shadow stack with software..

a|
[source]
----
h
----
| 6
| 30
| 'H' (Hypervisor).

a|
[source]
----
i
----
| 6
| 31
| 'I' (Base Integer Instruction Set).

a|
[source]
----
ld-add-fusion
----
| 6
| 32
| Enable LD+ADD macrofusion.

a|
[source]
----
lui-addi-fusion
----
| 6
| 33
| Enable LUI+ADDI macro fusion.

a|
[source]
----
m
----
| 6
| 34
| 'M' (Integer Multiplication and Division).

a|
[source]
----
no-default-unroll
----
| 6
| 35
| Disable default unroll preference..

a|
[source]
----
no-rvc-hints
----
| 6
| 36
| Disable RVC Hint Instructions..

a|
[source]
----
no-sink-splat-operands
----
| 6
| 37
| Disable sink splat operands to enable .vx, .vf,.wx, and .wf instructions.

a|
[source]
----
no-trailing-seq-cst-fence
----
| 6
| 38
| Disable trailing fence for seq-cst store..

a|
[source]
----
optimized-zero-stride-load
----
| 6
| 39
| Optimized (perform fewer memory operations)zero-stride vector load.

a|
[source]
----
predictable-select-expensive
----
| 6
| 40
| Prefer likely predicted branches over selects.

a|
[source]
----
prefer-w-inst
----
| 6
| 41
| Prefer instructions with W suffix.

a|
[source]
----
relax
----
| 6
| 42
| Enable Linker relaxation..

a|
[source]
----
reserve-x1
----
| 6
| 43
| Reserve X1.

a|
[source]
----
reserve-x10
----
| 6
| 44
| Reserve X10.

a|
[source]
----
reserve-x11
----
| 6
| 45
| Reserve X11.

a|
[source]
----
reserve-x12
----
| 6
| 46
| Reserve X12.

a|
[source]
----
reserve-x13
----
| 6
| 47
| Reserve X13.

a|
[source]
----
reserve-x14
----
| 6
| 48
| Reserve X14.

a|
[source]
----
reserve-x15
----
| 6
| 49
| Reserve X15.

a|
[source]
----
reserve-x16
----
| 6
| 50
| Reserve X16.

a|
[source]
----
reserve-x17
----
| 6
| 51
| Reserve X17.

a|
[source]
----
reserve-x18
----
| 6
| 52
| Reserve X18.

a|
[source]
----
reserve-x19
----
| 6
| 53
| Reserve X19.

a|
[source]
----
reserve-x2
----
| 6
| 54
| Reserve X2.

a|
[source]
----
reserve-x20
----
| 6
| 55
| Reserve X20.

a|
[source]
----
reserve-x21
----
| 6
| 56
| Reserve X21.

a|
[source]
----
reserve-x22
----
| 6
| 57
| Reserve X22.

a|
[source]
----
reserve-x23
----
| 6
| 58
| Reserve X23.

a|
[source]
----
reserve-x24
----
| 6
| 59
| Reserve X24.

a|
[source]
----
reserve-x25
----
| 6
| 60
| Reserve X25.

a|
[source]
----
reserve-x26
----
| 6
| 61
| Reserve X26.

a|
[source]
----
reserve-x27
----
| 6
| 62
| Reserve X27.

a|
[source]
----
reserve-x28
----
| 6
| 63
| Reserve X28.

a|
[source]
----
reserve-x29
----
| 6
| 64
| Reserve X29.

a|
[source]
----
reserve-x3
----
| 6
| 65
| Reserve X3.

a|
[source]
----
reserve-x30
----
| 6
| 66
| Reserve X30.

a|
[source]
----
reserve-x31
----
| 6
| 67
| Reserve X31.

a|
[source]
----
reserve-x4
----
| 6
| 68
| Reserve X4.

a|
[source]
----
reserve-x5
----
| 6
| 69
| Reserve X5.

a|
[source]
----
reserve-x6
----
| 6
| 70
| Reserve X6.

a|
[source]
----
reserve-x7
----
| 6
| 71
| Reserve X7.

a|
[source]
----
reserve-x8
----
| 6
| 72
| Reserve X8.

a|
[source]
----
reserve-x9
----
| 6
| 73
| Reserve X9.

a|
[source]
----
rva20s64
----
| 6
| 74
| RISC-V rva20s64 profile.

a|
[source]
----
rva20u64
----
| 6
| 75
| RISC-V rva20u64 profile.

a|
[source]
----
rva22s64
----
| 6
| 76
| RISC-V rva22s64 profile.

a|
[source]
----
rva22u64
----
| 6
| 77
| RISC-V rva22u64 profile.

a|
[source]
----
rvi20u32
----
| 6
| 78
| RISC-V rvi20u32 profile.

a|
[source]
----
rvi20u64
----
| 6
| 79
| RISC-V rvi20u64 profile.

a|
[source]
----
save-restore
----
| 6
| 80
| Enable save/restore..

a|
[source]
----
shcounterenw
----
| 6
| 81
| 'Shcounterenw' (Support writeable hcounteren enable bit for any hpmcounter that is not read-only zero).

a|
[source]
----
shgatpa
----
| 6
| 82
| 'Sgatpa' (SvNNx4 mode supported for all modes supported by satp, as well as Bare).

a|
[source]
----
shifted-zextw-fusion
----
| 6
| 83
| Enable SLLI+SRLI to be fused when computing (shifted) word zero extension.

a|
[source]
----
short-forward-branch-opt
----
| 6
| 84
| Enable short forward branch optimization.

a|
[source]
----
shtvala
----
| 6
| 85
| 'Shtvala' (htval provides all needed values).

a|
[source]
----
shvsatpa
----
| 6
| 86
| 'Svsatpa' (vsatp supports all modes supported by satp).

a|
[source]
----
shvstvala
----
| 6
| 87
| 'Shvstvala' (vstval provides all needed values).

a|
[source]
----
shvstvecd
----
| 6
| 88
| 'Shvstvecd' (vstvec supports Direct mode).

a|
[source]
----
sifive7
----
| 6
| 89
| SiFive 7-Series processors.

a|
[source]
----
smaia
----
| 6
| 90
| 'Smaia' (Advanced Interrupt Architecture Machine Level).

a|
[source]
----
smcdeleg
----
| 6
| 91
| 'Smcdeleg' (Counter Delegation Machine Level).

a|
[source]
----
smcsrind
----
| 6
| 92
| 'Smcsrind' (Indirect CSR Access Machine Level).

a|
[source]
----
smepmp
----
| 6
| 93
| 'Smepmp' (Enhanced Physical Memory Protection).

a|
[source]
----
smstateen
----
| 6
| 94
| 'Smstateen' (Machine-mode view of the state-enable extension).

a|
[source]
----
ssaia
----
| 6
| 95
| 'Ssaia' (Advanced Interrupt Architecture Supervisor Level).

a|
[source]
----
ssccfg
----
| 6
| 96
| 'Ssccfg' (Counter Configuration Supervisor Level).

a|
[source]
----
ssccptr
----
| 6
| 97
| 'Ssccptr' (Main memory supports page table reads).

a|
[source]
----
sscofpmf
----
| 6
| 98
| 'Sscofpmf' (Count Overflow and Mode-Based Filtering).

a|
[source]
----
sscounterenw
----
| 6
| 99
| 'Sscounterenw' (Support writeable scounteren enable bit for any hpmcounter that is not read-only zero).

a|
[source]
----
sscsrind
----
| 6
| 100
| 'Sscsrind' (Indirect CSR Access Supervisor Level).

a|
[source]
----
ssstateen
----
| 6
| 101
| 'Ssstateen' (Supervisor-mode view of the state-enable extension).

a|
[source]
----
ssstrict
----
| 6
| 102
| 'Ssstrict' (No non-conforming extensions are present).

a|
[source]
----
sstc
----
| 6
| 103
| 'Sstc' (Supervisor-mode timer interrupts).

a|
[source]
----
sstvala
----
| 6
| 104
| 'Sstvala' (stval provides all needed values).

a|
[source]
----
sstvecd
----
| 6
| 105
| 'Sstvecd' (stvec supports Direct mode).

a|
[source]
----
ssu64xl
----
| 6
| 106
| 'Ssu64xl' (UXLEN=64 supported).

a|
[source]
----
svade
----
| 6
| 107
| 'Svade' (Raise exceptions on improper A/D bits).

a|
[source]
----
svadu
----
| 6
| 108
| 'Svadu' (Hardware A/D updates).

a|
[source]
----
svbare
----
| 6
| 109
| 'Svbare' $(satp mode Bare supported).

a|
[source]
----
svinval
----
| 6
| 110
| 'Svinval' (Fine-Grained Address-Translation Cache Invalidation).

a|
[source]
----
svnapot
----
| 6
| 111
| 'Svnapot' (NAPOT Translation Contiguity).

a|
[source]
----
svpbmt
----
| 6
| 112
| 'Svpbmt' (Page-Based Memory Types).

a|
[source]
----
tagged-globals
----
| 6
| 113
| Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits.

a|
[source]
----
unaligned-scalar-mem
----
| 6
| 114
| Has reasonably performant unaligned scalar loads and stores.

a|
[source]
----
unaligned-vector-mem
----
| 6
| 115
| Has reasonably performant unaligned vector loads and stores.

a|
[source]
----
use-postra-scheduler
----
| 6
| 116
| Schedule again after register allocation.

a|
[source]
----
v
----
| 6
| 117
| 'V' (Vector Extension for Application Processors).

a|
[source]
----
ventana-veyron
----
| 6
| 118
| Ventana Veyron-Series processors.

a|
[source]
----
xcvalu
----
| 6
| 119
| 'XCValu' (CORE-V ALU Operations).

a|
[source]
----
xcvbi
----
| 6
| 120
| 'XCVbi' (CORE-V Immediate Branching).

a|
[source]
----
xcvbitmanip
----
| 6
| 121
| 'XCVbitmanip' (CORE-V Bit Manipulation).

a|
[source]
----
xcvelw
----
| 6
| 122
| 'XCVelw' (CORE-V Event Load Word).

a|
[source]
----
xcvmac
----
| 6
| 123
| 'XCVmac' (CORE-V Multiply-Accumulate).

a|
[source]
----
xcvmem
----
| 6
| 124
| 'XCVmem' (CORE-V Post-incrementing Load & Store).

a|
[source]
----
xcvsimd
----
| 6
| 125
| 'XCVsimd' (CORE-V SIMD ALU).

a|
[source]
----
xsfcease
----
| 6
| 126
| 'XSfcease' (SiFive sf.cease Instruction).

a|
[source]
----
xsfvcp
----
| 6
| 127
| 'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions).

a|
[source]
----
xsfvfnrclipxfqf
----
| 6
| 128
| 'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions).

a|
[source]
----
xsfvfwmaccqqq
----
| 6
| 129
| 'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4)).

a|
[source]
----
xsfvqmaccdod
----
| 6
| 130
| 'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2)).

a|
[source]
----
xsfvqmaccqoq
----
| 6
| 131
| 'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4)).

a|
[source]
----
xsifivecdiscarddlone
----
| 6
| 132
| 'XSiFivecdiscarddlone' (SiFive sf.cdiscard.d.l1 Instruction).

a|
[source]
----
xsifivecflushdlone
----
| 6
| 133
| 'XSiFivecflushdlone' (SiFive sf.cflush.d.l1 Instruction).

a|
[source]
----
xtheadba
----
| 6
| 134
| 'XTHeadBa' (T-Head address calculation instructions).

a|
[source]
----
xtheadbb
----
| 6
| 135
| 'XTHeadBb' (T-Head basic bit-manipulation instructions).

a|
[source]
----
xtheadbs
----
| 6
| 136
| 'XTHeadBs' (T-Head single-bit instructions).

a|
[source]
----
xtheadcmo
----
| 6
| 137
| 'XTHeadCmo' (T-Head cache management instructions).

a|
[source]
----
xtheadcondmov
----
| 6
| 138
| 'XTHeadCondMov' (T-Head conditional move instructions).

a|
[source]
----
xtheadfmemidx
----
| 6
| 139
| 'XTHeadFMemIdx' (T-Head FP Indexed Memory Operations).

a|
[source]
----
xtheadmac
----
| 6
| 140
| 'XTHeadMac' (T-Head Multiply-Accumulate Instructions).

a|
[source]
----
xtheadmemidx
----
| 6
| 141
| 'XTHeadMemIdx' (T-Head Indexed Memory Operations).

a|
[source]
----
xtheadmempair
----
| 6
| 142
| 'XTHeadMemPair' (T-Head two-GPR Memory Operations).

a|
[source]
----
xtheadsync
----
| 6
| 143
| 'XTHeadSync' (T-Head multicore synchronization instructions).

a|
[source]
----
xtheadvdot
----
| 6
| 144
| 'XTHeadVdot' (T-Head Vector Extensions for Dot).

a|
[source]
----
xventanacondops
----
| 6
| 145
| 'XVentanaCondOps' (Ventana Conditional Ops).

a|
[source]
----
xwchc
----
| 6
| 146
| 'Xwchc' (WCH/QingKe additional compressed opcodes).

a|
[source]
----
za128rs
----
| 6
| 147
| 'Za128rs' (Reservation Set Size of at Most 128 Bytes).

a|
[source]
----
za64rs
----
| 6
| 148
| 'Za64rs' (Reservation Set Size of at Most 64 Bytes).

a|
[source]
----
zaamo
----
| 6
| 149
| 'Zaamo' (Atomic Memory Operations).

a|
[source]
----
zabha
----
| 6
| 150
| 'Zabha' (Byte and Halfword Atomic Memory Operations).

a|
[source]
----
zalrsc
----
| 6
| 151
| 'Zalrsc' (Load-Reserved/Store-Conditional).

a|
[source]
----
zama16b
----
| 6
| 152
| 'Zama16b' (Atomic 16-byte misaligned loads, stores and AMOs).

a|
[source]
----
zawrs
----
| 6
| 153
| 'Zawrs' (Wait on Reservation Set).

a|
[source]
----
zba
----
| 6
| 154
| 'Zba' (Address Generation Instructions).

a|
[source]
----
zbb
----
| 6
| 155
| 'Zbb' (Basic Bit-Manipulation).

a|
[source]
----
zbc
----
| 6
| 156
| 'Zbc' (Carry-Less Multiplication).

a|
[source]
----
zbkb
----
| 6
| 157
| 'Zbkb' (Bitmanip instructions for Cryptography).

a|
[source]
----
zbkc
----
| 6
| 158
| 'Zbkc' (Carry-less multiply instructions for Cryptography).

a|
[source]
----
zbkx
----
| 6
| 159
| 'Zbkx' (Crossbar permutation instructions).

a|
[source]
----
zbs
----
| 6
| 160
| 'Zbs' (Single-Bit Instructions).

a|
[source]
----
zca
----
| 6
| 161
| 'Zca' (part of the C extension, excluding compressed floating point loads/stores).

a|
[source]
----
zcb
----
| 6
| 162
| 'Zcb' (Compressed basic bit manipulation instructions).

a|
[source]
----
zcd
----
| 6
| 163
| 'Zcd' (Compressed Double-Precision Floating-Point Instructions).

a|
[source]
----
zce
----
| 6
| 164
| 'Zce' (Compressed extensions for microcontrollers).

a|
[source]
----
zcf
----
| 6
| 165
| 'Zcf' (Compressed Single-Precision Floating-Point Instructions).

a|
[source]
----
zcmop
----
| 6
| 166
| 'Zcmop' (Compressed May-Be-Operations).

a|
[source]
----
zcmp
----
| 6
| 167
| 'Zcmp' (sequenced instructions for code-size reduction).

a|
[source]
----
zcmt
----
| 6
| 168
| 'Zcmt' (table jump instructions for code-size reduction).

a|
[source]
----
zdinx
----
| 6
| 169
| 'Zdinx' (Double in Integer).

a|
[source]
----
zexth-fusion
----
| 6
| 170
| Enable SLLI+SRLI to be fused to zero extension of halfword.

a|
[source]
----
zextw-fusion
----
| 6
| 171
| Enable SLLI+SRLI to be fused to zero extension of word.

a|
[source]
----
zfa
----
| 6
| 172
| 'Zfa' (Additional Floating-Point).

a|
[source]
----
zfbfmin
----
| 6
| 173
| 'Zfbfmin' (Scalar BF16 Converts).

a|
[source]
----
zfh
----
| 6
| 174
| 'Zfh' (Half-Precision Floating-Point).

a|
[source]
----
zfhmin
----
| 6
| 175
| 'Zfhmin' (Half-Precision Floating-Point Minimal).

a|
[source]
----
zfinx
----
| 6
| 176
| 'Zfinx' (Float in Integer).

a|
[source]
----
zhinx
----
| 6
| 177
| 'Zhinx' (Half Float in Integer).

a|
[source]
----
zhinxmin
----
| 6
| 178
| 'Zhinxmin' (Half Float in Integer Minimal).

a|
[source]
----
zic64b
----
| 6
| 179
| 'Zic64b' (Cache Block Size Is 64 Bytes).

a|
[source]
----
zicbom
----
| 6
| 180
| 'Zicbom' (Cache-Block Management Instructions).

a|
[source]
----
zicbop
----
| 6
| 181
| 'Zicbop' (Cache-Block Prefetch Instructions).

a|
[source]
----
zicboz
----
| 6
| 182
| 'Zicboz' (Cache-Block Zero Instructions).

a|
[source]
----
ziccamoa
----
| 6
| 183
| 'Ziccamoa' (Main Memory Supports All Atomics in A).

a|
[source]
----
ziccif
----
| 6
| 184
| 'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement).

a|
[source]
----
zicclsm
----
| 6
| 185
| 'Zicclsm' (Main Memory Supports Misaligned Loads/Stores).

a|
[source]
----
ziccrse
----
| 6
| 186
| 'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences).

a|
[source]
----
zicntr
----
| 6
| 187
| 'Zicntr' (Base Counters and Timers).

a|
[source]
----
zicond
----
| 6
| 188
| 'Zicond' (Integer Conditional Operations).

a|
[source]
----
zicsr
----
| 6
| 189
| 'zicsr' (CSRs).

a|
[source]
----
zifencei
----
| 6
| 190
| 'Zifencei' (fence.i).

a|
[source]
----
zihintntl
----
| 6
| 191
| 'Zihintntl' (Non-Temporal Locality Hints).

a|
[source]
----
zihintpause
----
| 6
| 192
| 'Zihintpause' (Pause Hint).

a|
[source]
----
zihpm
----
| 6
| 193
| 'Zihpm' (Hardware Performance Counters).

a|
[source]
----
zimop
----
| 6
| 194
| 'Zimop' (May-Be-Operations).

a|
[source]
----
zk
----
| 6
| 195
| 'Zk' (Standard scalar cryptography extension).

a|
[source]
----
zkn
----
| 6
| 196
| 'Zkn' (NIST Algorithm Suite).

a|
[source]
----
zknd
----
| 6
| 197
| 'Zknd' (NIST Suite: AES Decryption).

a|
[source]
----
zkne
----
| 6
| 198
| 'Zkne' (NIST Suite: AES Encryption).

a|
[source]
----
zknh
----
| 6
| 199
| 'Zknh' (NIST Suite: Hash Function Instructions).

a|
[source]
----
zkr
----
| 6
| 200
| 'Zkr' (Entropy Source Extension).

a|
[source]
----
zks
----
| 6
| 201
| 'Zks' (ShangMi Algorithm Suite).

a|
[source]
----
zksed
----
| 6
| 202
| 'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions).

a|
[source]
----
zksh
----
| 6
| 203
| 'Zksh' (ShangMi Suite: SM3 Hash Function Instructions).

a|
[source]
----
zkt
----
| 6
| 204
| 'Zkt' (Data Independent Execution Latency).

a|
[source]
----
zmmul
----
| 6
| 205
| 'Zmmul' (Integer Multiplication).

a|
[source]
----
ztso
----
| 6
| 206
| 'Ztso' (Memory Model

a|
[source]
----
zvbb
----
| 6
| 207
| 'Zvbb' (Vector basic bit-manipulation instructions).

a|
[source]
----
zvbc
----
| 6
| 208
| 'Zvbc' (Vector Carryless Multiplication).

a|
[source]
----
zve32f
----
| 6
| 209
| 'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension).

a|
[source]
----
zve32x
----
| 6
| 210
| 'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW).

a|
[source]
----
zve64d
----
| 6
| 211
| 'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension).

a|
[source]
----
zve64f
----
| 6
| 212
| 'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension).

a|
[source]
----
zve64x
----
| 6
| 213
| 'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW).

a|
[source]
----
zvfbfmin
----
| 6
| 214
| 'Zvbfmin' (Vector BF16 Converts).

a|
[source]
----
zvfbfwma
----
| 6
| 215
| 'Zvfbfwma' (Vector BF16 widening mul-add).

a|
[source]
----
zvfh
----
| 6
| 216
| 'Zvfh' (Vector Half-Precision Floating-Point).

a|
[source]
----
zvfhmin
----
| 6
| 217
| 'Zvfhmin' (Vector Half-Precision Floating-Point Minimal).

a|
[source]
----
zvkb
----
| 6
| 218
| 'Zvkb' (Vector Bit-manipulation used in Cryptography).

a|
[source]
----
zvkg
----
| 6
| 219
| 'Zvkg' (Vector GCM instructions for Cryptography).

a|
[source]
----
zvkn
----
| 6
| 220
| 'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt').

a|
[source]
----
zvknc
----
| 6
| 221
| 'Zvknc' (shorthand for 'Zvknc' and 'Zvbc').

a|
[source]
----
zvkned
----
| 6
| 222
| 'Zvkned' (Vector AES Encryption & Decryption (Single Round)).

a|
[source]
----
zvkng
----
| 6
| 223
| 'zvkng' (shorthand for 'Zvkn' and 'Zvkg').

a|
[source]
----
zvknha
----
| 6
| 224
| 'Zvknha' (Vector SHA-2 (SHA-256 only)).

a|
[source]
----
zvknhb
----
| 6
| 225
| 'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512)).

a|
[source]
----
zvks
----
| 6
| 226
| 'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt').

a|
[source]
----
zvksc
----
| 6
| 227
| 'Zvksc' (shorthand for 'Zvks' and 'Zvbc').

a|
[source]
----
zvksed
----
| 6
| 228
| 'Zvksed' (SM4 Block Cipher Instructions).

a|
[source]
----
zvksg
----
| 6
| 229
| 'Zvksg' (shorthand for 'Zvks' and 'Zvkg').

a|
[source]
----
zvksh
----
| 6
| 230
| 'Zvksh' (SM3 Hash Function Instructions).

a|
[source]
----
zvkt
----
| 6
| 231
| 'Zvkt' (Vector Data-Independent Execution Latency).

a|
[source]
----
zvl1024b
----
| 6
| 232
| 'Zvl' (Minimum Vector Length) 1024.

a|
[source]
----
zvl128b
----
| 6
| 233
| 'Zvl' (Minimum Vector Length) 128.

a|
[source]
----
zvl16384b
----
| 6
| 234
| 'Zvl' (Minimum Vector Length) 16384.

a|
[source]
----
zvl2048b
----
| 6
| 235
| 'Zvl' (Minimum Vector Length) 2048.

a|
[source]
----
zvl256b
----
| 6
| 236
| 'Zvl' (Minimum Vector Length) 256.

a|
[source]
----
zvl32768b
----
| 6
| 237
| 'Zvl' (Minimum Vector Length) 32768.

a|
[source]
----
zvl32b
----
| 6
| 238
| 'Zvl' (Minimum Vector Length) 32.

a|
[source]
----
zvl4096b
----
| 6
| 239
| 'Zvl' (Minimum Vector Length) 4096.

a|
[source]
----
zvl512b
----
| 6
| 240
| 'Zvl' (Minimum Vector Length) 512.

a|
[source]
----
zvl64b
----
| 6
| 241
| 'Zvl' (Minimum Vector Length) 64.

a|
[source]
----
zvl65536b
----
| 6
| 242
| 'Zvl' (Minimum Vector Length) 65536.

a|
[source]
----
zvl8192b
----
| 6
| 243
| 'Zvl' (Minimum Vector Length) 8192.
|===
