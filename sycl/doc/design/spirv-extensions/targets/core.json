{
  "version": 0,
  "targets": [
    {
      "name": "unknown",
      "value": 0,
      "desc": "Unknown target"
    },
    {
      "name": "arm",
      "value": 1,
      "desc": "ARM (32-bit)"
    },
    {
      "name": "arm32",
      "value": 1,
      "desc": "ARM (32-bit)"
    },
    {
      "name": "arm64",
      "value": 2,
      "desc": "ARM (64-bit)"
    },
    {
      "name": "aarch64",
      "value": 2,
      "desc": "ARM (64-bit)"
    },
    {
      "name": "x86",
      "value": 3,
      "desc": "x86 (32-bit)"
    },
    {
      "name": "x86_64",
      "value": 4,
      "desc": "x86 (64-bit)"
    },
    {
      "name": "riscv32",
      "value": 5,
      "desc": "RISC-V (32-bit)"
    },
    {
      "name": "riscv64",
      "value": 6,
      "desc": "RISC-V (64-bit)"
    },
    {
      "name": "nvptx",
      "value": 7,
      "desc": "NVIDIA PTX (32-bit)"
    },
    {
      "name": "nvptx64",
      "value": 8,
      "desc": "NVIDIA PTX (64-bit)"
    },
    {
      "name": "amdgcn",
      "value": 9,
      "desc": "AMD GCN"
    }
  ],
  "features": {
    "unknown": [
      {
        "name": "none",
        "value": 0,
        "desc": "No features"
      }
    ],
    "arm32": [
      {
        "name": "none",
        "value": 0,
        "desc": "No features"
      },
      {
        "name": "neon",
        "value": 1,
        "desc": "Enable NEON instructions"
      }
    ],
    "arm64": [
      {
        "name": "none",
        "value": 0,
        "desc": "No features"
      },
      {
        "name": "fp8",
        "value": 1,
        "desc": "Enable FP8 instructions"
      },
      {
        "name": "fp8dot2",
        "value": 2,
        "desc": "Enable FP8 2-way dot product instructions"
      },
      {
        "name": "fp8dot4",
        "value": 3,
        "desc": "Enable FP8 4-way dot product instructions"
      },
      {
        "name": "neon",
        "value": 4,
        "desc": "Enable NEON instructions"
      },
      {
        "name": "sve",
        "value": 5,
        "desc": "Enable SVE instructions"
      }
    ],
    "x86": [
      {
        "name": "none",
        "value": 0,
        "desc": "No features"
      },
      {
        "name": "fma",
        "value": 1,
        "desc": "Enable fused three-operand multiply-add"
      },
      {
        "name": "fma4",
        "value": 2,
        "desc": "Enable fused four-operand multiply-add"
      },
      {
        "name": "mmx",
        "value": 3,
        "desc": "Enable MMX instructions"
      },
      {
        "name": "sse",
        "value": 4,
        "desc": "Enable SSE instructions"
      },
      {
        "name": "sse2",
        "value": 5,
        "desc": "Enable SSE2 instructions"
      },
      {
        "name": "sse3",
        "value": 6,
        "desc": "Enable SSE3 instructions"
      },
      {
        "name": "sse4.1",
        "value": 7,
        "desc": "Enable SSE4.1 instructions"
      },
      {
        "name": "sse4.2",
        "value": 8,
        "desc": "Enable SSE4.2 instructions"
      },
      {
        "name": "sse4a",
        "value": 9,
        "desc": "Enable SSE4a instructions"
      },
      {
        "name": "avx",
        "value": 10,
        "desc": "Enable AVX instructions"
      },
      {
        "name": "avx2",
        "value": 11,
        "desc": "Enable AVX2 instructions"
      },
      {
        "name": "avx512f",
        "value": 12,
        "desc": "Enable AVX512 instructions"
      }
    ],
    "x86_64": [
      {
        "name": "none",
        "value": 0,
        "desc": "No features"
      },
      {
        "name": "fma",
        "value": 1,
        "desc": "Enable fused three-operand multiply-add"
      },
      {
        "name": "fma4",
        "value": 2,
        "desc": "Enable fused four-operand multiply-add"
      },
      {
        "name": "mmx",
        "value": 3,
        "desc": "Enable MMX instructions"
      },
      {
        "name": "sse",
        "value": 4,
        "desc": "Enable SSE instructions"
      },
      {
        "name": "sse2",
        "value": 5,
        "desc": "Enable SSE2 instructions"
      },
      {
        "name": "sse3",
        "value": 6,
        "desc": "Enable SSE3 instructions"
      },
      {
        "name": "sse4.1",
        "value": 7,
        "desc": "Enable SSE4.1 instructions"
      },
      {
        "name": "sse4.2",
        "value": 8,
        "desc": "Enable SSE4.2 instructions"
      },
      {
        "name": "sse4a",
        "value": 9,
        "desc": "Enable SSE4a instructions"
      },
      {
        "name": "avx",
        "value": 10,
        "desc": "Enable AVX instructions"
      },
      {
        "name": "avx2",
        "value": 11,
        "desc": "Enable AVX2 instructions"
      },
      {
        "name": "avx512f",
        "value": 12,
        "desc": "Enable AVX512 instructions"
      }
    ],
    "riscv32": [
      {
        "name": "32bit",
        "value": 0,
        "desc": "Implements RV32."
      },
      {
        "name": "64bit",
        "value": 1,
        "desc": "Implements RV64."
      },
      {
        "name": "a",
        "value": 2,
        "desc": "'A' (Atomic Instructions)."
      },
      {
        "name": "auipc-addi-fusion",
        "value": 3,
        "desc": "Enable AUIPC+ADDI macrofusion."
      },
      {
        "name": "b",
        "value": 4,
        "desc": "'B' (the collection of the Zba, Zbb, Zbs extensions)."
      },
      {
        "name": "c",
        "value": 5,
        "desc": "'C' (Compressed Instructions)."
      },
      {
        "name": "conditional-cmv-fusion",
        "value": 6,
        "desc": "Enable branch+c.mv fusion."
      },
      {
        "name": "d",
        "value": 7,
        "desc": "'D' (Double-Precision Floating-Point)."
      },
      {
        "name": "dlen-factor-2",
        "value": 8,
        "desc": "Vector unit DLEN(data path width) is half of VLEN."
      },
      {
        "name": "e",
        "value": 9,
        "desc": "Implements RV{32,64}E (provides 16 rather than 32 GPRs)."
      },
      {
        "name": "experimental",
        "value": 10,
        "desc": "Experimental intrinsics."
      },
      {
        "name": "experimental-rva23s64",
        "value": 11,
        "desc": "RISC-V experimental-rva23s64 profile."
      },
      {
        "name": "experimental-rva23u64",
        "value": 12,
        "desc": "RISC-V experimental-rva23u64 profile."
      },
      {
        "name": "experimental-rvb23s64",
        "value": 13,
        "desc": "RISC-V experimental-rvb23s64 profile."
      },
      {
        "name": "experimental-rvb23u64",
        "value": 14,
        "desc": "RISC-V experimental-rvb23u64 profile."
      },
      {
        "name": "experimental-rvm23u32",
        "value": 15,
        "desc": "RISC-V experimental-rvm23u32 profile."
      },
      {
        "name": "experimental-smmpm",
        "value": 16,
        "desc": "'Smmpm' (Machine-level Pointer Masking for M-mode)."
      },
      {
        "name": "experimental-smnpm",
        "value": 17,
        "desc": "'Smnpm' (Machine-level Pointer Masking for next lower privilege mode)."
      },
      {
        "name": "experimental-ssnpm",
        "value": 18,
        "desc": "'Ssnpm' (Supervisor-level Pointer Masking for next lower privilege mode)."
      },
      {
        "name": "experimental-sspm",
        "value": 19,
        "desc": "'Sspm' (Indicates Supervisor-mode Pointer Masking)."
      },
      {
        "name": "experimental-ssqosid",
        "value": 20,
        "desc": "'Ssqosid' (Quality-of-Service (QoS) Identifiers)."
      },
      {
        "name": "experimental-supm",
        "value": 21,
        "desc": "'Supm' (Indicates User-mode Pointer Masking)."
      },
      {
        "name": "experimental-zacas",
        "value": 22,
        "desc": "'Zacas' (Atomic Compare-And-Swap Instructions)."
      },
      {
        "name": "experimental-zalasr",
        "value": 23,
        "desc": "'Zalasr' (Load-Acquire and Store-Release Instructions)."
      },
      {
        "name": "experimental-zicfilp",
        "value": 24,
        "desc": "'Zicfilp' (Landing pad)."
      },
      {
        "name": "experimental-zicfiss",
        "value": 25,
        "desc": "'Zicfiss' (Shadow stack)."
      },
      {
        "name": "f",
        "value": 26,
        "desc": "'F' (Single-Precision Floating-Point)."
      },
      {
        "name": "forced-atomics",
        "value": 27,
        "desc": "Assume that lock-free native-width atomics are available."
      },
      {
        "name": "forced-sw-shadow-stack",
        "value": 28,
        "desc": "Implement shadow stack with software.."
      },
      {
        "name": "h",
        "value": 29,
        "desc": "'H' (Hypervisor)."
      },
      {
        "name": "i",
        "value": 30,
        "desc": "'I' (Base Integer Instruction Set)."
      },
      {
        "name": "ld-add-fusion",
        "value": 31,
        "desc": "Enable LD+ADD macrofusion."
      },
      {
        "name": "lui-addi-fusion",
        "value": 32,
        "desc": "Enable LUI+ADDI macro fusion."
      },
      {
        "name": "m",
        "value": 33,
        "desc": "'M' (Integer Multiplication and Division)."
      },
      {
        "name": "no-default-unroll",
        "value": 34,
        "desc": "Disable default unroll preference.."
      },
      {
        "name": "no-rvc-hints",
        "value": 35,
        "desc": "Disable RVC Hint Instructions.."
      },
      {
        "name": "no-sink-splat-operands",
        "value": 36,
        "desc": "Disable sink splat operands to enable .vx, .vf,.wx, and .wf instructions."
      },
      {
        "name": "no-trailing-seq-cst-fence",
        "value": 37,
        "desc": "Disable trailing fence for seq-cst store.."
      },
      {
        "name": "optimized-zero-stride-load",
        "value": 38,
        "desc": "Optimized (perform fewer memory operations)zero-stride vector load."
      },
      {
        "name": "predictable-select-expensive",
        "value": 39,
        "desc": "Prefer likely predicted branches over selects."
      },
      {
        "name": "prefer-w-inst",
        "value": 40,
        "desc": "Prefer instructions with W suffix."
      },
      {
        "name": "relax",
        "value": 41,
        "desc": "Enable Linker relaxation.."
      },
      {
        "name": "reserve-x1",
        "value": 42,
        "desc": "Reserve X1."
      },
      {
        "name": "reserve-x10",
        "value": 43,
        "desc": "Reserve X10."
      },
      {
        "name": "reserve-x11",
        "value": 44,
        "desc": "Reserve X11."
      },
      {
        "name": "reserve-x12",
        "value": 45,
        "desc": "Reserve X12."
      },
      {
        "name": "reserve-x13",
        "value": 46,
        "desc": "Reserve X13."
      },
      {
        "name": "reserve-x14",
        "value": 47,
        "desc": "Reserve X14."
      },
      {
        "name": "reserve-x15",
        "value": 48,
        "desc": "Reserve X15."
      },
      {
        "name": "reserve-x16",
        "value": 49,
        "desc": "Reserve X16."
      },
      {
        "name": "reserve-x17",
        "value": 50,
        "desc": "Reserve X17."
      },
      {
        "name": "reserve-x18",
        "value": 51,
        "desc": "Reserve X18."
      },
      {
        "name": "reserve-x19",
        "value": 52,
        "desc": "Reserve X19."
      },
      {
        "name": "reserve-x2",
        "value": 53,
        "desc": "Reserve X2."
      },
      {
        "name": "reserve-x20",
        "value": 54,
        "desc": "Reserve X20."
      },
      {
        "name": "reserve-x21",
        "value": 55,
        "desc": "Reserve X21."
      },
      {
        "name": "reserve-x22",
        "value": 56,
        "desc": "Reserve X22."
      },
      {
        "name": "reserve-x23",
        "value": 57,
        "desc": "Reserve X23."
      },
      {
        "name": "reserve-x24",
        "value": 58,
        "desc": "Reserve X24."
      },
      {
        "name": "reserve-x25",
        "value": 59,
        "desc": "Reserve X25."
      },
      {
        "name": "reserve-x26",
        "value": 60,
        "desc": "Reserve X26."
      },
      {
        "name": "reserve-x27",
        "value": 61,
        "desc": "Reserve X27."
      },
      {
        "name": "reserve-x28",
        "value": 62,
        "desc": "Reserve X28."
      },
      {
        "name": "reserve-x29",
        "value": 63,
        "desc": "Reserve X29."
      },
      {
        "name": "reserve-x3",
        "value": 64,
        "desc": "Reserve X3."
      },
      {
        "name": "reserve-x30",
        "value": 65,
        "desc": "Reserve X30."
      },
      {
        "name": "reserve-x31",
        "value": 66,
        "desc": "Reserve X31."
      },
      {
        "name": "reserve-x4",
        "value": 67,
        "desc": "Reserve X4."
      },
      {
        "name": "reserve-x5",
        "value": 68,
        "desc": "Reserve X5."
      },
      {
        "name": "reserve-x6",
        "value": 69,
        "desc": "Reserve X6."
      },
      {
        "name": "reserve-x7",
        "value": 70,
        "desc": "Reserve X7."
      },
      {
        "name": "reserve-x8",
        "value": 71,
        "desc": "Reserve X8."
      },
      {
        "name": "reserve-x9",
        "value": 72,
        "desc": "Reserve X9."
      },
      {
        "name": "rva20s64",
        "value": 73,
        "desc": "RISC-V rva20s64 profile."
      },
      {
        "name": "rva20u64",
        "value": 74,
        "desc": "RISC-V rva20u64 profile."
      },
      {
        "name": "rva22s64",
        "value": 75,
        "desc": "RISC-V rva22s64 profile."
      },
      {
        "name": "rva22u64",
        "value": 76,
        "desc": "RISC-V rva22u64 profile."
      },
      {
        "name": "rvi20u32",
        "value": 77,
        "desc": "RISC-V rvi20u32 profile."
      },
      {
        "name": "rvi20u64",
        "value": 78,
        "desc": "RISC-V rvi20u64 profile."
      },
      {
        "name": "save-restore",
        "value": 79,
        "desc": "Enable save/restore.."
      },
      {
        "name": "shcounterenw",
        "value": 80,
        "desc": "'Shcounterenw' (Support writeable hcounteren enable bit for any hpmcounter that is not read-only zero)."
      },
      {
        "name": "shgatpa",
        "value": 81,
        "desc": "'Sgatpa' (SvNNx4 mode supported for all modes supported by satp, as well as Bare)."
      },
      {
        "name": "shifted-zextw-fusion",
        "value": 82,
        "desc": "Enable SLLI+SRLI to be fused when computing (shifted) word zero extension."
      },
      {
        "name": "short-forward-branch-opt",
        "value": 83,
        "desc": "Enable short forward branch optimization."
      },
      {
        "name": "shtvala",
        "value": 84,
        "desc": "'Shtvala' (htval provides all needed values)."
      },
      {
        "name": "shvsatpa",
        "value": 85,
        "desc": "'Svsatpa' (vsatp supports all modes supported by satp)."
      },
      {
        "name": "shvstvala",
        "value": 86,
        "desc": "'Shvstvala' (vstval provides all needed values)."
      },
      {
        "name": "shvstvecd",
        "value": 87,
        "desc": "'Shvstvecd' (vstvec supports Direct mode)."
      },
      {
        "name": "sifive7",
        "value": 88,
        "desc": "SiFive 7-Series processors."
      },
      {
        "name": "smaia",
        "value": 89,
        "desc": "'Smaia' (Advanced Interrupt Architecture Machine Level)."
      },
      {
        "name": "smcdeleg",
        "value": 90,
        "desc": "'Smcdeleg' (Counter Delegation Machine Level)."
      },
      {
        "name": "smcsrind",
        "value": 91,
        "desc": "'Smcsrind' (Indirect CSR Access Machine Level)."
      },
      {
        "name": "smepmp",
        "value": 92,
        "desc": "'Smepmp' (Enhanced Physical Memory Protection)."
      },
      {
        "name": "smstateen",
        "value": 93,
        "desc": "'Smstateen' (Machine-mode view of the state-enable extension)."
      },
      {
        "name": "ssaia",
        "value": 94,
        "desc": "'Ssaia' (Advanced Interrupt Architecture Supervisor Level)."
      },
      {
        "name": "ssccfg",
        "value": 95,
        "desc": "'Ssccfg' (Counter Configuration Supervisor Level)."
      },
      {
        "name": "ssccptr",
        "value": 96,
        "desc": "'Ssccptr' (Main memory supports page table reads)."
      },
      {
        "name": "sscofpmf",
        "value": 97,
        "desc": "'Sscofpmf' (Count Overflow and Mode-Based Filtering)."
      },
      {
        "name": "sscounterenw",
        "value": 98,
        "desc": "'Sscounterenw' (Support writeable scounteren enable bit for any hpmcounter that is not read-only zero)."
      },
      {
        "name": "sscsrind",
        "value": 99,
        "desc": "'Sscsrind' (Indirect CSR Access Supervisor Level)."
      },
      {
        "name": "ssstateen",
        "value": 100,
        "desc": "'Ssstateen' (Supervisor-mode view of the state-enable extension)."
      },
      {
        "name": "ssstrict",
        "value": 101,
        "desc": "'Ssstrict' (No non-conforming extensions are present)."
      },
      {
        "name": "sstc",
        "value": 102,
        "desc": "'Sstc' (Supervisor-mode timer interrupts)."
      },
      {
        "name": "sstvala",
        "value": 103,
        "desc": "'Sstvala' (stval provides all needed values)."
      },
      {
        "name": "sstvecd",
        "value": 104,
        "desc": "'Sstvecd' (stvec supports Direct mode)."
      },
      {
        "name": "ssu64xl",
        "value": 105,
        "desc": "'Ssu64xl' (UXLEN=64 supported)."
      },
      {
        "name": "svade",
        "value": 106,
        "desc": "'Svade' (Raise exceptions on improper A/D bits)."
      },
      {
        "name": "svadu",
        "value": 107,
        "desc": "'Svadu' (Hardware A/D updates)."
      },
      {
        "name": "svbare",
        "value": 108,
        "desc": "'Svbare' $(satp mode Bare supported)."
      },
      {
        "name": "svinval",
        "value": 109,
        "desc": "'Svinval' (Fine-Grained Address-Translation Cache Invalidation)."
      },
      {
        "name": "svnapot",
        "value": 110,
        "desc": "'Svnapot' (NAPOT Translation Contiguity)."
      },
      {
        "name": "svpbmt",
        "value": 111,
        "desc": "'Svpbmt' (Page-Based Memory Types)."
      },
      {
        "name": "tagged-globals",
        "value": 112,
        "desc": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits."
      },
      {
        "name": "unaligned-scalar-mem",
        "value": 113,
        "desc": "Has reasonably performant unaligned scalar loads and stores."
      },
      {
        "name": "unaligned-vector-mem",
        "value": 114,
        "desc": "Has reasonably performant unaligned vector loads and stores."
      },
      {
        "name": "use-postra-scheduler",
        "value": 115,
        "desc": "Schedule again after register allocation."
      },
      {
        "name": "v",
        "value": 116,
        "desc": "'V' (Vector Extension for Application Processors)."
      },
      {
        "name": "ventana-veyron",
        "value": 117,
        "desc": "Ventana Veyron-Series processors."
      },
      {
        "name": "xcvalu",
        "value": 118,
        "desc": "'XCValu' (CORE-V ALU Operations)."
      },
      {
        "name": "xcvbi",
        "value": 119,
        "desc": "'XCVbi' (CORE-V Immediate Branching)."
      },
      {
        "name": "xcvbitmanip",
        "value": 120,
        "desc": "'XCVbitmanip' (CORE-V Bit Manipulation)."
      },
      {
        "name": "xcvelw",
        "value": 121,
        "desc": "'XCVelw' (CORE-V Event Load Word)."
      },
      {
        "name": "xcvmac",
        "value": 122,
        "desc": "'XCVmac' (CORE-V Multiply-Accumulate)."
      },
      {
        "name": "xcvmem",
        "value": 123,
        "desc": "'XCVmem' (CORE-V Post-incrementing Load & Store)."
      },
      {
        "name": "xcvsimd",
        "value": 124,
        "desc": "'XCVsimd' (CORE-V SIMD ALU)."
      },
      {
        "name": "xsfcease",
        "value": 125,
        "desc": "'XSfcease' (SiFive sf.cease Instruction)."
      },
      {
        "name": "xsfvcp",
        "value": 126,
        "desc": "'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions)."
      },
      {
        "name": "xsfvfnrclipxfqf",
        "value": 127,
        "desc": "'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions)."
      },
      {
        "name": "xsfvfwmaccqqq",
        "value": 128,
        "desc": "'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4))."
      },
      {
        "name": "xsfvqmaccdod",
        "value": 129,
        "desc": "'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2))."
      },
      {
        "name": "xsfvqmaccqoq",
        "value": 130,
        "desc": "'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4))."
      },
      {
        "name": "xsifivecdiscarddlone",
        "value": 131,
        "desc": "'XSiFivecdiscarddlone' (SiFive sf.cdiscard.d.l1 Instruction)."
      },
      {
        "name": "xsifivecflushdlone",
        "value": 132,
        "desc": "'XSiFivecflushdlone' (SiFive sf.cflush.d.l1 Instruction)."
      },
      {
        "name": "xtheadba",
        "value": 133,
        "desc": "'XTHeadBa' (T-Head address calculation instructions)."
      },
      {
        "name": "xtheadbb",
        "value": 134,
        "desc": "'XTHeadBb' (T-Head basic bit-manipulation instructions)."
      },
      {
        "name": "xtheadbs",
        "value": 135,
        "desc": "'XTHeadBs' (T-Head single-bit instructions)."
      },
      {
        "name": "xtheadcmo",
        "value": 136,
        "desc": "'XTHeadCmo' (T-Head cache management instructions)."
      },
      {
        "name": "xtheadcondmov",
        "value": 137,
        "desc": "'XTHeadCondMov' (T-Head conditional move instructions)."
      },
      {
        "name": "xtheadfmemidx",
        "value": 138,
        "desc": "'XTHeadFMemIdx' (T-Head FP Indexed Memory Operations)."
      },
      {
        "name": "xtheadmac",
        "value": 139,
        "desc": "'XTHeadMac' (T-Head Multiply-Accumulate Instructions)."
      },
      {
        "name": "xtheadmemidx",
        "value": 140,
        "desc": "'XTHeadMemIdx' (T-Head Indexed Memory Operations)."
      },
      {
        "name": "xtheadmempair",
        "value": 141,
        "desc": "'XTHeadMemPair' (T-Head two-GPR Memory Operations)."
      },
      {
        "name": "xtheadsync",
        "value": 142,
        "desc": "'XTHeadSync' (T-Head multicore synchronization instructions)."
      },
      {
        "name": "xtheadvdot",
        "value": 143,
        "desc": "'XTHeadVdot' (T-Head Vector Extensions for Dot)."
      },
      {
        "name": "xventanacondops",
        "value": 144,
        "desc": "'XVentanaCondOps' (Ventana Conditional Ops)."
      },
      {
        "name": "xwchc",
        "value": 145,
        "desc": "'Xwchc' (WCH/QingKe additional compressed opcodes)."
      },
      {
        "name": "za128rs",
        "value": 146,
        "desc": "'Za128rs' (Reservation Set Size of at Most 128 Bytes)."
      },
      {
        "name": "za64rs",
        "value": 147,
        "desc": "'Za64rs' (Reservation Set Size of at Most 64 Bytes)."
      },
      {
        "name": "zaamo",
        "value": 148,
        "desc": "'Zaamo' (Atomic Memory Operations)."
      },
      {
        "name": "zabha",
        "value": 149,
        "desc": "'Zabha' (Byte and Halfword Atomic Memory Operations)."
      },
      {
        "name": "zalrsc",
        "value": 150,
        "desc": "'Zalrsc' (Load-Reserved/Store-Conditional)."
      },
      {
        "name": "zama16b",
        "value": 151,
        "desc": "'Zama16b' (Atomic 16-byte misaligned loads, stores and AMOs)."
      },
      {
        "name": "zawrs",
        "value": 152,
        "desc": "'Zawrs' (Wait on Reservation Set)."
      },
      {
        "name": "zba",
        "value": 153,
        "desc": "'Zba' (Address Generation Instructions)."
      },
      {
        "name": "zbb",
        "value": 154,
        "desc": "'Zbb' (Basic Bit-Manipulation)."
      },
      {
        "name": "zbc",
        "value": 155,
        "desc": "'Zbc' (Carry-Less Multiplication)."
      },
      {
        "name": "zbkb",
        "value": 156,
        "desc": "'Zbkb' (Bitmanip instructions for Cryptography)."
      },
      {
        "name": "zbkc",
        "value": 157,
        "desc": "'Zbkc' (Carry-less multiply instructions for Cryptography)."
      },
      {
        "name": "zbkx",
        "value": 158,
        "desc": "'Zbkx' (Crossbar permutation instructions)."
      },
      {
        "name": "zbs",
        "value": 159,
        "desc": "'Zbs' (Single-Bit Instructions)."
      },
      {
        "name": "zca",
        "value": 160,
        "desc": "'Zca' (part of the C extension, excluding compressed floating point loads/stores)."
      },
      {
        "name": "zcb",
        "value": 161,
        "desc": "'Zcb' (Compressed basic bit manipulation instructions)."
      },
      {
        "name": "zcd",
        "value": 162,
        "desc": "'Zcd' (Compressed Double-Precision Floating-Point Instructions)."
      },
      {
        "name": "zce",
        "value": 163,
        "desc": "'Zce' (Compressed extensions for microcontrollers)."
      },
      {
        "name": "zcf",
        "value": 164,
        "desc": "'Zcf' (Compressed Single-Precision Floating-Point Instructions)."
      },
      {
        "name": "zcmop",
        "value": 165,
        "desc": "'Zcmop' (Compressed May-Be-Operations)."
      },
      {
        "name": "zcmp",
        "value": 166,
        "desc": "'Zcmp' (sequenced instructions for code-size reduction)."
      },
      {
        "name": "zcmt",
        "value": 167,
        "desc": "'Zcmt' (table jump instructions for code-size reduction)."
      },
      {
        "name": "zdinx",
        "value": 168,
        "desc": "'Zdinx' (Double in Integer)."
      },
      {
        "name": "zexth-fusion",
        "value": 169,
        "desc": "Enable SLLI+SRLI to be fused to zero extension of halfword."
      },
      {
        "name": "zextw-fusion",
        "value": 170,
        "desc": "Enable SLLI+SRLI to be fused to zero extension of word."
      },
      {
        "name": "zfa",
        "value": 171,
        "desc": "'Zfa' (Additional Floating-Point)."
      },
      {
        "name": "zfbfmin",
        "value": 172,
        "desc": "'Zfbfmin' (Scalar BF16 Converts)."
      },
      {
        "name": "zfh",
        "value": 173,
        "desc": "'Zfh' (Half-Precision Floating-Point)."
      },
      {
        "name": "zfhmin",
        "value": 174,
        "desc": "'Zfhmin' (Half-Precision Floating-Point Minimal)."
      },
      {
        "name": "zfinx",
        "value": 175,
        "desc": "'Zfinx' (Float in Integer)."
      },
      {
        "name": "zhinx",
        "value": 176,
        "desc": "'Zhinx' (Half Float in Integer)."
      },
      {
        "name": "zhinxmin",
        "value": 177,
        "desc": "'Zhinxmin' (Half Float in Integer Minimal)."
      },
      {
        "name": "zic64b",
        "value": 178,
        "desc": "'Zic64b' (Cache Block Size Is 64 Bytes)."
      },
      {
        "name": "zicbom",
        "value": 179,
        "desc": "'Zicbom' (Cache-Block Management Instructions)."
      },
      {
        "name": "zicbop",
        "value": 180,
        "desc": "'Zicbop' (Cache-Block Prefetch Instructions)."
      },
      {
        "name": "zicboz",
        "value": 181,
        "desc": "'Zicboz' (Cache-Block Zero Instructions)."
      },
      {
        "name": "ziccamoa",
        "value": 182,
        "desc": "'Ziccamoa' (Main Memory Supports All Atomics in A)."
      },
      {
        "name": "ziccif",
        "value": 183,
        "desc": "'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement)."
      },
      {
        "name": "zicclsm",
        "value": 184,
        "desc": "'Zicclsm' (Main Memory Supports Misaligned Loads/Stores)."
      },
      {
        "name": "ziccrse",
        "value": 185,
        "desc": "'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences)."
      },
      {
        "name": "zicntr",
        "value": 186,
        "desc": "'Zicntr' (Base Counters and Timers)."
      },
      {
        "name": "zicond",
        "value": 187,
        "desc": "'Zicond' (Integer Conditional Operations)."
      },
      {
        "name": "zicsr",
        "value": 188,
        "desc": "'zicsr' (CSRs)."
      },
      {
        "name": "zifencei",
        "value": 189,
        "desc": "'Zifencei' (fence.i)."
      },
      {
        "name": "zihintntl",
        "value": 190,
        "desc": "'Zihintntl' (Non-Temporal Locality Hints)."
      },
      {
        "name": "zihintpause",
        "value": 191,
        "desc": "'Zihintpause' (Pause Hint)."
      },
      {
        "name": "zihpm",
        "value": 192,
        "desc": "'Zihpm' (Hardware Performance Counters)."
      },
      {
        "name": "zimop",
        "value": 193,
        "desc": "'Zimop' (May-Be-Operations)."
      },
      {
        "name": "zk",
        "value": 194,
        "desc": "'Zk' (Standard scalar cryptography extension)."
      },
      {
        "name": "zkn",
        "value": 195,
        "desc": "'Zkn' (NIST Algorithm Suite)."
      },
      {
        "name": "zknd",
        "value": 196,
        "desc": "'Zknd' (NIST Suite: AES Decryption)."
      },
      {
        "name": "zkne",
        "value": 197,
        "desc": "'Zkne' (NIST Suite: AES Encryption)."
      },
      {
        "name": "zknh",
        "value": 198,
        "desc": "'Zknh' (NIST Suite: Hash Function Instructions)."
      },
      {
        "name": "zkr",
        "value": 199,
        "desc": "'Zkr' (Entropy Source Extension)."
      },
      {
        "name": "zks",
        "value": 200,
        "desc": "'Zks' (ShangMi Algorithm Suite)."
      },
      {
        "name": "zksed",
        "value": 201,
        "desc": "'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions)."
      },
      {
        "name": "zksh",
        "value": 202,
        "desc": "'Zksh' (ShangMi Suite: SM3 Hash Function Instructions)."
      },
      {
        "name": "zkt",
        "value": 203,
        "desc": "'Zkt' (Data Independent Execution Latency)."
      },
      {
        "name": "zmmul",
        "value": 204,
        "desc": "'Zmmul' (Integer Multiplication)."
      },
      {
        "name": "ztso",
        "value": 205,
        "desc": "'Ztso' (Memory Model"
      },
      {
        "name": "zvbb",
        "value": 206,
        "desc": "'Zvbb' (Vector basic bit-manipulation instructions)."
      },
      {
        "name": "zvbc",
        "value": 207,
        "desc": "'Zvbc' (Vector Carryless Multiplication)."
      },
      {
        "name": "zve32f",
        "value": 208,
        "desc": "'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension)."
      },
      {
        "name": "zve32x",
        "value": 209,
        "desc": "'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW)."
      },
      {
        "name": "zve64d",
        "value": 210,
        "desc": "'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension)."
      },
      {
        "name": "zve64f",
        "value": 211,
        "desc": "'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension)."
      },
      {
        "name": "zve64x",
        "value": 212,
        "desc": "'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW)."
      },
      {
        "name": "zvfbfmin",
        "value": 213,
        "desc": "'Zvbfmin' (Vector BF16 Converts)."
      },
      {
        "name": "zvfbfwma",
        "value": 214,
        "desc": "'Zvfbfwma' (Vector BF16 widening mul-add)."
      },
      {
        "name": "zvfh",
        "value": 215,
        "desc": "'Zvfh' (Vector Half-Precision Floating-Point)."
      },
      {
        "name": "zvfhmin",
        "value": 216,
        "desc": "'Zvfhmin' (Vector Half-Precision Floating-Point Minimal)."
      },
      {
        "name": "zvkb",
        "value": 217,
        "desc": "'Zvkb' (Vector Bit-manipulation used in Cryptography)."
      },
      {
        "name": "zvkg",
        "value": 218,
        "desc": "'Zvkg' (Vector GCM instructions for Cryptography)."
      },
      {
        "name": "zvkn",
        "value": 219,
        "desc": "'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt')."
      },
      {
        "name": "zvknc",
        "value": 220,
        "desc": "'Zvknc' (shorthand for 'Zvknc' and 'Zvbc')."
      },
      {
        "name": "zvkned",
        "value": 221,
        "desc": "'Zvkned' (Vector AES Encryption & Decryption (Single Round))."
      },
      {
        "name": "zvkng",
        "value": 222,
        "desc": "'zvkng' (shorthand for 'Zvkn' and 'Zvkg')."
      },
      {
        "name": "zvknha",
        "value": 223,
        "desc": "'Zvknha' (Vector SHA-2 (SHA-256 only))."
      },
      {
        "name": "zvknhb",
        "value": 224,
        "desc": "'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512))."
      },
      {
        "name": "zvks",
        "value": 225,
        "desc": "'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt')."
      },
      {
        "name": "zvksc",
        "value": 226,
        "desc": "'Zvksc' (shorthand for 'Zvks' and 'Zvbc')."
      },
      {
        "name": "zvksed",
        "value": 227,
        "desc": "'Zvksed' (SM4 Block Cipher Instructions)."
      },
      {
        "name": "zvksg",
        "value": 228,
        "desc": "'Zvksg' (shorthand for 'Zvks' and 'Zvkg')."
      },
      {
        "name": "zvksh",
        "value": 229,
        "desc": "'Zvksh' (SM3 Hash Function Instructions)."
      },
      {
        "name": "zvkt",
        "value": 230,
        "desc": "'Zvkt' (Vector Data-Independent Execution Latency)."
      },
      {
        "name": "zvl1024b",
        "value": 231,
        "desc": "'Zvl' (Minimum Vector Length) 1024."
      },
      {
        "name": "zvl128b",
        "value": 232,
        "desc": "'Zvl' (Minimum Vector Length) 128."
      },
      {
        "name": "zvl16384b",
        "value": 233,
        "desc": "'Zvl' (Minimum Vector Length) 16384."
      },
      {
        "name": "zvl2048b",
        "value": 234,
        "desc": "'Zvl' (Minimum Vector Length) 2048."
      },
      {
        "name": "zvl256b",
        "value": 235,
        "desc": "'Zvl' (Minimum Vector Length) 256."
      },
      {
        "name": "zvl32768b",
        "value": 236,
        "desc": "'Zvl' (Minimum Vector Length) 32768."
      },
      {
        "name": "zvl32b",
        "value": 237,
        "desc": "'Zvl' (Minimum Vector Length) 32."
      },
      {
        "name": "zvl4096b",
        "value": 238,
        "desc": "'Zvl' (Minimum Vector Length) 4096."
      },
      {
        "name": "zvl512b",
        "value": 239,
        "desc": "'Zvl' (Minimum Vector Length) 512."
      },
      {
        "name": "zvl64b",
        "value": 240,
        "desc": "'Zvl' (Minimum Vector Length) 64."
      },
      {
        "name": "zvl65536b",
        "value": 241,
        "desc": "'Zvl' (Minimum Vector Length) 65536."
      },
      {
        "name": "zvl8192b",
        "value": 242,
        "desc": "'Zvl' (Minimum Vector Length) 8192."
      }
    ],
    "riscv64": [
      {
        "name": "32bit",
        "value": 0,
        "desc": "Implements RV32."
      },
      {
        "name": "64bit",
        "value": 1,
        "desc": "Implements RV64."
      },
      {
        "name": "a",
        "value": 2,
        "desc": "'A' (Atomic Instructions)."
      },
      {
        "name": "auipc-addi-fusion",
        "value": 3,
        "desc": "Enable AUIPC+ADDI macrofusion."
      },
      {
        "name": "b",
        "value": 4,
        "desc": "'B' (the collection of the Zba, Zbb, Zbs extensions)."
      },
      {
        "name": "c",
        "value": 5,
        "desc": "'C' (Compressed Instructions)."
      },
      {
        "name": "conditional-cmv-fusion",
        "value": 6,
        "desc": "Enable branch+c.mv fusion."
      },
      {
        "name": "d",
        "value": 7,
        "desc": "'D' (Double-Precision Floating-Point)."
      },
      {
        "name": "dlen-factor-2",
        "value": 8,
        "desc": "Vector unit DLEN(data path width) is half of VLEN."
      },
      {
        "name": "e",
        "value": 9,
        "desc": "Implements RV{32,64}E (provides 16 rather than 32 GPRs)."
      },
      {
        "name": "experimental",
        "value": 10,
        "desc": "Experimental intrinsics."
      },
      {
        "name": "experimental-rva23s64",
        "value": 11,
        "desc": "RISC-V experimental-rva23s64 profile."
      },
      {
        "name": "experimental-rva23u64",
        "value": 12,
        "desc": "RISC-V experimental-rva23u64 profile."
      },
      {
        "name": "experimental-rvb23s64",
        "value": 13,
        "desc": "RISC-V experimental-rvb23s64 profile."
      },
      {
        "name": "experimental-rvb23u64",
        "value": 14,
        "desc": "RISC-V experimental-rvb23u64 profile."
      },
      {
        "name": "experimental-rvm23u32",
        "value": 15,
        "desc": "RISC-V experimental-rvm23u32 profile."
      },
      {
        "name": "experimental-smmpm",
        "value": 16,
        "desc": "'Smmpm' (Machine-level Pointer Masking for M-mode)."
      },
      {
        "name": "experimental-smnpm",
        "value": 17,
        "desc": "'Smnpm' (Machine-level Pointer Masking for next lower privilege mode)."
      },
      {
        "name": "experimental-ssnpm",
        "value": 18,
        "desc": "'Ssnpm' (Supervisor-level Pointer Masking for next lower privilege mode)."
      },
      {
        "name": "experimental-sspm",
        "value": 19,
        "desc": "'Sspm' (Indicates Supervisor-mode Pointer Masking)."
      },
      {
        "name": "experimental-ssqosid",
        "value": 20,
        "desc": "'Ssqosid' (Quality-of-Service (QoS) Identifiers)."
      },
      {
        "name": "experimental-supm",
        "value": 21,
        "desc": "'Supm' (Indicates User-mode Pointer Masking)."
      },
      {
        "name": "experimental-zacas",
        "value": 22,
        "desc": "'Zacas' (Atomic Compare-And-Swap Instructions)."
      },
      {
        "name": "experimental-zalasr",
        "value": 23,
        "desc": "'Zalasr' (Load-Acquire and Store-Release Instructions)."
      },
      {
        "name": "experimental-zicfilp",
        "value": 24,
        "desc": "'Zicfilp' (Landing pad)."
      },
      {
        "name": "experimental-zicfiss",
        "value": 25,
        "desc": "'Zicfiss' (Shadow stack)."
      },
      {
        "name": "f",
        "value": 26,
        "desc": "'F' (Single-Precision Floating-Point)."
      },
      {
        "name": "forced-atomics",
        "value": 27,
        "desc": "Assume that lock-free native-width atomics are available."
      },
      {
        "name": "forced-sw-shadow-stack",
        "value": 28,
        "desc": "Implement shadow stack with software.."
      },
      {
        "name": "h",
        "value": 29,
        "desc": "'H' (Hypervisor)."
      },
      {
        "name": "i",
        "value": 30,
        "desc": "'I' (Base Integer Instruction Set)."
      },
      {
        "name": "ld-add-fusion",
        "value": 31,
        "desc": "Enable LD+ADD macrofusion."
      },
      {
        "name": "lui-addi-fusion",
        "value": 32,
        "desc": "Enable LUI+ADDI macro fusion."
      },
      {
        "name": "m",
        "value": 33,
        "desc": "'M' (Integer Multiplication and Division)."
      },
      {
        "name": "no-default-unroll",
        "value": 34,
        "desc": "Disable default unroll preference.."
      },
      {
        "name": "no-rvc-hints",
        "value": 35,
        "desc": "Disable RVC Hint Instructions.."
      },
      {
        "name": "no-sink-splat-operands",
        "value": 36,
        "desc": "Disable sink splat operands to enable .vx, .vf,.wx, and .wf instructions."
      },
      {
        "name": "no-trailing-seq-cst-fence",
        "value": 37,
        "desc": "Disable trailing fence for seq-cst store.."
      },
      {
        "name": "optimized-zero-stride-load",
        "value": 38,
        "desc": "Optimized (perform fewer memory operations)zero-stride vector load."
      },
      {
        "name": "predictable-select-expensive",
        "value": 39,
        "desc": "Prefer likely predicted branches over selects."
      },
      {
        "name": "prefer-w-inst",
        "value": 40,
        "desc": "Prefer instructions with W suffix."
      },
      {
        "name": "relax",
        "value": 41,
        "desc": "Enable Linker relaxation.."
      },
      {
        "name": "reserve-x1",
        "value": 42,
        "desc": "Reserve X1."
      },
      {
        "name": "reserve-x10",
        "value": 43,
        "desc": "Reserve X10."
      },
      {
        "name": "reserve-x11",
        "value": 44,
        "desc": "Reserve X11."
      },
      {
        "name": "reserve-x12",
        "value": 45,
        "desc": "Reserve X12."
      },
      {
        "name": "reserve-x13",
        "value": 46,
        "desc": "Reserve X13."
      },
      {
        "name": "reserve-x14",
        "value": 47,
        "desc": "Reserve X14."
      },
      {
        "name": "reserve-x15",
        "value": 48,
        "desc": "Reserve X15."
      },
      {
        "name": "reserve-x16",
        "value": 49,
        "desc": "Reserve X16."
      },
      {
        "name": "reserve-x17",
        "value": 50,
        "desc": "Reserve X17."
      },
      {
        "name": "reserve-x18",
        "value": 51,
        "desc": "Reserve X18."
      },
      {
        "name": "reserve-x19",
        "value": 52,
        "desc": "Reserve X19."
      },
      {
        "name": "reserve-x2",
        "value": 53,
        "desc": "Reserve X2."
      },
      {
        "name": "reserve-x20",
        "value": 54,
        "desc": "Reserve X20."
      },
      {
        "name": "reserve-x21",
        "value": 55,
        "desc": "Reserve X21."
      },
      {
        "name": "reserve-x22",
        "value": 56,
        "desc": "Reserve X22."
      },
      {
        "name": "reserve-x23",
        "value": 57,
        "desc": "Reserve X23."
      },
      {
        "name": "reserve-x24",
        "value": 58,
        "desc": "Reserve X24."
      },
      {
        "name": "reserve-x25",
        "value": 59,
        "desc": "Reserve X25."
      },
      {
        "name": "reserve-x26",
        "value": 60,
        "desc": "Reserve X26."
      },
      {
        "name": "reserve-x27",
        "value": 61,
        "desc": "Reserve X27."
      },
      {
        "name": "reserve-x28",
        "value": 62,
        "desc": "Reserve X28."
      },
      {
        "name": "reserve-x29",
        "value": 63,
        "desc": "Reserve X29."
      },
      {
        "name": "reserve-x3",
        "value": 64,
        "desc": "Reserve X3."
      },
      {
        "name": "reserve-x30",
        "value": 65,
        "desc": "Reserve X30."
      },
      {
        "name": "reserve-x31",
        "value": 66,
        "desc": "Reserve X31."
      },
      {
        "name": "reserve-x4",
        "value": 67,
        "desc": "Reserve X4."
      },
      {
        "name": "reserve-x5",
        "value": 68,
        "desc": "Reserve X5."
      },
      {
        "name": "reserve-x6",
        "value": 69,
        "desc": "Reserve X6."
      },
      {
        "name": "reserve-x7",
        "value": 70,
        "desc": "Reserve X7."
      },
      {
        "name": "reserve-x8",
        "value": 71,
        "desc": "Reserve X8."
      },
      {
        "name": "reserve-x9",
        "value": 72,
        "desc": "Reserve X9."
      },
      {
        "name": "rva20s64",
        "value": 73,
        "desc": "RISC-V rva20s64 profile."
      },
      {
        "name": "rva20u64",
        "value": 74,
        "desc": "RISC-V rva20u64 profile."
      },
      {
        "name": "rva22s64",
        "value": 75,
        "desc": "RISC-V rva22s64 profile."
      },
      {
        "name": "rva22u64",
        "value": 76,
        "desc": "RISC-V rva22u64 profile."
      },
      {
        "name": "rvi20u32",
        "value": 77,
        "desc": "RISC-V rvi20u32 profile."
      },
      {
        "name": "rvi20u64",
        "value": 78,
        "desc": "RISC-V rvi20u64 profile."
      },
      {
        "name": "save-restore",
        "value": 79,
        "desc": "Enable save/restore.."
      },
      {
        "name": "shcounterenw",
        "value": 80,
        "desc": "'Shcounterenw' (Support writeable hcounteren enable bit for any hpmcounter that is not read-only zero)."
      },
      {
        "name": "shgatpa",
        "value": 81,
        "desc": "'Sgatpa' (SvNNx4 mode supported for all modes supported by satp, as well as Bare)."
      },
      {
        "name": "shifted-zextw-fusion",
        "value": 82,
        "desc": "Enable SLLI+SRLI to be fused when computing (shifted) word zero extension."
      },
      {
        "name": "short-forward-branch-opt",
        "value": 83,
        "desc": "Enable short forward branch optimization."
      },
      {
        "name": "shtvala",
        "value": 84,
        "desc": "'Shtvala' (htval provides all needed values)."
      },
      {
        "name": "shvsatpa",
        "value": 85,
        "desc": "'Svsatpa' (vsatp supports all modes supported by satp)."
      },
      {
        "name": "shvstvala",
        "value": 86,
        "desc": "'Shvstvala' (vstval provides all needed values)."
      },
      {
        "name": "shvstvecd",
        "value": 87,
        "desc": "'Shvstvecd' (vstvec supports Direct mode)."
      },
      {
        "name": "sifive7",
        "value": 88,
        "desc": "SiFive 7-Series processors."
      },
      {
        "name": "smaia",
        "value": 89,
        "desc": "'Smaia' (Advanced Interrupt Architecture Machine Level)."
      },
      {
        "name": "smcdeleg",
        "value": 90,
        "desc": "'Smcdeleg' (Counter Delegation Machine Level)."
      },
      {
        "name": "smcsrind",
        "value": 91,
        "desc": "'Smcsrind' (Indirect CSR Access Machine Level)."
      },
      {
        "name": "smepmp",
        "value": 92,
        "desc": "'Smepmp' (Enhanced Physical Memory Protection)."
      },
      {
        "name": "smstateen",
        "value": 93,
        "desc": "'Smstateen' (Machine-mode view of the state-enable extension)."
      },
      {
        "name": "ssaia",
        "value": 94,
        "desc": "'Ssaia' (Advanced Interrupt Architecture Supervisor Level)."
      },
      {
        "name": "ssccfg",
        "value": 95,
        "desc": "'Ssccfg' (Counter Configuration Supervisor Level)."
      },
      {
        "name": "ssccptr",
        "value": 96,
        "desc": "'Ssccptr' (Main memory supports page table reads)."
      },
      {
        "name": "sscofpmf",
        "value": 97,
        "desc": "'Sscofpmf' (Count Overflow and Mode-Based Filtering)."
      },
      {
        "name": "sscounterenw",
        "value": 98,
        "desc": "'Sscounterenw' (Support writeable scounteren enable bit for any hpmcounter that is not read-only zero)."
      },
      {
        "name": "sscsrind",
        "value": 99,
        "desc": "'Sscsrind' (Indirect CSR Access Supervisor Level)."
      },
      {
        "name": "ssstateen",
        "value": 100,
        "desc": "'Ssstateen' (Supervisor-mode view of the state-enable extension)."
      },
      {
        "name": "ssstrict",
        "value": 101,
        "desc": "'Ssstrict' (No non-conforming extensions are present)."
      },
      {
        "name": "sstc",
        "value": 102,
        "desc": "'Sstc' (Supervisor-mode timer interrupts)."
      },
      {
        "name": "sstvala",
        "value": 103,
        "desc": "'Sstvala' (stval provides all needed values)."
      },
      {
        "name": "sstvecd",
        "value": 104,
        "desc": "'Sstvecd' (stvec supports Direct mode)."
      },
      {
        "name": "ssu64xl",
        "value": 105,
        "desc": "'Ssu64xl' (UXLEN=64 supported)."
      },
      {
        "name": "svade",
        "value": 106,
        "desc": "'Svade' (Raise exceptions on improper A/D bits)."
      },
      {
        "name": "svadu",
        "value": 107,
        "desc": "'Svadu' (Hardware A/D updates)."
      },
      {
        "name": "svbare",
        "value": 108,
        "desc": "'Svbare' $(satp mode Bare supported)."
      },
      {
        "name": "svinval",
        "value": 109,
        "desc": "'Svinval' (Fine-Grained Address-Translation Cache Invalidation)."
      },
      {
        "name": "svnapot",
        "value": 110,
        "desc": "'Svnapot' (NAPOT Translation Contiguity)."
      },
      {
        "name": "svpbmt",
        "value": 111,
        "desc": "'Svpbmt' (Page-Based Memory Types)."
      },
      {
        "name": "tagged-globals",
        "value": 112,
        "desc": "Use an instruction sequence for taking the address of a global that allows a memory tag in the upper address bits."
      },
      {
        "name": "unaligned-scalar-mem",
        "value": 113,
        "desc": "Has reasonably performant unaligned scalar loads and stores."
      },
      {
        "name": "unaligned-vector-mem",
        "value": 114,
        "desc": "Has reasonably performant unaligned vector loads and stores."
      },
      {
        "name": "use-postra-scheduler",
        "value": 115,
        "desc": "Schedule again after register allocation."
      },
      {
        "name": "v",
        "value": 116,
        "desc": "'V' (Vector Extension for Application Processors)."
      },
      {
        "name": "ventana-veyron",
        "value": 117,
        "desc": "Ventana Veyron-Series processors."
      },
      {
        "name": "xcvalu",
        "value": 118,
        "desc": "'XCValu' (CORE-V ALU Operations)."
      },
      {
        "name": "xcvbi",
        "value": 119,
        "desc": "'XCVbi' (CORE-V Immediate Branching)."
      },
      {
        "name": "xcvbitmanip",
        "value": 120,
        "desc": "'XCVbitmanip' (CORE-V Bit Manipulation)."
      },
      {
        "name": "xcvelw",
        "value": 121,
        "desc": "'XCVelw' (CORE-V Event Load Word)."
      },
      {
        "name": "xcvmac",
        "value": 122,
        "desc": "'XCVmac' (CORE-V Multiply-Accumulate)."
      },
      {
        "name": "xcvmem",
        "value": 123,
        "desc": "'XCVmem' (CORE-V Post-incrementing Load & Store)."
      },
      {
        "name": "xcvsimd",
        "value": 124,
        "desc": "'XCVsimd' (CORE-V SIMD ALU)."
      },
      {
        "name": "xsfcease",
        "value": 125,
        "desc": "'XSfcease' (SiFive sf.cease Instruction)."
      },
      {
        "name": "xsfvcp",
        "value": 126,
        "desc": "'XSfvcp' (SiFive Custom Vector Coprocessor Interface Instructions)."
      },
      {
        "name": "xsfvfnrclipxfqf",
        "value": 127,
        "desc": "'XSfvfnrclipxfqf' (SiFive FP32-to-int8 Ranged Clip Instructions)."
      },
      {
        "name": "xsfvfwmaccqqq",
        "value": 128,
        "desc": "'XSfvfwmaccqqq' (SiFive Matrix Multiply Accumulate Instruction and 4-by-4))."
      },
      {
        "name": "xsfvqmaccdod",
        "value": 129,
        "desc": "'XSfvqmaccdod' (SiFive Int8 Matrix Multiplication Instructions (2-by-8 and 8-by-2))."
      },
      {
        "name": "xsfvqmaccqoq",
        "value": 130,
        "desc": "'XSfvqmaccqoq' (SiFive Int8 Matrix Multiplication Instructions (4-by-8 and 8-by-4))."
      },
      {
        "name": "xsifivecdiscarddlone",
        "value": 131,
        "desc": "'XSiFivecdiscarddlone' (SiFive sf.cdiscard.d.l1 Instruction)."
      },
      {
        "name": "xsifivecflushdlone",
        "value": 132,
        "desc": "'XSiFivecflushdlone' (SiFive sf.cflush.d.l1 Instruction)."
      },
      {
        "name": "xtheadba",
        "value": 133,
        "desc": "'XTHeadBa' (T-Head address calculation instructions)."
      },
      {
        "name": "xtheadbb",
        "value": 134,
        "desc": "'XTHeadBb' (T-Head basic bit-manipulation instructions)."
      },
      {
        "name": "xtheadbs",
        "value": 135,
        "desc": "'XTHeadBs' (T-Head single-bit instructions)."
      },
      {
        "name": "xtheadcmo",
        "value": 136,
        "desc": "'XTHeadCmo' (T-Head cache management instructions)."
      },
      {
        "name": "xtheadcondmov",
        "value": 137,
        "desc": "'XTHeadCondMov' (T-Head conditional move instructions)."
      },
      {
        "name": "xtheadfmemidx",
        "value": 138,
        "desc": "'XTHeadFMemIdx' (T-Head FP Indexed Memory Operations)."
      },
      {
        "name": "xtheadmac",
        "value": 139,
        "desc": "'XTHeadMac' (T-Head Multiply-Accumulate Instructions)."
      },
      {
        "name": "xtheadmemidx",
        "value": 140,
        "desc": "'XTHeadMemIdx' (T-Head Indexed Memory Operations)."
      },
      {
        "name": "xtheadmempair",
        "value": 141,
        "desc": "'XTHeadMemPair' (T-Head two-GPR Memory Operations)."
      },
      {
        "name": "xtheadsync",
        "value": 142,
        "desc": "'XTHeadSync' (T-Head multicore synchronization instructions)."
      },
      {
        "name": "xtheadvdot",
        "value": 143,
        "desc": "'XTHeadVdot' (T-Head Vector Extensions for Dot)."
      },
      {
        "name": "xventanacondops",
        "value": 144,
        "desc": "'XVentanaCondOps' (Ventana Conditional Ops)."
      },
      {
        "name": "xwchc",
        "value": 145,
        "desc": "'Xwchc' (WCH/QingKe additional compressed opcodes)."
      },
      {
        "name": "za128rs",
        "value": 146,
        "desc": "'Za128rs' (Reservation Set Size of at Most 128 Bytes)."
      },
      {
        "name": "za64rs",
        "value": 147,
        "desc": "'Za64rs' (Reservation Set Size of at Most 64 Bytes)."
      },
      {
        "name": "zaamo",
        "value": 148,
        "desc": "'Zaamo' (Atomic Memory Operations)."
      },
      {
        "name": "zabha",
        "value": 149,
        "desc": "'Zabha' (Byte and Halfword Atomic Memory Operations)."
      },
      {
        "name": "zalrsc",
        "value": 150,
        "desc": "'Zalrsc' (Load-Reserved/Store-Conditional)."
      },
      {
        "name": "zama16b",
        "value": 151,
        "desc": "'Zama16b' (Atomic 16-byte misaligned loads, stores and AMOs)."
      },
      {
        "name": "zawrs",
        "value": 152,
        "desc": "'Zawrs' (Wait on Reservation Set)."
      },
      {
        "name": "zba",
        "value": 153,
        "desc": "'Zba' (Address Generation Instructions)."
      },
      {
        "name": "zbb",
        "value": 154,
        "desc": "'Zbb' (Basic Bit-Manipulation)."
      },
      {
        "name": "zbc",
        "value": 155,
        "desc": "'Zbc' (Carry-Less Multiplication)."
      },
      {
        "name": "zbkb",
        "value": 156,
        "desc": "'Zbkb' (Bitmanip instructions for Cryptography)."
      },
      {
        "name": "zbkc",
        "value": 157,
        "desc": "'Zbkc' (Carry-less multiply instructions for Cryptography)."
      },
      {
        "name": "zbkx",
        "value": 158,
        "desc": "'Zbkx' (Crossbar permutation instructions)."
      },
      {
        "name": "zbs",
        "value": 159,
        "desc": "'Zbs' (Single-Bit Instructions)."
      },
      {
        "name": "zca",
        "value": 160,
        "desc": "'Zca' (part of the C extension, excluding compressed floating point loads/stores)."
      },
      {
        "name": "zcb",
        "value": 161,
        "desc": "'Zcb' (Compressed basic bit manipulation instructions)."
      },
      {
        "name": "zcd",
        "value": 162,
        "desc": "'Zcd' (Compressed Double-Precision Floating-Point Instructions)."
      },
      {
        "name": "zce",
        "value": 163,
        "desc": "'Zce' (Compressed extensions for microcontrollers)."
      },
      {
        "name": "zcf",
        "value": 164,
        "desc": "'Zcf' (Compressed Single-Precision Floating-Point Instructions)."
      },
      {
        "name": "zcmop",
        "value": 165,
        "desc": "'Zcmop' (Compressed May-Be-Operations)."
      },
      {
        "name": "zcmp",
        "value": 166,
        "desc": "'Zcmp' (sequenced instructions for code-size reduction)."
      },
      {
        "name": "zcmt",
        "value": 167,
        "desc": "'Zcmt' (table jump instructions for code-size reduction)."
      },
      {
        "name": "zdinx",
        "value": 168,
        "desc": "'Zdinx' (Double in Integer)."
      },
      {
        "name": "zexth-fusion",
        "value": 169,
        "desc": "Enable SLLI+SRLI to be fused to zero extension of halfword."
      },
      {
        "name": "zextw-fusion",
        "value": 170,
        "desc": "Enable SLLI+SRLI to be fused to zero extension of word."
      },
      {
        "name": "zfa",
        "value": 171,
        "desc": "'Zfa' (Additional Floating-Point)."
      },
      {
        "name": "zfbfmin",
        "value": 172,
        "desc": "'Zfbfmin' (Scalar BF16 Converts)."
      },
      {
        "name": "zfh",
        "value": 173,
        "desc": "'Zfh' (Half-Precision Floating-Point)."
      },
      {
        "name": "zfhmin",
        "value": 174,
        "desc": "'Zfhmin' (Half-Precision Floating-Point Minimal)."
      },
      {
        "name": "zfinx",
        "value": 175,
        "desc": "'Zfinx' (Float in Integer)."
      },
      {
        "name": "zhinx",
        "value": 176,
        "desc": "'Zhinx' (Half Float in Integer)."
      },
      {
        "name": "zhinxmin",
        "value": 177,
        "desc": "'Zhinxmin' (Half Float in Integer Minimal)."
      },
      {
        "name": "zic64b",
        "value": 178,
        "desc": "'Zic64b' (Cache Block Size Is 64 Bytes)."
      },
      {
        "name": "zicbom",
        "value": 179,
        "desc": "'Zicbom' (Cache-Block Management Instructions)."
      },
      {
        "name": "zicbop",
        "value": 180,
        "desc": "'Zicbop' (Cache-Block Prefetch Instructions)."
      },
      {
        "name": "zicboz",
        "value": 181,
        "desc": "'Zicboz' (Cache-Block Zero Instructions)."
      },
      {
        "name": "ziccamoa",
        "value": 182,
        "desc": "'Ziccamoa' (Main Memory Supports All Atomics in A)."
      },
      {
        "name": "ziccif",
        "value": 183,
        "desc": "'Ziccif' (Main Memory Supports Instruction Fetch with Atomicity Requirement)."
      },
      {
        "name": "zicclsm",
        "value": 184,
        "desc": "'Zicclsm' (Main Memory Supports Misaligned Loads/Stores)."
      },
      {
        "name": "ziccrse",
        "value": 185,
        "desc": "'Ziccrse' (Main Memory Supports Forward Progress on LR/SC Sequences)."
      },
      {
        "name": "zicntr",
        "value": 186,
        "desc": "'Zicntr' (Base Counters and Timers)."
      },
      {
        "name": "zicond",
        "value": 187,
        "desc": "'Zicond' (Integer Conditional Operations)."
      },
      {
        "name": "zicsr",
        "value": 188,
        "desc": "'zicsr' (CSRs)."
      },
      {
        "name": "zifencei",
        "value": 189,
        "desc": "'Zifencei' (fence.i)."
      },
      {
        "name": "zihintntl",
        "value": 190,
        "desc": "'Zihintntl' (Non-Temporal Locality Hints)."
      },
      {
        "name": "zihintpause",
        "value": 191,
        "desc": "'Zihintpause' (Pause Hint)."
      },
      {
        "name": "zihpm",
        "value": 192,
        "desc": "'Zihpm' (Hardware Performance Counters)."
      },
      {
        "name": "zimop",
        "value": 193,
        "desc": "'Zimop' (May-Be-Operations)."
      },
      {
        "name": "zk",
        "value": 194,
        "desc": "'Zk' (Standard scalar cryptography extension)."
      },
      {
        "name": "zkn",
        "value": 195,
        "desc": "'Zkn' (NIST Algorithm Suite)."
      },
      {
        "name": "zknd",
        "value": 196,
        "desc": "'Zknd' (NIST Suite: AES Decryption)."
      },
      {
        "name": "zkne",
        "value": 197,
        "desc": "'Zkne' (NIST Suite: AES Encryption)."
      },
      {
        "name": "zknh",
        "value": 198,
        "desc": "'Zknh' (NIST Suite: Hash Function Instructions)."
      },
      {
        "name": "zkr",
        "value": 199,
        "desc": "'Zkr' (Entropy Source Extension)."
      },
      {
        "name": "zks",
        "value": 200,
        "desc": "'Zks' (ShangMi Algorithm Suite)."
      },
      {
        "name": "zksed",
        "value": 201,
        "desc": "'Zksed' (ShangMi Suite: SM4 Block Cipher Instructions)."
      },
      {
        "name": "zksh",
        "value": 202,
        "desc": "'Zksh' (ShangMi Suite: SM3 Hash Function Instructions)."
      },
      {
        "name": "zkt",
        "value": 203,
        "desc": "'Zkt' (Data Independent Execution Latency)."
      },
      {
        "name": "zmmul",
        "value": 204,
        "desc": "'Zmmul' (Integer Multiplication)."
      },
      {
        "name": "ztso",
        "value": 205,
        "desc": "'Ztso' (Memory Model"
      },
      {
        "name": "zvbb",
        "value": 206,
        "desc": "'Zvbb' (Vector basic bit-manipulation instructions)."
      },
      {
        "name": "zvbc",
        "value": 207,
        "desc": "'Zvbc' (Vector Carryless Multiplication)."
      },
      {
        "name": "zve32f",
        "value": 208,
        "desc": "'Zve32f' (Vector Extensions for Embedded Processors with maximal 32 EEW and F extension)."
      },
      {
        "name": "zve32x",
        "value": 209,
        "desc": "'Zve32x' (Vector Extensions for Embedded Processors with maximal 32 EEW)."
      },
      {
        "name": "zve64d",
        "value": 210,
        "desc": "'Zve64d' (Vector Extensions for Embedded Processors with maximal 64 EEW, F and D extension)."
      },
      {
        "name": "zve64f",
        "value": 211,
        "desc": "'Zve64f' (Vector Extensions for Embedded Processors with maximal 64 EEW and F extension)."
      },
      {
        "name": "zve64x",
        "value": 212,
        "desc": "'Zve64x' (Vector Extensions for Embedded Processors with maximal 64 EEW)."
      },
      {
        "name": "zvfbfmin",
        "value": 213,
        "desc": "'Zvbfmin' (Vector BF16 Converts)."
      },
      {
        "name": "zvfbfwma",
        "value": 214,
        "desc": "'Zvfbfwma' (Vector BF16 widening mul-add)."
      },
      {
        "name": "zvfh",
        "value": 215,
        "desc": "'Zvfh' (Vector Half-Precision Floating-Point)."
      },
      {
        "name": "zvfhmin",
        "value": 216,
        "desc": "'Zvfhmin' (Vector Half-Precision Floating-Point Minimal)."
      },
      {
        "name": "zvkb",
        "value": 217,
        "desc": "'Zvkb' (Vector Bit-manipulation used in Cryptography)."
      },
      {
        "name": "zvkg",
        "value": 218,
        "desc": "'Zvkg' (Vector GCM instructions for Cryptography)."
      },
      {
        "name": "zvkn",
        "value": 219,
        "desc": "'Zvkn' (shorthand for 'Zvkned', 'Zvknhb', 'Zvkb', and 'Zvkt')."
      },
      {
        "name": "zvknc",
        "value": 220,
        "desc": "'Zvknc' (shorthand for 'Zvknc' and 'Zvbc')."
      },
      {
        "name": "zvkned",
        "value": 221,
        "desc": "'Zvkned' (Vector AES Encryption & Decryption (Single Round))."
      },
      {
        "name": "zvkng",
        "value": 222,
        "desc": "'zvkng' (shorthand for 'Zvkn' and 'Zvkg')."
      },
      {
        "name": "zvknha",
        "value": 223,
        "desc": "'Zvknha' (Vector SHA-2 (SHA-256 only))."
      },
      {
        "name": "zvknhb",
        "value": 224,
        "desc": "'Zvknhb' (Vector SHA-2 (SHA-256 and SHA-512))."
      },
      {
        "name": "zvks",
        "value": 225,
        "desc": "'Zvks' (shorthand for 'Zvksed', 'Zvksh', 'Zvkb', and 'Zvkt')."
      },
      {
        "name": "zvksc",
        "value": 226,
        "desc": "'Zvksc' (shorthand for 'Zvks' and 'Zvbc')."
      },
      {
        "name": "zvksed",
        "value": 227,
        "desc": "'Zvksed' (SM4 Block Cipher Instructions)."
      },
      {
        "name": "zvksg",
        "value": 228,
        "desc": "'Zvksg' (shorthand for 'Zvks' and 'Zvkg')."
      },
      {
        "name": "zvksh",
        "value": 229,
        "desc": "'Zvksh' (SM3 Hash Function Instructions)."
      },
      {
        "name": "zvkt",
        "value": 230,
        "desc": "'Zvkt' (Vector Data-Independent Execution Latency)."
      },
      {
        "name": "zvl1024b",
        "value": 231,
        "desc": "'Zvl' (Minimum Vector Length) 1024."
      },
      {
        "name": "zvl128b",
        "value": 232,
        "desc": "'Zvl' (Minimum Vector Length) 128."
      },
      {
        "name": "zvl16384b",
        "value": 233,
        "desc": "'Zvl' (Minimum Vector Length) 16384."
      },
      {
        "name": "zvl2048b",
        "value": 234,
        "desc": "'Zvl' (Minimum Vector Length) 2048."
      },
      {
        "name": "zvl256b",
        "value": 235,
        "desc": "'Zvl' (Minimum Vector Length) 256."
      },
      {
        "name": "zvl32768b",
        "value": 236,
        "desc": "'Zvl' (Minimum Vector Length) 32768."
      },
      {
        "name": "zvl32b",
        "value": 237,
        "desc": "'Zvl' (Minimum Vector Length) 32."
      },
      {
        "name": "zvl4096b",
        "value": 238,
        "desc": "'Zvl' (Minimum Vector Length) 4096."
      },
      {
        "name": "zvl512b",
        "value": 239,
        "desc": "'Zvl' (Minimum Vector Length) 512."
      },
      {
        "name": "zvl64b",
        "value": 240,
        "desc": "'Zvl' (Minimum Vector Length) 64."
      },
      {
        "name": "zvl65536b",
        "value": 241,
        "desc": "'Zvl' (Minimum Vector Length) 65536."
      },
      {
        "name": "zvl8192b",
        "value": 242,
        "desc": "'Zvl' (Minimum Vector Length) 8192."
      }
    ]
  },
  "architecture_categories": [
    {
      "name": "unknown",
      "value": 0,
      "desc": "Unknown category"
    },
    {
      "name": "cpu",
      "value": 1,
      "desc": "Central processing unit"
    },
    {
      "name": "gpu",
      "value": 2,
      "desc": "Graphics processing unit"
    },
    {
      "name": "npu",
      "value": 3,
      "desc": "Neural processing unit (AI accelerator)"
    }
  ],
  "architecture_families": {
    "unknown": [
      {
        "name": "generic",
        "value": 0,
        "desc": "Generic family"
      }
    ],
    "cpu": [
      {
        "name": "generic",
        "value": 0,
        "desc": "Generic CPU"
      },
      {
        "name": "intel",
        "value": 1,
        "desc": "Intel main line of CPUs"
      },
      {
        "name": "intel_atom",
        "value": 2,
        "desc": "Intel Atom/Low-power line of CPUs"
      },
      {
        "name": "amd",
        "value": 3,
        "desc": "AMD CPU"
      },
      {
        "name": "arm_a",
        "value": 4,
        "desc": "ARM Cortex-A CPU family"
      },
      {
        "name": "arm_m",
        "value": 5,
        "desc": "ARM Cortex-M CPU family"
      },
      {
        "name": "arm_r",
        "value": 6,
        "desc": "ARM Cortex-R CPU family"
      },
      {
        "name": "codasip_lp",
        "value": 7,
        "desc": "Codasip low-power cores"
      },
      {
        "name": "codasip_hp",
        "value": 8,
        "desc": "Codasip high-performance cores"
      },
      {
        "name": "codasip_ap",
        "value": 9,
        "desc": "Codasip application cores"
      },
      {
        "name": "sifive_e2",
        "value": 10,
        "desc": "SiFive Essential 2-series"
      },
      {
        "name": "sifive_e6",
        "value": 11,
        "desc": "SiFive Essential 6-series"
      },
      {
        "name": "sifive_e7",
        "value": 12,
        "desc": "SiFive Essential 7-series"
      },
      {
        "name": "sifive_x200",
        "value": 13,
        "desc": "SiFive Essential X200 Series"
      },
      {
        "name": "sifive_x300",
        "value": 14,
        "desc": "SiFive Essential X300 Series"
      },
      {
        "name": "sifive_xm",
        "value": 15,
        "desc": "SiFive Essential XM Series"
      },
      {
        "name": "sifive_p400",
        "value": 16,
        "desc": "SiFive Essential P400 Series"
      },
      {
        "name": "sifive_p500",
        "value": 17,
        "desc": "SiFive Essential P500 Series"
      },
      {
        "name": "sifive_p600",
        "value": 18,
        "desc": "SiFive Essential P600 Series"
      },
      {
        "name": "sifive_p800",
        "value": 19,
        "desc": "SiFive Essential P800 Series"
      },
      {
        "name": "sifive_e6a",
        "value": 20,
        "desc": "SiFive Essential E6-A Series"
      },
      {
        "name": "sifive_e7a",
        "value": 21,
        "desc": "SiFive Essential E7-A Series"
      },
      {
        "name": "sifive_s7a",
        "value": 22,
        "desc": "SiFive Essential S7-A Series"
      }
    ],
    "gpu": [
      {
        "name": "generic",
        "value": 0,
        "desc": "Generic GPU"
      },
      {
        "name": "intel",
        "value": 1,
        "desc": "Intel GPU"
      },
      {
        "name": "amd",
        "value": 2,
        "desc": "AMD GPU"
      },
      {
        "name": "nvidia",
        "value": 3,
        "desc": "NVIDIA GPU"
      }
    ],
    "npu": [
      {
        "name": "generic",
        "value": 0,
        "desc": "Generic NPU"
      },
      {
        "name": "intel",
        "value": 1,
        "desc": "Intel NPU"
      },
      {
        "name": "amd_xdna",
        "value": 2,
        "desc": "AMD XDNA NPU"
      }
    ]
  },
  "architectures": {
    "unknown": {
      "generic": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any architecture"
        }
      ]
    },
    "cpu": {
      "generic": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any CPU"
        }
      ],
      "intel": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Intel CPU"
        },
        {
          "name": "nhm",
          "value": 1,
          "desc": "Intel Nehalem microarchitecture"
        },
        {
          "name": "wsm",
          "value": 2,
          "desc": "Intel Westmere microarchitecture"
        },
        {
          "name": "sdb",
          "value": 3,
          "desc": "Intel Sandy Bridge microarchitecture"
        },
        {
          "name": "ivb",
          "value": 4,
          "desc": "Intel Ivy Bridge microarchitecture"
        },
        {
          "name": "hsw",
          "value": 5,
          "desc": "Intel Haswell microarchitecture"
        },
        {
          "name": "bdw",
          "value": 6,
          "desc": "Intel Broadwell microarchitecture"
        },
        {
          "name": "skl",
          "value": 7,
          "desc": "Intel Skylake microarchitecture"
        },
        {
          "name": "pmc",
          "value": 8,
          "desc": "Intel Palm Cove microarchitecture"
        },
        {
          "name": "snc",
          "value": 9,
          "desc": "Intel Sunny Cove microarchitecture"
        },
        {
          "name": "wlc",
          "value": 10,
          "desc": "Intel Willow Cove microarchitecture"
        },
        {
          "name": "cpc",
          "value": 11,
          "desc": "Intel Cypress Cove microarchitecture"
        },
        {
          "name": "gdc",
          "value": 12,
          "desc": "Intel Golden Cove microarchitecture"
        },
        {
          "name": "rpc",
          "value": 13,
          "desc": "Intel Raptor Cove microarchitecture"
        },
        {
          "name": "rdc",
          "value": 14,
          "desc": "Intel Redwood Cove microarchitecture"
        },
        {
          "name": "lnc",
          "value": 15,
          "desc": "Intel Lion Cove microarchitecture"
        }
      ],
      "intel_atom": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Intel Atom/Low-power CPU"
        },
        {
          "name": "bnl",
          "value": 1,
          "desc": "Intel Bonnell microarchitecture"
        },
        {
          "name": "slw",
          "value": 2,
          "desc": "Intel Saltwell microarchitecture"
        },
        {
          "name": "svm",
          "value": 3,
          "desc": "Intel Silvermont microarchitecture"
        },
        {
          "name": "aim",
          "value": 4,
          "desc": "Intel Airmont microarchitecture"
        },
        {
          "name": "gdm",
          "value": 5,
          "desc": "Intel Goldmont microarchitecture"
        },
        {
          "name": "gdm_p",
          "value": 6,
          "desc": "Intel Goldmont Plus microarchitecture"
        },
        {
          "name": "trm",
          "value": 7,
          "desc": "Intel Tremont microarchitecture"
        },
        {
          "name": "gcm",
          "value": 8,
          "desc": "Intel Gracemont microarchitecture"
        },
        {
          "name": "csm",
          "value": 9,
          "desc": "Intel Crestmont microarchitecture"
        },
        {
          "name": "skm",
          "value": 10,
          "desc": "Intel Skymont microarchitecture"
        }
      ],
      "amd": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any AMD CPU"
        },
        {
          "name": "zen",
          "value": 1,
          "desc": "AMD Zen microarchitecture"
        },
        {
          "name": "zenp",
          "value": 2,
          "desc": "AMD Zen+ microarchitecture"
        },
        {
          "name": "zen2",
          "value": 3,
          "desc": "AMD Zen2 microarchitecture"
        },
        {
          "name": "zen3",
          "value": 4,
          "desc": "AMD Zen3 microarchitecture"
        },
        {
          "name": "zen3p",
          "value": 5,
          "desc": "AMD Zen3+ microarchitecture"
        },
        {
          "name": "zen4",
          "value": 6,
          "desc": "AMD Zen4 microarchitecture"
        },
        {
          "name": "zen4c",
          "value": 7,
          "desc": "AMD Zen4c microarchitecture"
        },
        {
          "name": "zen5",
          "value": 8,
          "desc": "AMD Zen5 microarchitecture"
        },
        {
          "name": "zen5c",
          "value": 9,
          "desc": "AMD Zen5c microarchitecture"
        }
      ],
      "arm_a": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any CPU microarchitecture from the ARM Cortex-A family"
        },
        {
          "name": "a8",
          "value": 1,
          "desc": "ARM Cortex-A8 (32-bit)"
        },
        {
          "name": "a9",
          "value": 2,
          "desc": "ARM Cortex-A9 (32-bit)"
        },
        {
          "name": "a5",
          "value": 3,
          "desc": "ARM Cortex-A5 (32-bit)"
        },
        {
          "name": "a15",
          "value": 4,
          "desc": "ARM Cortex-A15 (32-bit)"
        },
        {
          "name": "a7",
          "value": 5,
          "desc": "ARM Cortex-A7 (32-bit)"
        },
        {
          "name": "a53",
          "value": 6,
          "desc": "ARM Cortex-A53 (32/64-bit)"
        },
        {
          "name": "a57",
          "value": 7,
          "desc": "ARM Cortex-A57 (32/64-bit)"
        },
        {
          "name": "a12",
          "value": 8,
          "desc": "ARM Cortex-A12 (32-bit)"
        },
        {
          "name": "a17",
          "value": 9,
          "desc": "ARM Cortex-A17 (32-bit)"
        },
        {
          "name": "a32",
          "value": 10,
          "desc": "ARM Cortex-A32 (32-bit)"
        },
        {
          "name": "a34",
          "value": 11,
          "desc": "ARM Cortex-A34 (64-bit)"
        },
        {
          "name": "a73",
          "value": 12,
          "desc": "ARM Cortex-A73 (32/64-bit)"
        },
        {
          "name": "a55",
          "value": 13,
          "desc": "ARM Cortex-A55 (32/64-bit)"
        },
        {
          "name": "a75",
          "value": 14,
          "desc": "ARM Cortex-A75 (32/64-bit)"
        },
        {
          "name": "a65",
          "value": 15,
          "desc": "ARM Cortex-A65 (64-bit)"
        },
        {
          "name": "a76",
          "value": 16,
          "desc": "ARM Cortex-A76 (32/64-bit)"
        },
        {
          "name": "a77",
          "value": 17,
          "desc": "ARM Cortex-A77 (32/64-bit)"
        },
        {
          "name": "a78",
          "value": 18,
          "desc": "ARM Cortex-A78 (32/64-bit)"
        },
        {
          "name": "a78ae",
          "value": 19,
          "desc": "ARM Cortex-A78AE (32/64-bit)"
        },
        {
          "name": "a510",
          "value": 20,
          "desc": "ARM Cortex-A510 (64-bit)"
        },
        {
          "name": "a710",
          "value": 21,
          "desc": "ARM Cortex-A710 (32/64-bit)"
        },
        {
          "name": "a510r",
          "value": 22,
          "desc": "ARM Cortex-A510 (refresh) (32/64-bit)"
        },
        {
          "name": "a715",
          "value": 23,
          "desc": "ARM Cortex-A715 (64-bit)"
        },
        {
          "name": "a520",
          "value": 24,
          "desc": "ARM Cortex-A520 (64-bit)"
        },
        {
          "name": "a720",
          "value": 25,
          "desc": "ARM Cortex-A720 (64-bit)"
        },
        {
          "name": "a520ae",
          "value": 26,
          "desc": "ARM Cortex-A520AE (64-bit)"
        },
        {
          "name": "a720ae",
          "value": 27,
          "desc": "ARM Cortex-A720AE (64-bit)"
        },
        {
          "name": "a725",
          "value": 28,
          "desc": "ARM Cortex-A725 (64-bit)"
        },
        {
          "name": "a320",
          "value": 29,
          "desc": "ARM Cortex-A320 (64-bit)"
        },
        {
          "name": "a530",
          "value": 30,
          "desc": "ARM Cortex-A530 (64-bit)"
        },
        {
          "name": "a730",
          "value": 31,
          "desc": "ARM Cortex-A730 (64-bit)"
        }
      ],
      "arm_m": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any CPU microarchitecture from the ARM Cortex-M family"
        },
        {
          "name": "m3",
          "value": 1,
          "desc": "ARM Cortex-M3"
        },
        {
          "name": "m1",
          "value": 2,
          "desc": "ARM Cortex-M1"
        },
        {
          "name": "m0",
          "value": 3,
          "desc": "ARM Cortex-M0"
        },
        {
          "name": "m4",
          "value": 4,
          "desc": "ARM Cortex-M4"
        },
        {
          "name": "m0p",
          "value": 5,
          "desc": "ARM Cortex-M0+"
        },
        {
          "name": "m7",
          "value": 6,
          "desc": "ARM Cortex-M7"
        },
        {
          "name": "m23",
          "value": 7,
          "desc": "ARM Cortex-M23"
        },
        {
          "name": "m33",
          "value": 8,
          "desc": "ARM Cortex-M33"
        },
        {
          "name": "m35p",
          "value": 9,
          "desc": "ARM Cortex-M35P"
        },
        {
          "name": "m55",
          "value": 10,
          "desc": "ARM Cortex-M55"
        },
        {
          "name": "m85",
          "value": 11,
          "desc": "ARM Cortex-M85"
        },
        {
          "name": "m52",
          "value": 12,
          "desc": "ARM Cortex-M52"
        }
      ],
      "arm_r": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any CPU microarchitecture from the ARM Cortex-R family"
        },
        {
          "name": "r4",
          "value": 1,
          "desc": "ARM Cortex-R4 (32-bit)"
        },
        {
          "name": "r5",
          "value": 2,
          "desc": "ARM Cortex-R5 (32-bit)"
        },
        {
          "name": "r7",
          "value": 3,
          "desc": "ARM Cortex-R7 (32-bit)"
        },
        {
          "name": "r8",
          "value": 4,
          "desc": "ARM Cortex-R8 (32-bit)"
        },
        {
          "name": "r52",
          "value": 5,
          "desc": "ARM Cortex-R52 (32-bit)"
        },
        {
          "name": "r82",
          "value": 6,
          "desc": "ARM Cortex-R82 (64-bit)"
        },
        {
          "name": "r52p",
          "value": 7,
          "desc": "ARM Cortex-R52+ (32-bit)"
        }
      ],
      "codasip_lp": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Codasip low-power CPU"
        },
        {
          "name": "l110",
          "value": 1,
          "desc": "Codasip L110"
        },
        {
          "name": "l150",
          "value": 2,
          "desc": "Codasip L150"
        },
        {
          "name": "l31",
          "value": 3,
          "desc": "Codasip L31"
        }
      ],
      "codasip_hp": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Codasip high-performance CPU"
        },
        {
          "name": "l730",
          "value": 1,
          "desc": "Codasip L730"
        }
      ],
      "codasip_ap": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Codasip application CPU"
        },
        {
          "name": "a70",
          "value": 1,
          "desc": "Codasip A70"
        },
        {
          "name": "a730",
          "value": 2,
          "desc": "Codasip A730"
        },
        {
          "name": "x730",
          "value": 3,
          "desc": "Codasip X730"
        }
      ],
      "sifive_e2": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential 2-series CPU"
        }
      ],
      "sifive_e6": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential 6-series CPU"
        }
      ],
      "sifive_e7": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential 7-series CPU"
        }
      ],
      "sifive_x200": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential X200 Series CPU"
        }
      ],
      "sifive_x300": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential X300 Series CPU"
        }
      ],
      "sifive_xm": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential XM Series CPU"
        }
      ],
      "sifive_p400": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential P400 Series CPU"
        }
      ],
      "sifive_p500": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential P500 Series CPU"
        }
      ],
      "sifive_p600": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential P600 Series CPU"
        }
      ],
      "sifive_p800": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential P800 Series CPU"
        }
      ],
      "sifive_e6a": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential E6-A Series CPU"
        }
      ],
      "sifive_e7a": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential E7-A Series CPU"
        }
      ],
      "sifive_s7a": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any SiFive Essential S7-A Series CPU"
        }
      ]
    },
    "gpu": {
      "generic": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any GPU"
        }
      ],
      "intel": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Intel GPU"
        },
        {
          "name": "bdw",
          "value": 1,
          "desc": "Broadwell Intel graphics architecture"
        },
        {
          "name": "v8_0_0",
          "value": 1,
          "desc": "Broadwell Intel graphics architecture"
        },
        {
          "name": "skl",
          "value": 2,
          "desc": "Skylake Intel graphics architecture"
        },
        {
          "name": "v9_0_9",
          "value": 2,
          "desc": "Skylake Intel graphics architecture"
        },
        {
          "name": "kbl",
          "value": 3,
          "desc": "Kaby Lake Intel graphics architecture"
        },
        {
          "name": "v9_1_9",
          "value": 3,
          "desc": "Kaby Lake Intel graphics architecture"
        },
        {
          "name": "cfl",
          "value": 4,
          "desc": "Coffee Lake Intel graphics architecture"
        },
        {
          "name": "v9_2_9",
          "value": 4,
          "desc": "Coffee Lake Intel graphics architecture"
        },
        {
          "name": "apl",
          "value": 5,
          "desc": "Apollo Lake Intel graphics architecture"
        },
        {
          "name": "v9_3_0",
          "value": 5,
          "desc": "Apollo Lake Intel graphics architecture"
        },
        {
          "name": "bxt",
          "value": 5,
          "desc": "Broxton Intel graphics architecture"
        },
        {
          "name": "glk",
          "value": 6,
          "desc": "Gemini Lake Intel graphics architecture"
        },
        {
          "name": "v9_4_0",
          "value": 6,
          "desc": "Gemini Lake Intel graphics architecture"
        },
        {
          "name": "whl",
          "value": 7,
          "desc": "Whiskey Lake Intel graphics architecture"
        },
        {
          "name": "v9_5_0",
          "value": 7,
          "desc": "Whiskey Lake Intel graphics architecture"
        },
        {
          "name": "aml",
          "value": 8,
          "desc": "Amber Lake Intel graphics architecture"
        },
        {
          "name": "v9_6_0",
          "value": 8,
          "desc": "Amber Lake Intel graphics architecture"
        },
        {
          "name": "cml",
          "value": 9,
          "desc": "Comet Lake Intel graphics architecture"
        },
        {
          "name": "v9_7_0",
          "value": 9,
          "desc": "Comet Lake Intel graphics architecture"
        },
        {
          "name": "icllp",
          "value": 10,
          "desc": "Ice Lake Intel graphics architecture"
        },
        {
          "name": "icl",
          "value": 10,
          "desc": "Ice Lake Intel graphics architecture"
        },
        {
          "name": "v11_0_0",
          "value": 10,
          "desc": "Ice Lake Intel graphics architecture"
        },
        {
          "name": "ehl",
          "value": 11,
          "desc": "Elkhart Lake Intel graphics architecture"
        },
        {
          "name": "v11_2_0",
          "value": 11,
          "desc": "Elkhart Lake Intel graphics architecture"
        },
        {
          "name": "jsl",
          "value": 11,
          "desc": "Jasper Lake Intel graphics architecture"
        },
        {
          "name": "tgllp",
          "value": 12,
          "desc": "Tiger Lake Intel graphics architecture"
        },
        {
          "name": "tgl",
          "value": 12,
          "desc": "Tiger Lake Intel graphics architecture"
        },
        {
          "name": "v12_0_0",
          "value": 12,
          "desc": "Tiger Lake Intel graphics architecture"
        },
        {
          "name": "rkl",
          "value": 13,
          "desc": "Rocket Lake Intel graphics architecture"
        },
        {
          "name": "v12_1_0",
          "value": 13,
          "desc": "Rocket Lake Intel graphics architecture"
        },
        {
          "name": "adl_s",
          "value": 14,
          "desc": "Alder Lake S Intel graphics architecture"
        },
        {
          "name": "v12_2_0",
          "value": 14,
          "desc": "Alder Lake S Intel graphics architecture"
        },
        {
          "name": "rpl_s",
          "value": 14,
          "desc": "Raptor Lake Intel graphics architecture"
        },
        {
          "name": "adl_p",
          "value": 15,
          "desc": "Alder Lake P Intel graphics architecture"
        },
        {
          "name": "v12_3_0",
          "value": 15,
          "desc": "Alder Lake P Intel graphics architecture"
        },
        {
          "name": "adl_n",
          "value": 16,
          "desc": "Alder Lake N Intel graphics architecture"
        },
        {
          "name": "v12_4_0",
          "value": 16,
          "desc": "Alder Lake N Intel graphics architecture"
        },
        {
          "name": "dg1",
          "value": 17,
          "desc": "DG1 Intel graphics architecture"
        },
        {
          "name": "v12_10_0",
          "value": 17,
          "desc": "DG1 Intel graphics architecture"
        },
        {
          "name": "acm_g10",
          "value": 18,
          "desc": "Alchemist G10 Intel graphics architecture"
        },
        {
          "name": "dg2_g10",
          "value": 18,
          "desc": "Alchemist G10 Intel graphics architecture"
        },
        {
          "name": "v12_55_8",
          "value": 18,
          "desc": "Alchemist G10 Intel graphics architecture"
        },
        {
          "name": "acm_g11",
          "value": 19,
          "desc": "Alchemist G11 Intel graphics architecture"
        },
        {
          "name": "dg2_g11",
          "value": 19,
          "desc": "Alchemist G11 Intel graphics architecture"
        },
        {
          "name": "v12_56_5",
          "value": 19,
          "desc": "Alchemist G11 Intel graphics architecture"
        },
        {
          "name": "acm_g12",
          "value": 20,
          "desc": "Alchemist G12 Intel graphics architecture"
        },
        {
          "name": "dg2_g12",
          "value": 20,
          "desc": "Alchemist G12 Intel graphics architecture"
        },
        {
          "name": "v12_57_0",
          "value": 20,
          "desc": "Alchemist G12 Intel graphics architecture"
        },
        {
          "name": "pvc",
          "value": 21,
          "desc": "Ponte Vecchio Intel graphics architecture"
        },
        {
          "name": "v12_60_7",
          "value": 21,
          "desc": "Ponte Vecchio Intel graphics architecture"
        },
        {
          "name": "pvc_vg",
          "value": 22,
          "desc": "Ponte Vecchio VG Intel graphics architecture"
        },
        {
          "name": "v12_61_7",
          "value": 22,
          "desc": "Ponte Vecchio VG Intel graphics architecture"
        },
        {
          "name": "mtl_u",
          "value": 23,
          "desc": "Meteor Lake U Intel graphics architecture"
        },
        {
          "name": "mtl_s",
          "value": 23,
          "desc": "Meteor Lake S Intel graphics architecture"
        },
        {
          "name": "arl_u",
          "value": 23,
          "desc": "Arrow Lake U Intel graphics architecture"
        },
        {
          "name": "arl_s",
          "value": 23,
          "desc": "Arrow Lake S Intel graphics architecture"
        },
        {
          "name": "v12_70_4",
          "value": 23,
          "desc": "Meteor Lake U Intel graphics architecture"
        },
        {
          "name": "mtl_h",
          "value": 24,
          "desc": "Meteor Lake H Intel graphics architecture"
        },
        {
          "name": "v12_71_4",
          "value": 24,
          "desc": "Meteor Lake H Intel graphics architecture"
        },
        {
          "name": "arl_h",
          "value": 25,
          "desc": "Arrow Lake H Intel graphics architecture"
        },
        {
          "name": "v12_74_4",
          "value": 25,
          "desc": "Arrow Lake H Intel graphics architecture"
        },
        {
          "name": "bmg_g21",
          "value": 26,
          "desc": "Battlemage G21 Intel graphics architecture"
        },
        {
          "name": "v20_1_4",
          "value": 26,
          "desc": "Battlemage G21 Intel graphics architecture"
        },
        {
          "name": "lnl_m",
          "value": 27,
          "desc": "Lunar Lake Intel graphics architecture"
        },
        {
          "name": "v20_4_4",
          "value": 27,
          "desc": "Lunar Lake Intel graphics architecture"
        },
        {
          "name": "ptl_h",
          "value": 28,
          "desc": "Panther Lake H Intel graphics architecture"
        },
        {
          "name": "v30_0_4",
          "value": 28,
          "desc": "Panther Lake H Intel graphics architecture"
        },
        {
          "name": "ptl_u",
          "value": 29,
          "desc": "Panther Lake U Intel graphics architecture"
        },
        {
          "name": "v30_1_1",
          "value": 29,
          "desc": "Panther Lake U Intel graphics architecture"
        }
      ],
      "amd": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any AMD GPU"
        },
        {
          "name": "gfx700",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx701",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx702",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx703",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx704",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx705",
          "value": 1,
          "desc": "AMD GCN 2.0 microarchitecture"
        },
        {
          "name": "gfx801",
          "value": 2,
          "desc": "AMD GCN 3.0 microarchitecture"
        },
        {
          "name": "gfx802",
          "value": 2,
          "desc": "AMD GCN 3.0 microarchitecture"
        },
        {
          "name": "gfx803",
          "value": 3,
          "desc": "AMD GCN 4.0 microarchitecture"
        },
        {
          "name": "gfx805",
          "value": 4,
          "desc": "AMD GCN 3.0 microarchitecture"
        },
        {
          "name": "gfx810",
          "value": 4,
          "desc": "AMD GCN 3.0 microarchitecture"
        },
        {
          "name": "gfx900",
          "value": 5,
          "desc": "AMD GCN 5.0 microarchitecture"
        },
        {
          "name": "gfx902",
          "value": 5,
          "desc": "AMD GCN 5.0 microarchitecture"
        },
        {
          "name": "gfx904",
          "value": 5,
          "desc": "AMD GCN 5.0 microarchitecture"
        },
        {
          "name": "gfx906",
          "value": 6,
          "desc": "AMD GCN 5.1 microarchitecture"
        },
        {
          "name": "gfx908",
          "value": 7,
          "desc": "AMD CDNA 1 microarchitecture"
        },
        {
          "name": "gfx909",
          "value": 8,
          "desc": "AMD GCN 5.0 microarchitecture"
        },
        {
          "name": "gfx90a",
          "value": 9,
          "desc": "AMD CDNA 2 microarchitecture"
        },
        {
          "name": "gfx90c",
          "value": 10,
          "desc": "AMD GCN 5.1 microarchitecture"
        },
        {
          "name": "gfx940",
          "value": 11,
          "desc": "AMD CDNA 3 microarchitecture"
        },
        {
          "name": "gfx941",
          "value": 11,
          "desc": "AMD CDNA 3 microarchitecture"
        },
        {
          "name": "gfx942",
          "value": 11,
          "desc": "AMD CDNA 3 microarchitecture"
        },
        {
          "name": "gfx1010",
          "value": 12,
          "desc": "AMD RDNA 1 microarchitecture"
        },
        {
          "name": "gfx1011",
          "value": 12,
          "desc": "AMD RDNA 1 microarchitecture"
        },
        {
          "name": "gfx1012",
          "value": 12,
          "desc": "AMD RDNA 1 microarchitecture"
        },
        {
          "name": "gfx1013",
          "value": 12,
          "desc": "AMD RDNA 1 microarchitecture"
        },
        {
          "name": "gfx1030",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1031",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1032",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1033",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1034",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1035",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1036",
          "value": 13,
          "desc": "AMD RDNA 2 microarchitecture"
        },
        {
          "name": "gfx1100",
          "value": 14,
          "desc": "AMD RDNA 3 microarchitecture"
        },
        {
          "name": "gfx1101",
          "value": 14,
          "desc": "AMD RDNA 3 microarchitecture"
        },
        {
          "name": "gfx1102",
          "value": 14,
          "desc": "AMD RDNA 3 microarchitecture"
        },
        {
          "name": "gfx1103",
          "value": 14,
          "desc": "AMD RDNA 3 microarchitecture"
        },
        {
          "name": "gfx1150",
          "value": 15,
          "desc": "AMD RDNA 3.5 microarchitecture"
        },
        {
          "name": "gfx1151",
          "value": 15,
          "desc": "AMD RDNA 3.5 microarchitecture"
        },
        {
          "name": "gfx1200",
          "value": 16,
          "desc": "AMD RDNA 4 microarchitecture"
        },
        {
          "name": "gfx1201",
          "value": 16,
          "desc": "AMD RDNA 4 microarchitecture"
        }
      ],
      "nvidia": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any NVIDIA GPU"
        },
        {
          "name": "sm50",
          "value": 1,
          "desc": "NVIDIA Maxwell microarchitecture (compute capability 5.0)"
        },
        {
          "name": "sm52",
          "value": 2,
          "desc": "NVIDIA Maxwell microarchitecture (compute capability 5.2)"
        },
        {
          "name": "sm53",
          "value": 3,
          "desc": "NVIDIA Maxwell microarchitecture (compute capability 5.3)"
        },
        {
          "name": "sm60",
          "value": 4,
          "desc": "NVIDIA Pascal microarchitecture (compute capability 6.0)"
        },
        {
          "name": "sm61",
          "value": 5,
          "desc": "NVIDIA Pascal microarchitecture (compute capability 6.1)"
        },
        {
          "name": "sm62",
          "value": 6,
          "desc": "NVIDIA Pascal microarchitecture (compute capability 6.2)"
        },
        {
          "name": "sm70",
          "value": 6,
          "desc": "NVIDIA Volta microarchitecture (compute capability 7.0)"
        },
        {
          "name": "sm72",
          "value": 7,
          "desc": "NVIDIA Volta microarchitecture (compute capability 7.2)"
        },
        {
          "name": "sm75",
          "value": 8,
          "desc": "NVIDIA Turing microarchitecture (compute capability 7.5)"
        },
        {
          "name": "sm80",
          "value": 9,
          "desc": "NVIDIA Ampere microarchitecture (compute capability 8.0)"
        },
        {
          "name": "sm86",
          "value": 10,
          "desc": "NVIDIA Ampere microarchitecture (compute capability 8.6)"
        },
        {
          "name": "sm87",
          "value": 11,
          "desc": "NVIDIA Jetson/Drive AGX Orin microarchitecture"
        },
        {
          "name": "sm89",
          "value": 12,
          "desc": "NVIDIA Ada Lovelace arhitecture"
        },
        {
          "name": "sm90",
          "value": 13,
          "desc": "NVIDIA Hopper arhitecture"
        },
        {
          "name": "sm90a",
          "value": 13,
          "desc": "NVIDIA Hopper arhitecture"
        }
      ]
    },
    "npu": {
      "generic": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any NPU"
        }
      ],
      "intel": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any Intel NPU"
        },
        {
          "name": "mtl",
          "value": 1,
          "desc": "Intel NPU used in Meteor Lake processors"
        },
        {
          "name": "lnl",
          "value": 2,
          "desc": "Intel NPU used in Lunar Lake processors"
        }
      ],
      "amd_xdna": [
        {
          "name": "any",
          "value": 0,
          "desc": "Any AMD XDNA architecture"
        }
      ]
    }
  }
}