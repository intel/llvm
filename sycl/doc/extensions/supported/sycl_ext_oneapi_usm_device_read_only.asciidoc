= SYCL_INTEL_usm_device_read_only

== Introduction
IMPORTANT: This specification is a draft.

NOTE: Khronos(R) is a registered trademark and SYCL(TM) and SPIR(TM) are trademarks of The Khronos Group Inc.  OpenCL(TM) is a trademark of Apple Inc. used by permission by Khronos.

NOTE: This document is better viewed when rendered as html with asciidoctor.  GitHub does not render image icons.

This document describes an extension that adds a compile-time-constant property to tell the SYCL device compiler and runtime in which memory a particular accessor should be allocated.  This is useful on targets that possess more than one type of global memory.  

== Name Strings

+SYCL_INTEL_usm_device_read_only+

== Contributors
Sergey Maslov, Intel

== Notice

Copyright (c) 2022 Intel Corporation.  All rights reserved.

== Status

Working Draft

This is a preview extension specification, intended to provide early access to a feature for review and community feedback. When the feature matures, this specification may be released as a formal extension.

Because the interfaces defined by this specification are not final and are subject to change they are not intended to be used by shipping software products.

== Version

Built On: {docdate} +
Revision: 1

== Contact
Sergey Maslov, Intel (sergey 'dot' v 'dot maslov 'at' intel 'dot' com)

== Dependencies

This extension is written against the SYCL 2020 specification, Revision 4.

== Overview

Introduce new property notifying the SYCL runtime that the memory being allocated is only
possibly modified from the host. Any device accesses to the memory are read-only. This hint may
be used by an implementation to optimize allocations and and their access, if possible.

== Modifications to the SYCL 2020 specification, Revision 4

=== Section 4.8.3 USM allocations

Specification currently says: "This specification does not yet define any USM allocation properties".
This extension adds support for a new property for all USM allocation routines taking properties list.

```c++
namespace sycl {
...
namespace ext {
namespace oneapi {
namespace property {
namespace usm {
  class device_read_only {
    public:
      device_read_only() = default;
  };
} // namespace usm
} // namespace property
} // namespace intel
} // namespace ext
} // namespace sycl
```

Add a new table to 4.8.3: Properties supported by USM allocation functions:

--
[options="header"]
|===
| Property | Description | Compile-time Constant
a|
```c++
property::usm::device_read_only
``` | 
The device_read_only property notifies the SYCL runtime that the memory being allocated is only
possibly modified from the host. Any device accesses to the memory are read-only.
This property is a hint and can be ignored by an implementaion. | Yes
|===
--

== Issues

== Revision History

[cols="5,15,15,70"]
[grid="rows"]
[options="header"]
|========================================
|Rev|Date|Author|Changes
|1|2022-03-17|Sergey Maslov|*Initial public draft*
|========================================
