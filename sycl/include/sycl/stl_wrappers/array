//==---------------- <array> wrapper around STL --------------------------==//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

// Include real STL <array> header - the next one from the include search
// directories.
// Define variable templated _CrtDbgReport with MSVC to avoid the following
// llvm-spirv error:
// UnsupportedVarArgFunction: Variadic functions other than 'printf' are not supported in SPIR-V.
// This happens when std::array is used in device code and -D_DEBUG -O0
// flags are passed during compilation.
// Defining variable templated _CrtDbgReport with MSVC overrides the use of
// variable argument _CrtDbgReport function in the STL.
// This is a workaround until we completely remove std::array from device code.

#pragma once

#if defined(__SYCL_DEVICE_ONLY__) && defined(_WIN32)
template <typename... Ts>
int _CrtDbgReport(Ts...) { return 0; }
#endif

#if defined(__has_include_next)
// GCC/clang support go through this path.
#include_next <array>
#else
// MSVC doesn't support "#include_next", so we have to be creative.
// Our header is located in "stl_wrappers/array" so it won't be picked by the
// following include. MSVC's installation, on the other hand, has the layout
// where the following would result in the <array> we want. This is obviously
// hacky, but the best we can do...
#include <../include/array>
#endif
