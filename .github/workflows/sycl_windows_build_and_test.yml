name: SYCL Windows Test

on:
  workflow_call:
    inputs:
      build_cache_suffix:
        type: string
        required: false
        default: "default"
      build_ref:
        type: string
        required: false

jobs:
  build:
    name: Build + LIT
    runs-on: [Windows, build]
    # TODO use cached checkout
    steps:
    - uses: ilammy/msvc-dev-cmd@7315a94840631165970262a99c72cfb48a65d25d
      with:
        arch: amd64
    - name: Set env
      run: |
        git config --system core.longpaths true
        git config --global core.autocrlf false
        echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "SCCACHE_DIR=D:\github\_work\cache\${{ inputs.build_cache_suffix }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - uses: actions/checkout@v3
      with:
        path: src
        ref: ${{ inputs.build_ref || github.sha }}
        fetch-depth: 1
    - name: Register cleanup after job is finished
      uses: ./src/devops/actions/cleanup
    - name: Configure
      shell: cmd
      # TODO switch to clang-cl and lld when this is fixed https://github.com/oneapi-src/level-zero/issues/83
      run: |
        mkdir build
        mkdir install
        IF NOT EXIST D:\github\_work\cache MKDIR D:\github\_work\cache
        IF NOT EXIST D:\github\_work\cache\sycl_${{inputs.build_cache_suffix}} MKDIR D:\github\_work\cache\${{inputs.build_cache_suffix}}
        python.exe src/buildbot/configure.py -o build ^
          --ci-defaults ^
          --cmake-opt="-DCMAKE_C_COMPILER=cl" ^
          --cmake-opt="-DCMAKE_CXX_COMPILER=cl" ^
          --cmake-opt="-DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\install" ^
          --cmake-opt="-DCMAKE_CXX_COMPILER_LAUNCHER=sccache" ^
          --cmake-opt="-DCMAKE_C_COMPILER_LAUNCHER=sccache"
    - name: Build
      id: build
      run: |
        cmake --build build --target sycl-toolchain
        sccache --show-stats
    - name: check-llvm
      shell: bash
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      run: |
        cmake --build build --target check-llvm
    - name: check-clang
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: bash
      run: |
        cmake --build build --target check-clang
    - name: check-sycl
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: bash
      run: |
        cmake --build build --target check-sycl
    - name: check-llvm-spirv
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: bash
      run: |
        cmake --build build --target check-llvm-spirv
    - name: check-xptifw
      if: ${{ always() && !cancelled() && steps.build.outcome == 'success' }}
      shell: bash
      run: |
        cmake --build build --target check-xptifw
    - name: Install
      shell: bash
      run: cmake --build build --target deploy-sycl-toolchain
    - name: Upload toolchain
      uses: actions/upload-artifact@v3
      with:
        name: sycl_windows_default
        path: install/**/*
