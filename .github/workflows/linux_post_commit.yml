name: Linux Post Commit Checks

on:
  push:
    branches:
      - sycl
jobs:
   check:
     runs-on: ubuntu-20.04
     if: github.repository == 'intel/llvm'
     strategy:
       fail-fast: false
       matrix:
         config: ["Default", "SharedLibs", "NoAssertions"]

     steps:
     - uses: actions/checkout@v2
       with:
         path: src
     - name: Install Ubuntu deps
       run: sudo apt install -y ninja-build ccache
     - name: Setup Cache
       uses: actions/cache@v2
       id: cache
       with:
         path: ${{ github.workspace }}/cache
         key: build-${{ runner.os }}-${{ matrix.config }}-${{ github.sha }}
         restore-keys: |
           build-${{ runner.os }}-${{ matrix.config }}-
     - name: Configure
       run: |
         CONFIG=${{ matrix.config }}
         case $CONFIG in
             Default)
                 export ARGS=""
                 ;;
             SharedLibs)
                 wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
                 sudo add-apt-repository "deb http://apt.llvm.org/focal/   llvm-toolchain-focal-13 main"
                 sudo apt-get update
                 sudo apt-get install -y clang-13
                 export ARGS="--shared-libs"
                 export CC="clang-13"
                 export CXX="clang++-13"
                 ;;
             NoAssertions)
                 export ARGS="--no-assertions"
                 ;;
         esac
         mkdir -p $GITHUB_WORKSPACE/build
         cd $GITHUB_WORKSPACE/build
         python3 $GITHUB_WORKSPACE/src/buildbot/configure.py -w $GITHUB_WORKSPACE \
         -s $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build -t Release \
         --ci-defaults $ARGS --cmake-opt="-DLLVM_CCACHE_BUILD=ON" \
         --cmake-opt="-DLLVM_CCACHE_DIR=$GITHUB_WORKSPACE/cache" \
         --cmake-opt="-DLLVM_CCACHE_MAXSIZE=2G"
     - name: Compile
       run: |
         python3 $GITHUB_WORKSPACE/src/buildbot/compile.py -w  $GITHUB_WORKSPACE \
         -s  $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build
     - name: check-llvm
       if: always()
       run: |
         python3 $GITHUB_WORKSPACE/src/buildbot/check.py -w  $GITHUB_WORKSPACE \
         -s  $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build -t check-llvm
     - name: check-clang
       if: always()
       run: |
         python3 $GITHUB_WORKSPACE/src/buildbot/check.py -w  $GITHUB_WORKSPACE \
         -s  $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build -t check-clang
     - name: check-sycl
       if: always()
       run: |
         python3 $GITHUB_WORKSPACE/src/buildbot/check.py -w  $GITHUB_WORKSPACE \
         -s  $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build -t check-sycl
     - name: check-llvm-spirv
       if: always()
       run: |
         python3 $GITHUB_WORKSPACE/src/buildbot/check.py -w  $GITHUB_WORKSPACE \
         -s  $GITHUB_WORKSPACE/src -o $GITHUB_WORKSPACE/build -t check-llvm-spirv
     - name: Pack
       run: tar -czvf llvm_sycl.tar.gz -C $GITHUB_WORKSPACE/build/install .
     - name: Upload artifacts
       uses: actions/upload-artifact@v1
       with:
         name: sycl_linux_${{ matrix.config }}
         path: llvm_sycl.tar.gz
