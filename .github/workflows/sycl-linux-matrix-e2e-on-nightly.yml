name: SYCL E2E Matrix on Nightly build

on:
  workflow_dispatch:
    inputs:
      env:
        description: |
          Suggested variables: for E2E tests - LIT_FILTER, LIT_FILTER_OUT.
          LIT_OPTS won't work as we redefine it as part of this workflow.
          Format: '{"VAR1":"VAL1","VAR2":"VAL2",...}'
        default: '{"LIT_FILTER":""}'

permissions: read-all

jobs:
  linux_e2e_on_nightly:
    name: E2E on Nightly
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: AMD/HIP
            runner: '["Linux", "amdgpu"]'
            image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:build
            image_options: -u 1001 --device=/dev/dri --device=/dev/kfd
            target_devices: ext_oneapi_hip:gpu

          - name: Intel L0 GPU
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:latest
            image_options: -u 1001 --device=/dev/dri --privileged --cap-add SYS_ADMIN
            target_devices: level_zero:gpu
            reset_gpu: true

          - name: Intel OCL GPU
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:latest
            image_options: -u 1001 --device=/dev/dri --privileged --cap-add SYS_ADMIN
            target_devices: opencl:gpu
            reset_gpu: true

          - name: OCL CPU
            runner: '["Linux", "x86-cpu"]'
            image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:latest
            image_options: -u 1001
            target_devices: opencl:cpu

          - name: Self-hosted CUDA
            runner: '["Linux", "cuda"]'
            image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:build
            image_options: -u 1001 --gpus all --cap-add SYS_ADMIN
            target_devices: ext_oneapi_cuda:gpu
    uses: ./.github/workflows/sycl-linux-run-tests.yml
    with:
      name: ${{ matrix.name }}
      runner: ${{ matrix. runner }}
      image: ${{ matrix.image }}
      image_options: ${{ matrix.image_options }}
      target_devices: ${{ matrix.target_devices }}
      reset_gpu: ${{ matrix.reset_gpu }}
      env: ${{ inputs.env }}
      ref: ${{ github.sha }}
      merge_ref: ''

  aws_start:
    name: AWS Start
    uses: ./.github/workflows/sycl-aws.yml
    secrets: inherit
    with:
      mode: start
      runs-on-list: '[{"runs-on":"aws-cuda_${{ github.run_id }}-${{ github.run_attempt }}","aws-ami":"ami-01cb0573cb039ab24","aws-type":["g5.2xlarge","g5.4xlarge"],"aws-disk":"/dev/sda1:64","aws-spot":"false"}]'

  linux_e2e_on_nightly_aws:
    name: '[AWS][CUDA] E2E on Nightly'
    needs: [aws_start]
    uses: ./.github/workflows/sycl-linux-run-tests.yml
    with:
      name: CUDA
      runner: '["aws-cuda_${{ github.run_id }}-${{ github.run_attempt }}"]'
      image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:build
      image_options: -u 1001 --gpus all --cap-add SYS_ADMIN
      target_devices: ext_oneapi_cuda:gpu
      env: ${{ inputs.env }}
      ref: ${{ github.sha }}
      merge_ref: ''

  aws_stop:
    name: AWS Stop
    needs: [aws_start, linux_e2e_on_nightly_aws]
    if: always()
    uses: ./.github/workflows/sycl-aws.yml
    secrets: inherit
    with:
      mode: stop
      runs-on-list: '[{"runs-on":"aws-cuda_${{ github.run_id }}-${{ github.run_attempt }}","aws-ami":"ami-01cb0573cb039ab24","aws-type":["g5.2xlarge","g5.4xlarge"],"aws-disk":"/dev/sda1:64","aws-spot":"false"}]'
