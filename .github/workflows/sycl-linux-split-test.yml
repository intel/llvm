name: Experimental SYCL test split e2e

on:
  workflow_dispatch:

permissions: read-all

jobs:
  detect_changes:
    uses: ./.github/workflows/sycl-detect-changes.yml

  build:
    needs: [detect_changes]
    if: always() && success()
    uses: ./.github/workflows/sycl-linux-build.yml
    with:
      build_ref: ${{ github.sha }}
      merge_ref: ''
      build_cache_root: "/__w/"
      build_artifact_suffix: "default"
      build_cache_suffix: "default"
      changes: ${{ needs.detect_changes.outputs.filters }}
  build-tests:
    needs: [build, detect_changes]
    if: ${{ always() && !cancelled() && needs.build.outputs.build_conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build e2e tests
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/ubuntu2204_intel_drivers:latest
            image_options: -u 1001 --device=/dev/dri -v /dev/dri/by-path:/dev/dri/by-path --privileged --cap-add SYS_ADMIN
            target_devices: opencl:cpu
            reset_intel_gpu: true
            extra_lit_opts: --param gpu-intel-gen12=True --param split-mode=build

    uses: ./.github/workflows/sycl-linux-run-tests.yml
    with:
      name: ${{ matrix.name }}
      runner: ${{ matrix. runner }}
      image: ${{ matrix.image }}
      image_options: ${{ matrix.image_options }}
      target_devices: ${{ matrix.target_devices }}
      reset_intel_gpu: ${{ matrix.reset_intel_gpu }}
      extra_lit_opts: ${{ matrix.extra_lit_opts }}
      env: ${{ matrix.env || '{}' }}

      # Do not install drivers on AMD and CUDA runners.
      install_igc_driver: >-
        ${{ !contains(matrix.target_devices, 'ext_oneapi_cuda') &&
        !contains(matrix.target_devices, 'ext_oneapi_hip') &&
        contains(needs.detect_changes.outputs.filters, 'drivers') }}
      install_dev_igc_driver: >-
        ${{ !contains(matrix.target_devices, 'ext_oneapi_cuda') &&
        !contains(matrix.target_devices, 'ext_oneapi_hip') &&
        matrix.use_igc_dev && contains(needs.detect_changes.outputs.filters, 'devigccfg') ||
        'false' }}
      # Run only if the PR does not have the 'ci-no-devigc' label.
      skip_run: ${{matrix.use_igc_dev && contains(github.event.pull_request.labels.*.name, 'ci-no-devigc') || 'false'}}

      ref: ${{ github.sha }}
      merge_ref: ''

      sycl_toolchain_artifact: sycl_linux_default
      sycl_toolchain_archive: ${{ needs.build.outputs.artifact_archive_name }}
      sycl_toolchain_decompress_command: ${{ needs.build.outputs.artifact_decompress_command }}
