name: SYCL Pre Commit on Linux

on:
  # We rely on "Fork pull request workflows from outside collaborators" -
  # "Require approval for all outside collaborators" at
  # https://github.com/intel/llvm/settings/actions for security.
  pull_request:
    branches:
    - sycl
    - sycl-devops-pr/**
    # Do not run builds if changes are only in the following locations
    paths-ignore:
    - '.github/ISSUE_TEMPLATE/**'
    - '.github/CODEOWNERS'
    - 'sycl/doc/**'
    - 'sycl/gdb/**'
    - 'clang/docs/**'
    - '**.md'
    - '**.rst'
    - '.github/workflows/sycl_precommit_windows.yml'
    - 'devops/containers/**'
    - 'devops/actions/build_container/**'

jobs:
  detect_changes:
    uses: ./.github/workflows/sycl_detect_changes.yml

  lint:
    runs-on: [Linux, build]
    container:
      image: ghcr.io/intel/llvm/sycl_ubuntu2204_nightly:no-drivers
      options: -u 1001:1001
    steps:
    - uses: actions/checkout@v3
      with:
        sparse-checkout: |
          devops/actions/cached_checkout
          devops/actions/clang-format
          devops/actions/cleanup
    - name: Register cleanup after job is finished
      uses: ./devops/actions/cleanup
    - name: 'PR commits + 2'
      run: echo "PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 2 ))" >> "${GITHUB_ENV}"
    - uses: ./devops/actions/cached_checkout
      with:
        path: src
        fetch-depth: ${{ env.PR_FETCH_DEPTH }}
        ref: ${{ github.event.pull_request.head.sha }}
        merge_ref: ''
        cache_path: "/__w/repo_cache/"
    - name: Run clang-format
      uses: ./devops/actions/clang-format
      with:
        path: src

  build:
    needs: [lint, detect_changes]
    if: |
      always()
      && (success() || contains(github.event.pull_request.labels.*.name, 'ignore-lint'))
    uses: ./.github/workflows/sycl_linux_build.yml
    with:
      build_ref: ${{ github.sha }}
      merge_ref: ''
      build_cache_root: "/__w/"
      build_artifact_suffix: "default"
      build_cache_suffix: "default"
      changes: ${{ needs.detect_changes.outputs.filters }}

  test:
    needs: [build, detect_changes]
    if: ${{ always() && !cancelled() && needs.build.outputs.build_conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: AMD/HIP
            runner: '["Linux", "amdgpu"]'
            image: ghcr.io/intel/llvm/ubuntu2204_build:latest
            image_options: -u 1001 --device=/dev/dri --device=/dev/kfd
            target_devices: ext_oneapi_hip:gpu
          - name: Intel
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/ubuntu2204_intel_drivers:latest
            image_options: -u 1001 --device=/dev/dri --privileged --cap-add SYS_ADMIN
            target_devices: ext_oneapi_level_zero:gpu;opencl:gpu;opencl:cpu
            reset_gpu: true
            install_drivers: ${{ contains(needs.detect_changes.outputs.filters, 'drivers') }}
    uses: ./.github/workflows/sycl_linux_run_tests.yml
    with:
      name: ${{ matrix.name }}
      runner: ${{ matrix. runner }}
      image: ${{ matrix.image }}
      image_options: ${{ matrix.image_options }}
      target_devices: ${{ matrix.target_devices }}
      reset_gpu: ${{ matrix.reset_gpu }}
      install_drivers: ${{ matrix.install_drivers }}

      ref: ${{ github.sha }}
      merge_ref: ''

      sycl_toolchain_artifact: sycl_linux_default
      sycl_toolchain_archive: ${{ needs.build.outputs.artifact_archive_name }}
      sycl_toolchain_decompress_command: ${{ needs.build.outputs.artifact_decompress_command }}

