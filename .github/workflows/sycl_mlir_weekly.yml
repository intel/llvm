name: SYCL MLIR Weekly

on:
  # UNCOMMENT BEFORE MERGE
  # schedule:
  #  - cron: '0 22 * * 4'
  # DROP BEFORE MERGE
  pull_request:
    branches:
    - sycl-mlir

jobs:
  ubuntu2204_build:
    if: github.repository == 'intel/llvm'
    uses: ./.github/workflows/sycl_linux_build.yml
    secrets: inherit
    with:
      build_cache_root: "/__w/"
      build_artifact_suffix: default
      merge_ref: ''
      retention-days: 10

  ubuntu2204_test:
    needs: [ubuntu2204_build]
    if: ${{ always() && !cancelled() && needs.ubuntu2204_build.outputs.build_conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Intel L0 GPU
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/ubuntu2204_intel_drivers:latest
            image_options: -u 1001 --device=/dev/dri --privileged --cap-add SYS_ADMIN
            target_devices: ext_oneapi_level_zero:gpu
            reset_gpu: true

          - name: Intel OCL GPU
            runner: '["Linux", "gen12"]'
            image: ghcr.io/intel/llvm/ubuntu2204_intel_drivers:latest
            image_options: -u 1001 --device=/dev/dri --privileged --cap-add SYS_ADMIN
            target_devices: opencl:gpu
            reset_gpu: true

          - name: OCL CPU
            runner: '["Linux", "x86-cpu"]'
            image: ghcr.io/intel/llvm/ubuntu2204_intel_drivers:latest
            image_options: -u 1001
            target_devices: opencl:cpu

    uses: ./.github/workflows/sycl_linux_run_tests.yml
    with:
      name: ${{ matrix.name }}
      runner: ${{ matrix.runner }}
      image: ${{ matrix.image }}
      image_options: ${{ matrix.image_options }}
      target_devices: ${{ matrix.target_devices }}
      reset_gpu: ${{ matrix.reset_gpu }}
      ref: ${{ github.sha }}
      merge_ref: ''
      sycl_toolchain_artifact: sycl_linux_default
      sycl_toolchain_archive: ${{ needs.ubuntu2204_build.outputs.artifact_archive_name }}
      sycl_toolchain_decompress_command: ${{ needs.ubuntu2204_build.outputs.artifact_decompress_command }}

  sycl-bench-mlir_build:
    needs: [ubuntu2204_build]
    uses: ./.github/workflows/sycl-bench_build_and_test.yml
    with:
      repository_owner: whitneywhtsang
      ref: sycl-mlir
      build_cache_rot: /__w/
      build_sycl_impl: LLVM-MLIR
      build_benchmarks_list: [2mm]
      sycl_toolchain_artifact: sycl_linux_default
      sycl_toolchain_decompress_command: unzstd
      artifact_archive_name: sycl_bench-mlir.tar.zst

  sycl-bench_build:
    needs: [ubuntu2204_build]
    uses: ./.github/workflows/sycl-bench_build_and_test.yml
    with:
      repository_owner: whitneywhtsang
      ref: sycl-mlir
      build_cache_rot: /__w/
      build_sycl_impl: LLVM
      build_benchmarks_list: '[2mm]'
      sycl_toolchain_artifact: sycl_linux_default
      sycl_toolchain_decompress_command: unzstd
      artifact_archive_name: sycl_bench-mlir.tar.zst
