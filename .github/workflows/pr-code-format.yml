name: "Check code formatting"

permissions:
  contents: read

on:
  pull_request:
    branches:
      - main
      - sycl
      - sycl-rel-**
      - 'users/**'

jobs:
  code_formatter:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    if: (github.repository == 'llvm/llvm-project' || github.repository == 'intel/llvm') && !contains(github.event.pull_request.labels.*.name, 'disable-lint')
    steps:
      - name: Fetch LLVM sources
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        with:
          separator: ","
          skip_initial_fetch: true
          base_sha: 'HEAD~1'
          sha: 'HEAD'

      # We need to pull the script from the main branch, so that we ensure
      # we get the latest version of this script.
      - name: Fetch code formatting utils
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.base_ref }}
          sparse-checkout: |
            llvm/utils/git/requirements_formatting.txt
            llvm/utils/git/code-format-helper.py
          sparse-checkout-cone-mode: false
          path: code-format-tools

      - name: "Listed files"
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Formatting files:"
          echo "$CHANGED_FILES"

      - name: Install clang-format
        uses: aminya/setup-cpp@a276e6e3d1db9160db5edc458e99a30d3b109949 # v1.7.1
        with:
          clangformat: 20.1.8

      - name: Setup Python env
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'code-format-tools/llvm/utils/git/requirements_formatting.txt'

      - name: Install python dependencies
        run: pip install -r code-format-tools/llvm/utils/git/requirements_formatting.txt

      - name: Run code formatter
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        # Create an empty comments file so the pr-write job doesn't fail.
        run: |
          echo "[]" > comments &&
          python ./code-format-tools/llvm/utils/git/code-format-helper.py \
            --write-comment-to-file \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --issue-number $GITHUB_PR_NUMBER \
            --start-rev HEAD~1 \
            --end-rev HEAD \
            --changed-files "$CHANGED_FILES"

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 #v5.0.0
        if: always()
        with:
          name: workflow-args
          path: |
            comments
