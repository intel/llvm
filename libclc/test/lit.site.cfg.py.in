@LIT_SITE_CFG_IN_HEADER@

import os
import sys

config.llvm_src_root = "@LLVM_SOURCE_DIR@"
config.llvm_obj_root = "@LLVM_BINARY_DIR@"
config.llvm_tools_dir = "@LLVM_TOOLS_DIR@"
config.llvm_libs_dir = "@LLVM_LIBS_DIR@"
config.llvm_shlib_dir = "@SHLIBDIR@"
config.llvm_plugin_ext = "@LLVM_PLUGIN_EXT@"
config.lit_tools_dir = "@LLVM_LIT_TOOLS_DIR@"
config.host_triple = "@LLVM_HOST_TRIPLE@"
config.target_triple = "@LLVM_TARGET_TRIPLE@"
config.host_arch = "@HOST_ARCH@"
config.python_executable = "@PYTHON_EXECUTABLE@"
config.libclc_root = "@LIBCLC_SOURCE_DIR@"
config.libclc_binary_dir = "@LIBCLC_BINARY_DIR@"
config.libclc_targets_to_test = "@LIBCLC_TARGET_TO_TEST@".split(";")
config.libclc_pertarget_test_dir = "@LIBCLC_PERTARGET_TEST_DIR@"

import lit.llvm
lit.llvm.initialize(lit_config, config)

config.libclc_target = lit_config.params.get("libclc_target")

if config.libclc_target is None:
    # This file is copied to per-target test directories by cmake,
    # use the name of the directory containing this file as the target name.
    dirname = os.path.dirname(__file__)
    if os.path.realpath(dirname) != os.path.realpath("@CMAKE_CURRENT_BINARY_DIR@"):
        config.libclc_target = os.path.basename(dirname)

# Let the main config do the real work.
lit_config.load_config(config, "@LIBCLC_TEST_SOURCE_DIR@/lit.cfg.py")
