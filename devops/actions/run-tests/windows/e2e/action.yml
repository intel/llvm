name: 'Run SYCL E2E tests on Windows'

inputs:
  ref:
    required: false
  binaries_artifact:
    required: false
  testing_mode:
    required: true
  extra_cmake_args:
    required: false
  target_devices:
    required: false
    default: all
  extra_lit_opts:
    required: false
  retention-days:
    required: false
  sycl_compiler:
    required: false
  cxx:
    required: false
    default: "cl"

runs:
  using: "composite"
  steps:
  - name: Checkout E2E tests
    uses: actions/checkout@v4
    with:
      path: llvm
      ref: ${{ inputs.ref || github.sha }}
      sparse-checkout: |
        llvm/utils/lit
        sycl/test-e2e
  - name: Download E2E Binaries
    if: inputs.testing_mode == 'run-only'
    uses: actions/download-artifact@v4
    with:
      name: ${{ inputs.binaries_artifact }}
  - name: Extract E2E Binaries
    if: inputs.testing_mode == 'run-only'
    shell: bash
    run: |
      mkdir build-e2e
      tar -xf e2e_bin.tar.gz -C build-e2e

  - name: Deduce E2E CMake options
    id: cmake_opts
    shell: bash
    env:
      CMAKE_EXTRA_ARGS: ${{ inputs.extra_cmake_args }}
    run: |
      if [ -n "$CMAKE_EXTRA_ARGS" ]; then
        echo "opts=$CMAKE_EXTRA_ARGS" >> $GITHUB_OUTPUT
      fi

  - name: Make E2E folder
    if: inputs.testing_mode != 'run-only'
    shell: bash
    run: |
      mkdir build-e2e

  - name: Configure E2E tests
    shell: bash
    run: |
      cmake -GNinja -B build-e2e -S./llvm/sycl/test-e2e -DCMAKE_CXX_COMPILER="${{ inputs.sycl_compiler || '$(which clang++).exe' }}" -DLEVEL_ZERO_LIBS_DIR="D:\\github\\level-zero_win-sdk\\lib" -DLEVEL_ZERO_INCLUDE="D:\\github\\level-zero_win-sdk\\include" -DLLVM_LIT="..\\llvm\\llvm\\utils\\lit\\lit.py" ${{ steps.cmake_opts.outputs.opts }}

  - name: Keep track of files after configuring E2E step
    if: ${{ always() && !cancelled() && inputs.binaries_artifact != '' && inputs.testing_mode != 'run-only'}}
    shell: bash
    run: ls build-e2e > e2econf_files.txt

  - name: Run End-to-End tests
    shell: bash {0}
    env:
      LIT_OPTS: -v --no-progress-bar --show-unsupported --show-pass --show-xfail --max-time ${{ inputs.e2e_testing_mode == 'run-only' && 1200 || 3600 }} --time-tests --param print_features=True --param test-mode=${{ inputs.testing_mode }} --param sycl_devices=${{ inputs.target_devices }} ${{ inputs.extra_lit_opts }}
    run: |
      # Run E2E tests.
      if [[ ${{ inputs.cxx }} == 'icx' ]]; then
         export LIT_FILTER_OUT="compile_on_win_with_mdd"
      fi
      cmake --build build-e2e --target check-sycl-e2e > e2e.log 2>&1

      exit_code=$?
      cat e2e.log
      if [ $exit_code -ne 0 ]; then
        # This is duplicated between lin/win, updates must change both.
        awk '/^Failed Tests|Unexpectedly Passed Tests|Unresolved tests|Timed Out Tests|Testing Time/{flag=1}/FAILED: CMakeFiles/{flag=0}flag' e2e.log >> $GITHUB_STEP_SUMMARY
      fi
      exit $exit_code

  # Github CI doesn't support containers on Windows, so we cannot guarantee
  # that paths are the same between building and running systems. To avoid
  # CMake issues related to absolute paths we reconfigure the build-e2e
  # folder on the run system.
  - name: Remove E2E configuration files
    if: ${{ always() && !cancelled() && inputs.binaries_artifact != '' && inputs.testing_mode != 'run-only'}}
    shell: bash
    run: |
      for FILE in $(cat e2econf_files.txt); do rm -r build-e2e/$FILE; done
      rm e2econf_files.txt

  - name: Pack E2E test binaries
    if: ${{ always() && !cancelled() && inputs.binaries_artifact != '' && inputs.testing_mode != 'run-only'}}
    shell: bash
    run: |
      tar -czf e2e_bin.tar.gz -C build-e2e .
  - name: Upload E2E test binaries
    if: ${{ always() && !cancelled() && inputs.binaries_artifact != '' && inputs.testing_mode != 'run-only'}}
    uses: actions/upload-artifact@v4
    with:
      name: ${{ inputs.binaries_artifact }}
      path: e2e_bin.tar.gz
      retention-days: ${{ inputs.retention-days }}
