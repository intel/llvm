name: 'Run llvm-test-suite testing'
description: 'Run E2E SYCL tests from llvm-test-suite'
inputs:
  test_ref:
    description: 'commit-ish identifier for test repo'
    required: true
    default: 'intel'
  sycl_artifact:
    description: 'Name of the artifact, that contains compiler toolchain'
    required: true
  lit_artifact:
    description: 'Name of the artifact, that contains LIT tool'
    required: true
  results_name_suffix:
    description: 'Name suffix of the results artifact'
    required: true
  check_sycl_all:
    description: 'List of SYCL backends with set of target devices per each to be tested iteratively'
    required: true
  cmake_args:
    description: 'Extra arguments to cmake command'
    required: false

post-if: false
runs:
  using: "composite"
  steps:
  - name: Checkout LLVM Test Suite
# TODO: use cached_checkout
    uses: actions/checkout@v3
    with:
      path: llvm_test_suite
      repository: 'intel/llvm-test-suite'
      ref: ${{ inputs.test_ref }}
  - name: Download compiler toolchain
    uses: actions/download-artifact@v3
    with:
      name: ${{ inputs.sycl_artifact }}
      path: install
  - name: Download LIT
    uses: actions/download-artifact@v3
    with:
      name: ${{ inputs.lit_artifact }}
      path: lit
  - name: Configure
    shell: cmd
    run: |
      echo ::group::CMake configuration
      dir
      mkdir build
      set PATH=%GITHUB_WORKSPACE%\install\bin;%PATH%
      cmake -GNinja -B.\build -S.\llvm_test_suite -DTEST_SUITE_SUBDIRS=SYCL -DCHECK_SYCL_ALL="${{ inputs.check_sycl_all }}" -DCMAKE_CXX_COMPILER="clang++" -DTEST_SUITE_LIT="%GITHUB_WORKSPACE%\lit\lit.py" ${{ inputs.cmake_args }}
      echo ::endgroup::
  - name: Run testing
    shell: cmd
    run: |
      set PATH=%GITHUB_WORKSPACE%\install\bin;%PATH%
      set LIT_OPTS=-v --no-progress-bar --show-unsupported --max-time 3600 --time-tests -o results_${{ inputs.results_name_suffix }}.json
      echo ::group::sycl-ls --verbose
      sycl-ls --verbose
      echo ::endgroup::
      echo ::group::SYCL_PI_TRACE=-1 sycl-ls
      set SYCL_PI_TRACE=-1
      sycl-ls
      set SYCL_PI_TRACE=
      echo ::endgroup::
      cd build
      ninja check-sycl-all
  - name: Upload test results
    uses: actions/upload-artifact@v1
    if: always()
    with:
      name: lit_results_windows
      path: build/results_${{ inputs.results_name_suffix }}.json
  - name: Cleanup
    shell: cmd
    if: always()
    run: |
      rmdir /q /s install
      rmdir /q /s lit
      rmdir /q /s build
      rmdir /q /s llvm_test_suite
