# Github branch settings for llvm-ci-perf-results
PERF_RES_GIT_REPO="ianayl/llvm-ci-perf-results"
PERF_RES_BRANCH="test-compute-bench"
# Path where PERF_RES_GIT_REPO is cloned
PERF_RES_PATH="./llvm-ci-perf-res"

# Git branch settings for compute-benchmarks
COMPUTE_BENCH_GIT_REPO="ianayl/compute-benchmarks"
COMPUTE_BENCH_BRANCH="update-sycl"

# Path to compile and build compute-benchmarks
COMPUTE_BENCH_PATH="./compute-benchmarks"
# Compile flags used to build compute-benchmarks
COMPUTE_BENCH_COMPILE_FLAGS="-j2"
# Number of iterations to run tests for
COMPUTE_BENCH_ITERATIONS="100"

# Path to temporarily store compute-benchmark results
OUTPUT_PATH="./uncached_res"

# Metrics to benchmark, and their allowed variance as a Python dictionary 
METRICS_VARIANCE='{"Median": 0.5}'
#METRICS_VARIANCE='{"Median": 0.5, "StdDev": 4.0}'

# Metrics to record using aggregate.py
METRICS_RECORDED='["Median", "StdDev"]'

# Threshold to store benchmark files before benchmarking
# TODO reconsider this
AVERAGE_THRESHOLD=3
# Default period of time to aggregate for the average
AVERAGE_CUTOFF_RANGE="7-days-ago"
# Accepts all valid date strings accepted by GNU coreutils `date` extension:
#
# https://www.gnu.org/software/coreutils/manual/html_node/Date-input-formats.html
#
# Relative timestamps are okay, but replace ' ' with '-', as whitespace gets
# removed when config file entries are sanitized.

# Format of timestamps used (unix `date` format string)
TIMESTAMP_FORMAT='%Y%m%d_%H%M%S'

# Log file for test cases that perform over the allowed variance
BENCHMARK_SLOW_LOG="./benchmarks-over_tolerance.log"
# Log file for test cases that errored / failed to build
BENCHMARK_ERROR_LOG="./benchmarks-errored.log"

# Enabled ONEAPI_DEVICE_SELECTOR backends
DEVICE_SELECTOR_ENABLED_BACKENDS="level_zero,opencl,cuda,hip" # Disabled: native_cpu
DEVICE_SELECTOR_ENABLED_DEVICES="cpu,gpu" # Disabled: fpga