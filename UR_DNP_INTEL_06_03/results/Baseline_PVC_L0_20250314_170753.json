"{\"results\": [{\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"value\": 23.025, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),23.200,23.025,11.46%,22.168,842.978,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 2.65872, \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"value\": 27.882, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),28.040,27.882,8.33%,26.787,742.128,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 2.3357319999999997, \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"value\": 24.478, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),24.676,24.478,8.63%,23.719,673.789,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 2.1295387999999997, \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"value\": 29.533, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),29.737,29.533,6.58%,28.268,619.492,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 1.9566945999999998, \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"value\": 11.744, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),11.812,11.744,3.50%,11.009,92.216,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 0.41342, \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"value\": 15.705, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),15.751,15.705,2.73%,14.782,84.813,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 0.4300023, \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"value\": 11.715, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),11.767,11.715,2.88%,10.867,31.377,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 0.33888959999999996, \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"value\": 1004.286, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),1003.449,1004.286,9.84%,16.648,5359.637,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 98.7393816, \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"value\": 589.886, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),588.676,589.886,3.63%,479.796,1754.614,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 21.368938800000002, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"value\": 309.885, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),3427.118,309.885,131.50%,302.757,14882.078,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 4506.66017, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"value\": 25.717, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),25.769,25.717,5.16%,24.080,139.395,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.3296804, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"value\": 250.5, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),250.657,250.500,1.65%,245.509,620.179,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 4.1358405000000005, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"value\": 28.782, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),28.845,28.782,4.40%,28.058,145.987,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.26918, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"value\": 251.56, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),251.637,251.560,1.48%,250.628,614.404,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 3.7242276000000003, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"value\": 5.915, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=sycl wgc=256 wgs=256),5.938,5.915,5.02%,4.989,22.293,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 0.29808759999999995, \"name\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"value\": 0.64, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=sycl count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),0.636,0.640,9.73%,0.502,1.097,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 0.0618828, \"name\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"value\": 4.321, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=l0 wgc=256 wgs=256),4.329,4.321,10.70%,3.716,42.275,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 0.463203, \"name\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"value\": 1.097, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=l0 count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),1.104,1.097,2.87%,1.028,1.188,[GPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 0.0316848, \"name\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 6.494, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),6.890,6.494,19.71%,6.026,74.520,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.3580189999999999, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 30.962, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),31.079,30.962,4.14%,28.821,104.487,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.2866706, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"value\": 6.379, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),6.767,6.379,18.49%,6.050,78.614,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 1.2512183, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"value\": 33.517, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),33.655,33.517,3.49%,31.824,73.660,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 1.1745595, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 6.367, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.737,6.367,21.66%,5.922,78.476,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 1.4592342, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 42.947, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),43.067,42.947,2.54%,41.361,88.953,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 1.0939018, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 6.827, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),6.888,6.827,4.52%,6.593,28.329,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 0.3113376, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 37.226, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),37.278,37.226,2.21%,35.421,69.130,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 0.8238437999999999, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"value\": 6.842, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),6.904,6.842,4.70%,6.611,29.886,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 0.324488, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"value\": 54.6, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),54.649,54.600,1.44%,52.491,93.711,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 0.7869456, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 6.905, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.974,6.905,4.51%,6.680,28.081,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 0.3145274, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 111.779, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),111.953,111.779,2.14%,109.635,141.478,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 2.3957942000000005, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"value\": 253.677, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Device destinationPlacement=Device size=1KB count=100),255.139,253.677,2.57%,249.191,796.236,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 6.5570723, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Device to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"value\": 135.161, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Host\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Host destinationPlacement=Device size=1KB count=100),136.021,135.161,1.73%,132.542,201.364,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 2.3531633, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Host to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"value\": 5.764, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueMemcpy(api=sycl sourcePlacement=Device destinationPlacement=Device size=1KB),5.855,5.764,14.29%,5.343,80.431,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.8366795, \"name\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures general SYCL queue memory copy performance from Device to Device with 1024 bytes per operation.\"}, {\"label\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"value\": 3.187, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=StreamMemory\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--type=Triad\", \"--size=10240\", \"--memoryPlacement=Device\", \"--useEvents=0\", \"--contents=Zeros\", \"--multiplier=1\", \"--vectorSize=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nStreamMemory(api=sycl type=Triad size=10KB useEvents=0 contents=Zeros memoryPlacement=Device multiplier=1 vectorSize=1),3.171,3.187,3.39%,0.311,3.499,[CPU],[GB/s]\\n\", \"passed\": true, \"unit\": \"GB/s\", \"explicit_group\": \"\", \"stddev\": 0.10749689999999999, \"name\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"lower_is_better\": false, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures Device memory bandwidth using Triad pattern with 10240 bytes. Higher values (GB/s) indicate better performance.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"value\": 2.142, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=0\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Device\", \"--dst=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Device dst=Device size=1KB ioq=0),2.152,2.142,5.30%,1.928,10.287,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.114056, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL out-of-order queue overhead for copy-only from Device to Device memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"value\": 1.731, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=1\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Host\", \"--dst=Host\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Host dst=Host size=1KB ioq=1),1.747,1.731,5.81%,1.638,7.500,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.1015007, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue overhead for copy-only from Device to Host memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"miscellaneous_benchmark_sycl VectorSum\", \"value\": 860.959, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/miscellaneous_benchmark_sycl\", \"--test=VectorSum\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--numberOfElementsX=512\", \"--numberOfElementsY=256\", \"--numberOfElementsZ=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nVectorSum(api=sycl numberOfElementsX=512 numberOfElementsY=256 numberOfElementsZ=256),860.320,860.959,0.44%,821.607,871.695,[GPU],bw [GB/s]\\n\", \"passed\": true, \"unit\": \"bw GB/s\", \"explicit_group\": \"\", \"stddev\": 3.7854080000000003, \"name\": \"miscellaneous_benchmark_sycl VectorSum\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures performance of vector addition across 3D grid (512x256x256 elements) using SYCL.\"}], \"name\": \"Baseline_PVC_L0\", \"hostname\": \"66829e7efe79\", \"git_hash\": \"6b97436\", \"github_repo\": \"intel/llvm\", \"date\": \"2025-03-14T17:07:53.618539+00:00\"}"