"{\"results\": [{\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"value\": 15.832, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),16.127,15.832,24.23%,13.446,911.823,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 3.9075721, \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through Level Zero API. Uses immediate command lists with 10 minimal kernels to isolate submission overhead from execution time.\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"value\": 15.911, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),16.002,15.911,20.42%,13.580,987.399,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 3.2676084000000003, \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through Level Zero API. Uses immediate command lists with 10 minimal kernels to isolate submission overhead from execution time.\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"value\": 31.229, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),31.233,31.229,16.25%,22.456,1171.612,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 5.075362500000001, \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through SYCL API.Uses 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.\"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"value\": 24.704, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),24.979,24.704,13.89%,23.774,1087.192,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 3.4695831, \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through SYCL API.Uses 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"value\": 257.663, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Device destinationPlacement=Device size=1KB count=100),259.325,257.663,4.59%,253.966,1376.558,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 11.903017499999999, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Device to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"value\": 135.07, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Host\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Host destinationPlacement=Device size=1KB count=100),135.993,135.070,1.79%,133.064,193.920,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 2.4342747, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Host to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"value\": 5.66, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueMemcpy(api=sycl sourcePlacement=Device destinationPlacement=Device size=1KB),6.007,5.660,22.18%,5.105,123.681,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 1.3323525999999999, \"name\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures general SYCL queue memory copy performance from Device to Device with 1024 bytes per operation.\"}, {\"label\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"value\": 3.18, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=StreamMemory\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--type=Triad\", \"--size=10240\", \"--memoryPlacement=Device\", \"--useEvents=0\", \"--contents=Zeros\", \"--multiplier=1\", \"--vectorSize=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nStreamMemory(api=sycl type=Triad size=10KB useEvents=0 contents=Zeros memoryPlacement=Device multiplier=1 vectorSize=1),3.165,3.180,3.27%,0.464,3.427,[CPU],[GB/s]\\n\", \"passed\": true, \"unit\": \"GB/s\", \"explicit_group\": \"\", \"stddev\": 0.1034955, \"name\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"lower_is_better\": false, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures Device memory bandwidth using Triad pattern with 10240 bytes. Higher values (GB/s) indicate better performance.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"value\": 2.162, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=0\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Device\", \"--dst=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Device dst=Device size=1KB ioq=0),2.172,2.162,9.91%,1.891,59.137,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.21524520000000003, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL out-of-order queue overhead for copy-only from Device to Device memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"value\": 1.747, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=1\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Host\", \"--dst=Host\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Host dst=Host size=1KB ioq=1),1.761,1.747,5.53%,1.650,7.541,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.09738329999999999, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue overhead for copy-only from Device to Host memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"miscellaneous_benchmark_sycl VectorSum\", \"value\": 859.195, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/miscellaneous_benchmark_sycl\", \"--test=VectorSum\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--numberOfElementsX=512\", \"--numberOfElementsY=256\", \"--numberOfElementsZ=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nVectorSum(api=sycl numberOfElementsX=512 numberOfElementsY=256 numberOfElementsZ=256),858.728,859.195,0.39%,815.748,874.421,[GPU],bw [GB/s]\\n\", \"passed\": true, \"unit\": \"bw GB/s\", \"explicit_group\": \"\", \"stddev\": 3.3490392, \"name\": \"miscellaneous_benchmark_sycl VectorSum\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures performance of vector addition across 3D grid (512x256x256 elements) using SYCL.\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"value\": 28.934, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),28.981,28.934,1.96%,27.259,46.164,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 0.5680276, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"value\": 309.182, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),311.056,309.182,2.61%,302.621,940.160,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 8.1185616, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"value\": 25.797, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),25.896,25.797,5.41%,24.199,138.883,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.4009736000000002, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"value\": 28.752, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),28.827,28.752,4.97%,27.708,143.633,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.4327018999999999, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"value\": 246.079, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),246.363,246.079,3.57%,242.111,1113.823,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 8.7951591, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"value\": 246.599, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),246.690,246.599,2.93%,243.329,945.009,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 7.228017, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"value\": 5.805, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=sycl wgc=256 wgs=256),5.853,5.805,17.55%,4.924,101.151,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 1.0272015, \"name\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"value\": 4.22, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=l0 wgc=256 wgs=256),4.255,4.220,17.66%,3.751,76.872,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 0.751433, \"name\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"value\": 0.64, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=sycl count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),0.643,0.640,9.60%,0.525,1.257,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 0.061728000000000005, \"name\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"value\": 90.994, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=l0 count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),91.525,90.994,1.58%,89.074,96.754,[GPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 1.4460950000000001, \"name\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 6.562, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),6.957,6.562,19.37%,6.134,60.271,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.3475709, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 210.484, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),213.115,210.484,3.92%,175.123,590.496,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 8.354108, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 6.539, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.895,6.539,21.02%,6.094,108.060,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 1.4493289999999999, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 135.687, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),151.151,135.687,22.52%,113.039,263.612,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 34.0392052, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 7.047, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.112,7.047,8.55%,6.651,43.641,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 0.6080760000000001, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 504.606, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),508.172,504.606,2.24%,440.630,867.344,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 11.383052800000002, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 6.903, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),7.015,6.903,11.34%,6.621,46.523,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 0.795501, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 3343.167, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),3344.094,3343.167,0.54%,3282.662,3444.987,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 18.0581076, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}], \"name\": \"baseline\", \"hostname\": \"365369f88166\", \"git_hash\": \"e9b1375\", \"github_repo\": \"intel/llvm\", \"date\": \"2025-03-13T19:49:34.911923+00:00\"}"