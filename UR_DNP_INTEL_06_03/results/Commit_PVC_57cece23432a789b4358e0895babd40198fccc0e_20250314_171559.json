"{\"results\": [{\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"value\": 22.958, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),23.133,22.958,14.60%,22.046,1078.460,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 3.3774179999999996, \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"value\": 27.401, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),27.572,27.401,6.45%,26.134,552.640,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 1.778394, \"name\": \"api_overhead_benchmark_sycl SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"value\": 24.188, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),24.369,24.188,2.32%,23.333,53.056,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 0.5653608, \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"value\": 28.266, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=sycl Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),28.475,28.266,6.17%,27.041,542.408,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 1.7569075, \"name\": \"api_overhead_benchmark_sycl SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through SYCL API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time. \"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"value\": 11.619, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),11.688,11.619,3.05%,11.042,73.111,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 0.356484, \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"value\": 15.273, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=0\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=0 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),15.322,15.273,2.63%,14.320,79.021,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 0.4029686, \"name\": \"api_overhead_benchmark_l0 SubmitKernel out of order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting out-of-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"value\": 12.101, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=0\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=0),12.142,12.101,2.76%,11.267,27.577,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel\", \"stddev\": 0.3351192, \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"value\": 18.704, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_l0\", \"--test=SubmitKernel\", \"--csv\", \"--noHeaders\", \"--Ioq=1\", \"--DiscardEvents=0\", \"--MeasureCompletion=1\", \"--iterations=100000\", \"--Profiling=0\", \"--NumKernels=10\", \"--KernelExecTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitKernel(api=l0 Profiling=0 Ioq=1 DiscardEvents=0 NumKernels=10 KernelExecTime=1 MeasureCompletion=1),18.798,18.704,3.52%,16.099,56.749,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitKernel With Completion\", \"stddev\": 0.6616896, \"name\": \"api_overhead_benchmark_l0 SubmitKernel in order with measure completion\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures CPU time overhead of submitting in-order kernels through Level Zero API. Runs 10 simple kernels with minimal execution time to isolate API overhead from kernel execution time.  Uses immediate command lists\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"value\": 29.237, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),29.402,29.237,5.07%,27.720,139.357,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.4906814000000002, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"value\": 304.722, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=sycl numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),306.759,304.722,2.38%,300.063,842.477,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 7.3008641999999995, \"name\": \"graph_api_benchmark_sycl SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"value\": 25.899, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),25.961,25.899,5.14%,24.399,130.486,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.3343953999999998, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"value\": 249.162, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=0\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=0 withCopyOffload=1 immediateAppendCmdList=0),249.370,249.162,1.58%,245.437,620.392,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 3.9400460000000006, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:0, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels without graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"value\": 28.471, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=5\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=5 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),28.527,28.471,4.59%,27.647,148.271,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 5\", \"stddev\": 1.3093892999999999, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:5\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 5 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"value\": 251.489, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_l0\", \"--test=SinKernelGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--numKernels=100\", \"--withGraphs=1\", \"--withCopyOffload=1\", \"--immediateAppendCmdList=0\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSinKernelGraph(api=l0 numKernels=100 withGraphs=1 withCopyOffload=1 immediateAppendCmdList=0),251.570,251.489,0.97%,250.646,477.562,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SinKernelGraph 100\", \"stddev\": 2.440229, \"name\": \"graph_api_benchmark_l0 SinKernelGraph graphs:1, numKernels:100\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures L0 performance when executing 100 sin kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"value\": 5.832, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=sycl wgc=256 wgs=256),5.862,5.832,5.32%,5.144,23.532,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 0.31185840000000004, \"name\": \"ulls_benchmark_sycl EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"value\": 0.617, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_sycl\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=sycl count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),0.618,0.617,10.30%,0.502,1.211,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 0.063654, \"name\": \"ulls_benchmark_sycl KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"value\": 4.287, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=EmptyKernel\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--wgs=256\", \"--wgc=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nEmptyKernel(api=l0 wgc=256 wgs=256),4.284,4.287,5.05%,3.697,12.713,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"EmptyKernel 1000 256\", \"stddev\": 0.21634199999999998, \"name\": \"ulls_benchmark_l0 EmptyKernel wgc:1000, wgs:256\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"value\": 1.051, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/ulls_benchmark_l0\", \"--test=KernelSwitch\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--count=8\", \"--kernelTime=200\", \"--barrier=0\", \"--hostVisible=0\", \"--ioq=1\", \"--ctrBasedEvents=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nKernelSwitch(api=l0 count=8 kernelTime=200 barrier=0 hostVisible=0 ioq=1 ctrBasedEvents=1),1.059,1.051,2.71%,0.982,1.142,[GPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"KernelSwitch 8 200\", \"stddev\": 0.028698899999999996, \"name\": \"ulls_benchmark_l0 KernelSwitch count 8 kernelTime 200\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"value\": 6.676, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),7.125,6.676,28.02%,6.124,105.438,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.9964250000000001, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"value\": 31.268, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),31.374,31.268,3.44%,29.539,69.218,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.0792656, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"value\": 6.771, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),7.078,6.771,16.18%,6.251,67.926,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 1.1452204000000001, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"value\": 33.62, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),33.736,33.620,3.24%,31.883,71.543,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 1.0930464, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"value\": 6.293, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.645,6.293,17.23%,6.026,65.687,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 1.1449335, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"value\": 43.077, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=0\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=0 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),43.194,43.077,2.52%,41.351,95.198,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 1.0884888000000001, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 0 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"value\": 6.73, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=0),6.799,6.730,4.68%,6.514,27.591,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 0.31819319999999995, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"value\": 37.688, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=4\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=4 KernelExecutionTime=1 MeasureCompletionTime=1),37.647,37.688,2.78%,35.945,121.358,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 4\", \"stddev\": 1.0465866, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:4 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 4 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"value\": 7.316, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=0),7.354,7.316,4.58%,6.946,29.892,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 0.33681320000000003, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"value\": 54.141, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=10\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=10 KernelExecutionTime=1 MeasureCompletionTime=1),54.153,54.141,1.88%,51.930,105.670,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 10\", \"stddev\": 1.0180763999999998, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:10 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 10 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"value\": 6.824, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=0\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=0),6.898,6.824,4.47%,6.627,28.880,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 0.30834059999999996, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 0\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"value\": 112.118, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/graph_api_benchmark_sycl\", \"--test=SubmitGraph\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--NumKernels=32\", \"--MeasureCompletionTime=1\", \"--InOrderQueue=1\", \"--Profiling=0\", \"--KernelExecutionTime=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nSubmitGraph(api=sycl Profiling=0 InOrderQueue=1 NumKernels=32 KernelExecutionTime=1 MeasureCompletionTime=1),112.136,112.118,0.64%,110.139,131.573,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"SubmitGraph 32\", \"stddev\": 0.7176704, \"name\": \"graph_api_benchmark_sycl SubmitGraph numKernels:32 ioq 1 measureCompletion 1\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL performance when executing 32 trivial kernels using graphs. Tests overhead and benefits of graph-based execution.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"value\": 252.527, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Device destinationPlacement=Device size=1KB count=100),253.998,252.527,2.64%,248.535,806.577,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 6.7055472, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Device to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"value\": 132.548, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueInOrderMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--IsCopyOnly=0\", \"--sourcePlacement=Host\", \"--destinationPlacement=Device\", \"--size=1024\", \"--count=100\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueInOrderMemcpy(api=sycl IsCopyOnly=0 sourcePlacement=Host destinationPlacement=Device size=1KB count=100),139.375,132.548,19.51%,131.018,311.481,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 27.192062500000002, \"name\": \"memory_benchmark_sycl QueueInOrderMemcpy from Host to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue memory copy performance for copy and command submission from Host to Device with 1024 bytes, executed 100 times per iteration.\"}, {\"label\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"value\": 5.684, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=QueueMemcpy\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--sourcePlacement=Device\", \"--destinationPlacement=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nQueueMemcpy(api=sycl sourcePlacement=Device destinationPlacement=Device size=1KB),5.864,5.684,12.22%,5.236,45.888,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.7165808, \"name\": \"memory_benchmark_sycl QueueMemcpy from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures general SYCL queue memory copy performance from Device to Device with 1024 bytes per operation.\"}, {\"label\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"value\": 3.166, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/memory_benchmark_sycl\", \"--test=StreamMemory\", \"--csv\", \"--noHeaders\", \"--iterations=10000\", \"--type=Triad\", \"--size=10240\", \"--memoryPlacement=Device\", \"--useEvents=0\", \"--contents=Zeros\", \"--multiplier=1\", \"--vectorSize=1\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nStreamMemory(api=sycl type=Triad size=10KB useEvents=0 contents=Zeros memoryPlacement=Device multiplier=1 vectorSize=1),3.150,3.166,3.49%,0.536,3.355,[CPU],[GB/s]\\n\", \"passed\": true, \"unit\": \"GB/s\", \"explicit_group\": \"\", \"stddev\": 0.109935, \"name\": \"memory_benchmark_sycl StreamMemory, placement Device, type Triad, size 10240\", \"lower_is_better\": false, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures Device memory bandwidth using Triad pattern with 10240 bytes. Higher values (GB/s) indicate better performance.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"value\": 2.132, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=0\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Device\", \"--dst=Device\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Device dst=Device size=1KB ioq=0),2.140,2.132,7.76%,1.884,38.037,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.16606400000000002, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue out of order from Device to Device, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL out-of-order queue overhead for copy-only from Device to Device memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"value\": 1.718, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/api_overhead_benchmark_sycl\", \"--test=ExecImmediateCopyQueue\", \"--csv\", \"--noHeaders\", \"--iterations=100000\", \"--ioq=1\", \"--IsCopyOnly=1\", \"--MeasureCompletionTime=0\", \"--src=Host\", \"--dst=Host\", \"--size=1024\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nExecImmediateCopyQueue(api=sycl IsCopyOnly=1 MeasureCompletionTime=0 src=Host dst=Host size=1KB ioq=1),1.730,1.718,5.57%,1.627,8.434,[CPU],[us]\\n\", \"passed\": true, \"unit\": \"\\u03bcs\", \"explicit_group\": \"\", \"stddev\": 0.096361, \"name\": \"api_overhead_benchmark_sycl ExecImmediateCopyQueue in order from Device to Host, size 1024\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures SYCL in-order queue overhead for copy-only from Device to Host memory with 1024 bytes. Tests immediate execution overheads.\"}, {\"label\": \"miscellaneous_benchmark_sycl VectorSum\", \"value\": 861.548, \"command\": [\"/__w/llvm/llvm/llvm_test_workdir/compute-benchmarks-build/bin/miscellaneous_benchmark_sycl\", \"--test=VectorSum\", \"--csv\", \"--noHeaders\", \"--iterations=1000\", \"--numberOfElementsX=512\", \"--numberOfElementsY=256\", \"--numberOfElementsZ=256\"], \"env\": {}, \"stdout\": \"TestCase,Mean,Median,StdDev,Min,Max,Type\\nVectorSum(api=sycl numberOfElementsX=512 numberOfElementsY=256 numberOfElementsZ=256),861.039,861.548,0.47%,813.638,871.695,[GPU],bw [GB/s]\\n\", \"passed\": true, \"unit\": \"bw GB/s\", \"explicit_group\": \"\", \"stddev\": 4.046883299999999, \"name\": \"miscellaneous_benchmark_sycl VectorSum\", \"lower_is_better\": true, \"suite\": \"Compute Benchmarks\", \"description\": \"Measures performance of vector addition across 3D grid (512x256x256 elements) using SYCL.\"}], \"name\": \"Commit_PVC_57cece23432a789b4358e0895babd40198fccc0e\", \"hostname\": \"224d192f92a9\", \"git_hash\": \"a3f2b4d\", \"github_repo\": \"intel/llvm\", \"date\": \"2025-03-14T17:15:59.509731+00:00\"}"