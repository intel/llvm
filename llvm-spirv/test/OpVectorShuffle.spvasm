; REQUIRES: spirv-as
; RUN: spirv-as --target-env spv1.0 -o %t.spv %s
; RUN: spirv-val %t.spv
; RUN: llvm-spirv -r -o - %t.spv | llvm-dis | FileCheck %s
               OpCapability Addresses
               OpCapability Kernel
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %1 "testVecShuffle"
       %void = OpTypeVoid
       %uint = OpTypeInt 32 0
     %uintv2 = OpTypeVector %uint 2
     %uintv3 = OpTypeVector %uint 3
     %uintv4 = OpTypeVector %uint 4
       %func = OpTypeFunction %void %uintv2 %uintv3

          %1 = OpFunction %void None %func
        %pv2 = OpFunctionParameter %uintv2
        %pv3 = OpFunctionParameter %uintv3
      %entry = OpLabel

               ; Same vector lengths
        %vs1 = OpVectorShuffle %uintv4 %pv3 %pv3 0 1 3 5
; CHECK: shufflevector <3 x i32> %[[#]], <3 x i32> %[[#]], <4 x i32> <i32 0, i32 1, i32 3, i32 5>

               ; vec1 smaller than vec2
        %vs2 = OpVectorShuffle %uintv4 %pv2 %pv3 0 1 3 4
; CHECK: %[[VS2EXT:[0-9a-z]+]] = shufflevector <2 x i32> %0, <2 x i32> poison, <3 x i32> <i32 0, i32 1, i32 poison>
; CHECK: shufflevector <3 x i32> %[[VS2EXT]], <3 x i32> %[[#]], <4 x i32> <i32 0, i32 1, i32 4, i32 5>

               ; vec1 larger than vec2
        %vs3 = OpVectorShuffle %uintv4 %pv3 %pv2 0 1 3 4
; CHECK: %[[VS3EXT:[0-9a-z]+]] = shufflevector <2 x i32> %0, <2 x i32> poison, <3 x i32> <i32 0, i32 1, i32 poison>
; CHECK: shufflevector <3 x i32> %[[#]], <3 x i32> %[[VS3EXT]], <4 x i32> <i32 0, i32 1, i32 3, i32 4>

               OpReturn
               OpFunctionEnd
