<%!
import os
import re
from templates import helper as th
%><%
    n=namespace
    N=n.upper()
    x=tags['$x']
    X=x.upper()
%>
// Copyright (C) 2025 Intel Corporation
//
// Part of the Unified-Runtime Project, under the Apache License v2.0 with LLVM Exceptions.
// See LICENSE.TXT
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

// This file is autogenerated from the template at ${os.path.dirname(self.template.filename)}/${os.path.basename(self.template.filename)}

%for obj in th.extract_objs(specs, r"enum"):
 %if obj["name"] == '$x_structure_type_t':
  %for etor in th.get_etors(obj):
   %if 'UINT32' not in etor['name']:
%if 'guard' in etor:
// ${etor['guard']}
%endif
template <>
struct stype_map<${x}_${etor['desc'][3:]}> : stype_map_impl<${X}_${etor['name'][3:]}> {};
%if 'guard' in etor:
// end ${etor['guard']}
%endif
   %endif
  %endfor
 %endif
%endfor

